%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: DataTransformation.pdf
%%Creator: Adobe Acrobat 9.0.0
%%For: String
%%CreationDate: 6/17/2016, 2:50:04 PM
%%BoundingBox: 0 0 780 432
%%HiResBoundingBox: 0 0 779.8110 431.7170
%%CropBox: 0 0 779.8110 431.7170
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 1159 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.2.1-c041 52.342996, 2008/05/07-20:48:00        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
   dc:format="application/pdf"
   xmp:CreateDate="2016-06-17T14:47:56+08:00"
   xmp:CreatorTool=""
   xmp:ModifyDate="2016-06-17T14:49:47+08:00"
   xmp:MetadataDate="2016-06-17T14:49:47+08:00"
   pdf:Keywords=""
   pdf:Producer="Foxit PhantomPDF Printer Version 6.0.4.1129"
   xmpMM:DocumentID="uuid:495d934f-8dc0-49da-96f1-5f48b298e1aa"
   xmpMM:InstanceID="uuid:074b99a0-6937-46f4-a750-223fa7c87955">
   <dc:creator>
    <rdf:Seq>
     <rdf:li/>
    </rdf:Seq>
   </dc:creator>
   <dc:description>
    <rdf:Alt>
     <rdf:li xml:lang="x-default"/>
    </rdf:Alt>
   </dc:description>
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default"/>
    </rdf:Alt>
   </dc:title>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
Adobe_AGM_Core/ps gx
gsave
/0 
[/DeviceCMYK] /CSA add_res
grestore
Adobe_AGM_Core/pt gx
%%EndPageSetup
1 -1 scale 0 -431.717 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 431.717 li
779.811 431.717 li
779.811 0 li
cp
clp
[1 0 0 1 -36 0 ]ct
.12 512.64 mo
959.4 512.64 li
959.4 -27.0001 li
.12 -27.0001 li
cp
false sop
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
f
.96 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
198.36 31.2 mo
198.36 176.04 li
.750271 .679713 .654902 .901945 cmyk
@
322.8 31.2 mo
322.8 176.04 li
@
411.36 31.2 mo
411.36 176.04 li
@
517.92 31.2 mo
517.92 176.04 li
@
624.36 31.2 mo
624.36 176.04 li
@
160.08 60.48 mo
731.4 60.48 li
@
160.08 89.16 mo
731.4 89.16 li
@
160.08 117.96 mo
731.4 117.96 li
@
160.08 146.76 mo
731.4 146.76 li
@
160.56 31.2 mo
160.56 176.04 li
@
730.92 31.2 mo
730.92 176.04 li
@
160.08 31.68 mo
731.4 31.68 li
@
160.08 175.56 mo
731.4 175.56 li
@
%ADOBeginSubsetFont: PBAAAA+Times#20New#20Roman Initial
ct_T42Dict begin
-0.566 -0.305 2.043 1.039
 256 array 0 1 255 {1 index exch /.notdef put} for  /PBAAAA+Times#20New#20Roman
Type42DictBegin
[<00010000000b000b000b000b63767420fdfd661e000000bc000010846670
676d3d388bb30000114000000a59676c796645cbe1eb00005824000024da
686561643b5284e500001b9c00000036686865612b084c1200001bd40000
0024686d747862066e3900001bf8000000446c6f6361614e000000001c3c
000000486d617870ae07240600001c84000000206e616d65ce4de8ad0000
1ca400002bea70726570c68837970000489000000f936764697200000000
0000000000000000058e0000054c001f054c001c0394001b0000ffe10000
ffe40000ffe8fe4afffc056b0023fe6affe00313000000ad000000ad0000
000000250096009f002400f0013100c200c0004a00a60041005000940047
00cf00af000e007901cb00040023004400a80025011f0002004600170105
009900d9005c007200e500e00028004b00de011200240045007000160039
ffe90016004b0088ffb900d9000a004300ae00ba016c0153002f00430048
022c012b0025008fffc000170028ffcdffd80025009d00e50124ffb10048
009d00e600110027007f00910012006a00cafffc00000024006200a7017c
01e900210060008b0434048aff6b003b00b500d5014bff6b004d007905d8
09b5006c009100a3011701c0ffdfffe700be04010065007f008200880099
00b200c0022e034305a000200026003d004e00610065007b00d901130131
0340ff27ff42ff99004e00a700f2022b02c603070011002b0049005f008d
00a100af00d600e400f5010b0135019d01ab01ab01d101ee05d80000004b
0075007a0080009d00a600a700ac00b90131013102170217000200170029
00550080008f00a500b200b300d0014b015901c001c103a50530fe3fff14
ff15ffe7ffff002a00580099009f00c100e400f40130015901ab01ab0322
0374041e04740532fd81004d0064009c00d000d100d600de00e500f500f8
012a012a01e1027e027fff57ffa8ffe500000008001f00380051005a006f
0076007700a200c000c200c400f101fb0209027e02cf04c5057a05f0ff92
001200260042004b004f005100530064008b00ae00b200b800b800d600f5
0111012001310138014e01520167018f019601b801d901d9020602210271
02ea03b003cb03dc04360505ff3a00120016001e001f002300570068006c
007e0088009200a500a800c500c901150126012d013001d601d901f6023b
0244024402a302cf02de0385038f04fc0586fee0feebfefbff8a00070044
00470058007500aa00e400ef011601200129016a017301e3027e029002b4
030e0310032303350341035403590388039403c803ce047204ab04da0549
056105ab0761fe6efed1ff4bff84000000010006001e0027002c00340037
00620066006a006b006c007000700072007c0081008a008e0091009200a0
00ab00b800bf00c900d500dd00ec00f40100012101300169016a016d017c
0185018e018e019901ac01c101c501c901e101f601f601f6022202220228
0236023f02430246026702850285029402d002d602e8031c0363037f0380
0380039e03b603d90400040404ff053205320548058b05a706cb07280748
076208ccfcedfd2afd59fddefe00fe1afe5bfe96fec1fee7ff56ff790001
0025002d002e007c00870091009900a100a500a500aa00af00b600c600cc
00d700dd00ec00f201020105011701180123012a012c0131013f01470149
0149014d01510151015501550157015a015a0161016201680168017f0180
018201830184018d0195019501950198019901a501a901b601b601b701ba
01ba01d501df01e601ea01f2020002000203021702250227022f02390243
02430247024f025202520267026f026f027002720276027e02a702b302b9
02d603130325032d03610371039903ae03c203d403f90402042c042f043c
04560467048304cf04d104d804fb051f05450568059e05c2061b06340655
066a069806af06e806fc070607500762077c07d407ff082500ad00c700aa
00b5000000000000000000000000002f06cf01730514047802df009c0018
037005870155002500060254036c038e03d2056601f0032001da018a0369
036bffa3034602f8036f015602bf0122031f053a0366008c00ff01ab02e1
02f402e70415015402e90128049101b7026f034302060000000005d30415
048305e8000002d7003a027d01c002c503830383ffbd003a059e01df059e
02d1002004e0021300df01c001870297000000ce0269028b0058043405fb
0069015a01a905780182013e0288012a03d4049e00e5032302f301f00196
007a00cd014a0424025e023901ab00cf00fd011e00ed0171007001950040
01bb01dd01b8000101a803a7014c020c018d01b0020d0137010000cd0321
01d4030a00590000000001260215015002f0025503bc06d00335010100d0
00d2007a01030130007c000000000000000000fe006e006600940227002b
0045004d00d3013200180097004100f4febcffe9001605d8058b009100a1
032c00520030005d02cb003a009200e500e500580086003200ba00990088
00300298007cff8001640028004d0065000200b8016a002f010b00110017
0100007f00040016022200a6005f000000f8000a00ca0043004b01ee0077
012000f401c00028045f0000008c044500c20060007b008b008b0064005d
00c2009c009206b505d3004f011700000420fe9e00cc00dc005e004600e3
0032001a003c0091005a00a1042c0041002000490071009c009cfe480040
0040008600cb0102007d003a003e006a0050044800290096ff6a00970069
00e0004c001b00c90069ff970043ffbd0052ff83ff8b005fffa1ff5c0067
0053ffa8002a0076ffb20036008705590256052b043400de00c901c40048
00db018b00b3004800da01160125011800ea00ea00ae0000003e05bb008a
04d70053003fff8cffd500150028002200990062004a00e4006d00ee00e5
004803c00033fe4e02b1ff460370007905df0051ffa7ff1f010a0068ff6c
004f00bc00a5070500ab0080001e05a50025008b04660230006900290016
012f0080005c059f03d703f1047000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000160016001700180018001a
001b00210029002a002a002c002d002e002f003200340036003700380039
003a003b003c003d003e004200460046004a004c004d004f004f00530053
005500570059005c005c005d005d005e005f006100640065006700680069
0069006b006e006f00710076007600770077007d007e007f008000810082
008600870087008a008d008e0096009600970097009c00a000a200a300a6
00ac00b300b300b600b800b900be00bf00c100c200c400c500c600c700ca
00ca00cb00cc00cc00ce00d100d200d300d700da00db00dc00de00df00e0
00e000e300e640578574737271706f6e6d6c6b6a6968676665625d55544f
4e403f3e3d3c3b3a393837363534333231302f2e2d2c2b2a292827262524
232221201f1e1d1c1b1a1918171614131211100f0e0d0c0b0a0908070605
04030201002c4523466020b02660b004262348482d2c452346236120b026
61b004262348482d2c45234660b0206120b04660b004262348482d2c4523
462361b0206020b02661b02061b004262348482d2c45234660b0406120b0
6660b004262348482d2c4523462361b0406020b02661b04061b004262348
482d2c0110203c003c2d2c20452320b0cd442320b8015a51582320b08d44
235920b0ed51582320b04d44235920b09051582320b00d44235921212d2c
20204518684420b001602045b04676688a4560442d2c01b10b0a43234365
0a2d2c00b10a0b4323430b2d2c00b0172370b101173e01b0172370b10217
453ab10200080d2d2c45b01a234445b01923442d2c2045b00325456164b0
50515845441b2121592d2cb00143632362b0002342b00f2b2d2c2045b000
4360442d2c01b00643b00743650a2d2c2069b04061b0008b20b12cc08a8c
b8100062602b0c642364615c58b00361592d2c45b0112bb0172344b0177a
e4182d2c45b0112bb01723442d2cb01243588745b0112bb0172344b0177a
e41b038a45186920b01723448a8a8720b0a05158b0112bb0172344b0177a
e41b21b0177ae45959182d2cb0022546608a46b040618c482d2c4b53205c
58b002855958b00185592d2c20b0032545b019234445b01a234445652345
20b00325606a20b009234223688a6a606120b01a8ab000527921b21a1a40
b9ffe0001a45208a54582321b03f1b235961441cb114008a5279b3194020
1945208a54582321b03f1b235961442d2cb110114323430b2d2cb10e0f43
23430b2d2cb10c0d4323430b2d2cb10c0d432343650b2d2cb10e0f432343
650b2d2cb11011432343650b2d2c4b525845441b2121592d2c0120b00325
2349b04060b0206320b000525823b002253823b002256538008a63381b21
2121212159012d2c4bb06451584569b00943608a103a1b212110592d2c01
b005251023208af500b0016023edec2d2c01b005251023208af500b00161
23edec2d2c01b0062510f500edec2d2c20b001600110203c003c2d2c20b0
01610110203c003c2d2cb02b2bb02a2a2d2c00b00743b006430b2d2c3eb0
2a2a2d2c352d2c76b802b023701020b802b04520b0005058b00161593a2f
182d2c21210c6423648bb84000622d2c21b08051580c6423648bb8200062
1bb200402f2b59b002602d2c21b0c051580c6423648bb81555621bb20080
2f2b59b002602d2c0c6423648bb84000626023212d2cb4000100000015b0
0826b00826b00826b008260f10161345683ab001162d2cb4000100000015
b00826b00826b00826b008260f1016134568653ab001162d2c4b53234b51
5a5820458a60441b2121592d2c4b545820458a60441b2121592d2c4b5323
4b515a58381b2121592d2c4b5458381b2121592d2c014b53234b515ab002
25b00425b006254923451869525a58b00225b00225b00525462345696048
592121212d2cb0134358031b02592d2cb0134358021b03592d2c4b54b012
435c5a58381b2121592d2cb012435c580cb00425b00425060c6423646164
b807085158b00425b00425012046b01060482046b0106048590a21211b21
21592d2cb012435c580cb00425b00425060c6423646164b807085158b004
25b00425012046b8fff060482046b8fff06048590a21211b2121592d2c4b
53234b515a58b03a2b1b2121592d2c4b53234b515a58b03b2b1b2121592d
2c4b53234b515ab012435c5a58381b2121592d2c0c8a034b54b00426024b
545a8a8a0ab012435c5a58381b2121592d2c462346608a8a462320468a60
8a61b8ff8062232010238ab9035803588a70456020b0005058b00161b8ff
ba8b1bb0468c59b0106068013a2d2c2320b000508a8a64b10003255458b0
401bb10103255458b037438b59b04f2b5923b0622b2321235865592d2cb1
3a000c215460432d2cb1020042b123018851b1400188535a58b910000020
885458b202010243604259b12401885158b920000040885458b202020243
6042b12401885458b2022002436042004b014b5258b2020802436042591b
b940000080885458b202040243604259b94000008063b80100885458b202
080243604259b94000010063b80200885458b202100243604259b1260188
5158b94000020063b80400885458b202400243604259b94000040063b808
00885458b202800243604259b12801885158b94000080063b81000885458
ba00020100000243604259595959595959b10002435458400a37403a403b
403e023f021bb10102435458b237403aba0100003b0100b33e013f011bb1
8002435258b237403ab80180b13b401bb901000002435258b237403aba01
80003b01401bb901800002435258b237403ab80200b13b401bb237403aba
0100003b0100595959b9400000808855b94000020063b8040088555a58b3
3e003f011bb33e003f0159595942424242422d2cb0024354584b53234b51
5a58381b2121591b21212121592d2c012d2cb0022563b0206066b00225b8
2000626023622d2c234ab1024e2b2d2c234ab1014e2b2d2c238a4a234564
b0022564b002256164b03543525821206459b1024e2b23b000505865592d
2c238a4a234564b0022564b002256164b03543525821206459b1014e2b23
b000505865592d2c20b003254ab1024e2b8a103b2d2c20b003254ab1014e
2b8a103b2d2cb00325b003258ab0672b8a103b2d2cb00325b003258ab068
2b8a103b2d2cb0032546b003254660b004252eb00425b00425b0042620b0
00505821b06a1bb06c592bb0032546b00325466061b08062208a2010233a
232010233a2d2cb0032547b003254760b0052547b0806361b00225b00625
496323b005254ab080632058621b2159b0042646608a468a4660b0206361
2d2cb00426b00425b00425b00426b06e2b208a2010233a232010233a2d2c
2320b001545821b00225b1024e2bb0805020605920606020b00151582121
1b20b005515821206661b0402361b100032550b00325b00325505a5820b0
0325618a535821b000591b21591bb00754582066616523211b2121b00059
5959b1024e2b2d2cb00225b004254ab0005358b0001b8a8a238ab00159b0
04254620666120b00526b0062649b00526b00526b0702b236165b0206020
6661b02061652d2cb0022546208a20b000505821b1024e2b1b4523215961
65b00225103b2d2cb0042620b802006220b80200638a236120b05d602bb0
0525118a128a20398a58ba005d10000004266356602b23212010204620b1
024e2b23611b2321208a201049b1024e2b593b2d2cba005d100000092563
56602bb00525b00525b00526b06d2bb15d0725602bb00525b00525b00525
b00525b06f2bba005d10000008266356602b20b0005258b0502bb00525b0
0525b00725b00725b00525b0712bb0021738b00052b00225b001525a58b0
0425b0062549b00325b00525496020b0405258211bb000525820b0025458
b00425b00425b00725b0072549b00217381bb00425b00425b00425b00625
49b0021738595959595921212121212d2cb12501885058b94000020063b8
040088545cb0134b525b1bb001592d000000000100000006e6662591c07b
5f0f3cf50819080000000000a2e31dc200000000d19de403fb74fd8c105e
0851000000090001000100000000000100000721fe4500571000fb74f9d2
105e0001000000000000000000000000000000110639011c02aa003305c7
0023071d0022038d004c02390014038d004902aa005302aa004f04000002
02aa000d031d0064040000f00400002c04000044023900b0020000000000
000000000096000001dc0000038e0000062400000a3c00000cbc000010f8
0000116600001422000016ee0000194200001e3c00001f3a000021380000
2432000024da000024da00010000001102b5003c00ca0007000200100040
00860000063404eb000500020000003a02be0000000300000000021a0000
0000000300000001001e021a0000000300000002000e02c2000000030000
0003005802900000000300000004001e021a0000000300000005001802e8
00000003000000060022030000000003000000070076021a000000030000
000800300330000000030000000900860540000000030000000d0d1805c6
0001000000000000010d12de0001000000000001000f13eb000100000000
00020007143f0001000000000003002c14260001000000000004000f13eb
0001000000000005000c145200010000000000060011145e000100000000
0007003b13eb0001000000000008001812e500010000000000090043146f
000100000000000d068c14b20003000104030002000c1b3e000300010405
000200101b4e0003000104060002000c1b5e000300010407000200101b6a
000300010408000200101b7a0003000104090000021e0322000300010409
0001001e021a0003000104090002000e02c2000300010409000300580290
0003000104090004001e021a0003000104090005001802e8000300010409
00060022030000030001040900070076021a000300010409000800300330
000300010409000900860540000300010409000d0d2a1b8a00030001040a
0002000c1b3e00030001040b0002001028b400030001040c0002000c1b3e
00030001040e0002000c28c40003000104100002000e28d4000300010413
0002001228e20003000104140002000c1b3e000300010415000200101b3e
0003000104160002000c1b3e0003000104190002000e28f400030001041b
0002001028c400030001041d0002000c1b3e00030001041f0002000c1b3e
0003000104240002000e290200030001042a0002000e291000030001042d
0002000e291e00030001080a0002000c1b3e0003000108160002000c1b3e
000300010c0a0002000c1b3e000300010c0c0002000c1b3e00a900200032
00300031003500200054006800650020004d006f006e006f007400790070
006500200043006f00720070006f0072006100740069006f006e002e0020
0041006c006c002000520069006700680074007300200052006500730065
0072007600650064002e0020000d000d0048006500620072006500770020
004f00700065006e00540079007000650020004c00610079006f00750074
0020006c006f00670069006300200063006f007000790072006900670068
0074002000a9002000320030003000330020002600200032003000300037
002c002000520061006c00700068002000480061006e0063006f0063006b
002000260020004a006f0068006e00200048007500640073006f006e002e
002000540068006900730020006c00610079006f007500740020006c006f
00670069006300200066006f00720020004200690062006c006900630061
006c00200048006500620072006500770020006900730020006f00700065
006e00200073006f007500720063006500200073006f0066007400770061
0072006500200075006e00640065007200200074006800650020004d0049
00540020004c006900630065006e00730065003b00200073006500650020
0065006d0062006500640064006500640020006c006900630065006e0073
00650020006400650073006300720069007000740069006f006e00200066
006f0072002000640065007400610069006c0073002e00540069006d0065
00730020004e0065007700200052006f006d0061006e0020006900730020
0061002000740072006100640065006d00610072006b0020006f00660020
0054006800650020004d006f006e006f007400790070006500200043006f
00720070006f0072006100740069006f006e002e004d006f006e006f0074
007900700065003a00540069006d006500730020004e0065007700200052
006f006d0061006e00200052006500670075006c0061007200200028004d
006900630072006f0073006f00660074002900560065007200730069006f
006e00200036002e0039003000540069006d00650073004e006500770052
006f006d0061006e00500053004d005400a9002000320030003100350020
0054006800650020004d006f006e006f007400790070006500200043006f
00720070006f0072006100740069006f006e002e00200041006c006c0020
005200690067006800740073002000520065007300650072007600650064
002e0020000d000a000d000a0048006500620072006500770020004f0070
0065006e00540079007000650020004c00610079006f007500740020006c
006f00670069006300200063006f00700079007200690067006800740020
00a9002000320030003000330020002600200032003000300037002c0020
00520061006c00700068002000480061006e0063006f0063006b00200026
0020004a006f0068006e00200048007500640073006f006e002e00200054
0068006900730020006c00610079006f007500740020006c006f00670069
006300200066006f00720020004200690062006c006900630061006c0020
0048006500620072006500770020006900730020006f00700065006e0020
0073006f007500720063006500200073006f006600740077006100720065
00200075006e00640065007200200074006800650020004d004900540020
004c006900630065006e00730065003b002000730065006500200065006d
0062006500640064006500640020006c006900630065006e007300650020
006400650073006300720069007000740069006f006e00200066006f0072
002000640065007400610069006c0073002e004d006f006e006f00740079
0070006500200054007900700065002000440072006100770069006e0067
0020004f006600660069006300650020002d0020005300740061006e006c
006500790020004d006f007200690073006f006e002c0020005600690063
0074006f00720020004c0061007200640065006e00740020003100390033
00320059006f00750020006d006100790020007500730065002000740068
0069007300200066006f006e00740020006100730020007000650072006d
006900740074006500640020006200790020007400680065002000450055
004c004100200066006f00720020007400680065002000700072006f0064
00750063007400200069006e002000770068006900630068002000740068
0069007300200066006f006e007400200069007300200069006e0063006c
007500640065006400200074006f00200064006900730070006c00610079
00200061006e00640020007000720069006e007400200063006f006e0074
0065006e0074002e002000200059006f00750020006d006100790020006f
006e006c0079002000280069002900200065006d00620065006400200074
00680069007300200066006f006e007400200069006e00200063006f006e
00740065006e00740020006100730020007000650072006d006900740074
00650064002000620079002000740068006500200065006d006200650064
00640069006e00670020007200650073007400720069006300740069006f
006e007300200069006e0063006c007500640065006400200069006e0020
007400680069007300200066006f006e0074003b00200061006e00640020
0028006900690029002000740065006d0070006f0072006100720069006c
007900200064006f0077006e006c006f0061006400200074006800690073
00200066006f006e007400200074006f002000610020007000720069006e
0074006500720020006f00720020006f00740068006500720020006f0075
0074007000750074002000640065007600690063006500200074006f0020
00680065006c00700020007000720069006e007400200063006f006e0074
0065006e0074002e000d000d00540068006500200066006f006c006c006f
00770069006e00670020006c006900630065006e00730065002c00200062
00610073006500640020006f006e00200074006800650020004d00490054
0020006c006900630065006e00730065002000280068007400740070003a
002f002f0065006e002e00770069006b006900700065006400690061002e
006f00720067002f00770069006b0069002f004d00490054005f004c0069
00630065006e007300650029002c0020006100700070006c006900650073
00200074006f00200074006800650020004f00700065006e005400790070
00650020004c00610079006f007500740020006c006f0067006900630020
0066006f00720020004200690062006c006900630061006c002000480065
00620072006500770020201c004c00610079006f007500740020004c006f
006700690063201d0020006100730020006a006f0069006e0074006c0079
00200064006500760065006c006f00700065006400200062007900200052
0061006c00700068002000480061006e0063006f0063006b00200061006e
00640020004a006f0068006e00200048007500640073006f006e002e0020
000d000d005000650072006d0069007300730069006f006e002000690073
00200068006500720065006200790020006700720061006e007400650064
002c002000660072006500650020006f0066002000630068006100720067
0065002c00200074006f00200061006e007900200070006500720073006f
006e0020006f0062007400610069006e0069006e00670020006100200063
006f007000790020006f006600200074006800650020004f00700065006e
00540079007000650020004c00610079006f007500740020006c006f0067
0069006300200066006f00720020004200690062006c006900630061006c
002000480065006200720065007700200061006e00640020006100730073
006f00630069006100740065006400200064006f00630075006d0065006e
0074006100740069006f006e002000660069006c00650073002000280074
006800650020201c004c00610079006f007500740020004c006f00670069
006300200053006f006600740077006100720065201d0029002c00200074
006f0020006400650061006c00200069006e00200074006800650020004c
00610079006f007500740020004c006f00670069006300200053006f0066
0074007700610072006500200077006900740068006f0075007400200072
00650073007400720069006300740069006f006e002c00200069006e0063
006c007500640069006e006700200077006900740068006f007500740020
006c0069006d00690074006100740069006f006e00200074006800650020
00720069006700680074007300200074006f0020007500730065002c0020
0063006f00700079002c0020006d006f0064006900660079002c0020006d
0065007200670065002c0020007000750062006c006900730068002c0020
0064006900730074007200690062007500740065002c0020007300750062
006c006900630065006e00730065002c00200061006e0064002f006f0072
002000730065006c006c00200063006f00700069006500730020006f0066
00200074006800650020004c00610079006f007500740020004c006f0067
0069006300200053006f006600740077006100720065002c00200061006e
006400200074006f0020007000650072006d006900740020007000650072
0073006f006e007300200074006f002000770068006f006d002000740068
00650020004c00610079006f007500740020004c006f0067006900630020
0053006f0066007400770061007200650020006900730020006600750072
006e0069007300680065006400200074006f00200064006f00200073006f
002c0020007300750062006a00650063007400200074006f002000740068
006500200066006f006c006c006f00770069006e006700200063006f006e
0064006900740069006f006e0073003a000d000d00540068006500200061
0062006f0076006500200063006f00700079007200690067006800740020
006e006f007400690063006500200061006e006400200074006800690073
0020007000650072006d0069007300730069006f006e0020006e006f0074
0069006300650020007300680061006c006c00200062006500200069006e
0063006c007500640065006400200069006e00200061006c006c00200063
006f00700069006500730020006f00720020007300750062007300740061
006e007400690061006c00200070006f007200740069006f006e00730020
006f006600200074006800650020004c00610079006f007500740020004c
006f00670069006300200053006f006600740077006100720065002e000d
000d00540048004500200053004f00460054005700410052004500200049
0053002000500052004f0056004900440045004400200027004100530020
004900530027002c00200057004900540048004f00550054002000570041
005200520041004e005400590020004f004600200041004e00590020004b
0049004e0044002c002000450058005000520045005300530020004f0052
00200049004d0050004c004900450044002c00200049004e0043004c0055
00440049004e004700200042005500540020004e004f00540020004c0049
004d004900540045004400200054004f0020005400480045002000570041
005200520041004e00540049004500530020004f00460020004d00450052
004300480041004e0054004100420049004c004900540059002c00200046
00490054004e00450053005300200046004f005200200041002000500041
00520054004900430055004c0041005200200050005500520050004f0053
004500200041004e00440020004e004f004e0049004e004600520049004e
00470045004d0045004e0054002e00200049004e0020004e004f00200045
00560045004e00540020005300480041004c004c00200054004800450020
0041005500540048004f005200530020004f005200200043004f00500059
0052004900470048005400200048004f004c004400450052005300200042
00450020004c004900410042004c004500200046004f005200200041004e
005900200043004c00410049004d002c002000440041004d004100470045
00530020004f00520020004f00540048004500520020004c004900410042
0049004c004900540059002c002000570048004500540048004500520020
0049004e00200041004e00200041004300540049004f004e0020004f0046
00200043004f004e00540052004100430054002c00200054004f00520054
0020004f00520020004f00540048004500520057004900530045002c0020
00410052004900530049004e0047002000460052004f004d002c0020004f
005500540020004f00460020004f005200200049004e00200043004f004e
004e0045004300540049004f004e00200057004900540048002000540048
004500200053004f0046005400570041005200450020004f005200200054
0048004500200055005300450020004f00520020004f0054004800450052
0020004400450041004c0049004e0047005300200049004e002000540048
004500200053004f004600540057004100520045002e000da92032303135
20546865204d6f6e6f7479706520436f72706f726174696f6e2e20416c6c
205269676874732052657365727665642e200d0d486562726577204f7065
6e54797065204c61796f7574206c6f67696320636f7079726967687420a9
2032303033202620323030372c2052616c70682048616e636f636b202620
4a6f686e20487564736f6e2e2054686973206c61796f7574206c6f676963
20666f72204269626c6963616c20486562726577206973206f70656e2073
6f7572636520736f66747761726520756e64657220746865204d4954204c
6963656e73653b2073656520656d626564646564206c6963656e73652064
65736372697074696f6e20666f722064657461696c732e54696d6573204e
657720526f6d616e20697320612074726164656d61726b206f6620546865
204d6f6e6f7479706520436f72706f726174696f6e2e4d6f6e6f74797065
3a54696d6573204e657720526f6d616e20526567756c617220284d696372
6f736f66742956657273696f6e20362e393054696d65734e6577526f6d61
6e50534d544d6f6e6f7479706520547970652044726177696e67204f6666
696365202d205374616e6c6579204d6f7269736f6e2c20566963746f7220
4c617264656e742031393332596f75206d61792075736520746869732066
6f6e74206173207065726d6974746564206279207468652045554c412066
6f72207468652070726f6475637420696e20776869636820746869732066
6f6e7420697320696e636c7564656420746f20646973706c617920616e64
207072696e7420636f6e74656e742e2020596f75206d6179206f6e6c7920
28692920656d626564207468697320666f6e7420696e20636f6e74656e74
206173207065726d69747465642062792074686520656d62656464696e67
207265737472696374696f6e7320696e636c7564656420696e2074686973
20666f6e743b20616e6420286969292074656d706f726172696c7920646f
776e6c6f6164207468697320666f6e7420746f2061207072696e74657220
6f72206f74686572206f75747075742064657669636520746f2068656c70
207072696e7420636f6e74656e742e0d0d54686520666f6c6c6f77696e67
206c6963656e73652c206261736564206f6e20746865204d4954206c6963
656e73652028687474703a2f2f656e2e77696b6970656469612e6f72672f
77696b692f4d49545f4c6963656e7365292c206170706c69657320746f20
746865204f70656e54797065204c61796f7574206c6f67696320666f7220
4269626c6963616c2048656272657720d24c61796f7574204c6f676963d3
206173206a6f696e746c7920646576656c6f7065642062792052616c7068
2048616e636f636b20616e64204a6f686e20487564736f6e2e200d0d5065
726d697373696f6e20697320686572656279206772616e7465642c206672
6565206f66206368617267652c20746f20616e7920706572736f6e206f62
7461696e696e67206120636f7079206f6620746865204f70656e54797065
204c61796f7574206c6f67696320666f72204269626c6963616c20486562
72657720616e64206173736f63696174656420646f63756d656e74617469
6f6e2066696c6573202874686520d24c61796f7574204c6f67696320536f
667477617265d3292c20746f206465616c20696e20746865204c61796f75
74204c6f67696320536f66747761726520776974686f7574207265737472
696374696f6e2c20696e636c7564696e6720776974686f7574206c696d69
746174696f6e207468652072696768747320746f207573652c20636f7079
2c206d6f646966792c206d657267652c207075626c6973682c2064697374
7269627574652c207375626c6963656e73652c20616e642f6f722073656c
6c20636f70696573206f6620746865204c61796f7574204c6f6769632053
6f6674776172652c20616e6420746f207065726d697420706572736f6e73
20746f2077686f6d20746865204c61796f7574204c6f67696320536f6674
77617265206973206675726e697368656420746f20646f20736f2c207375
626a65637420746f2074686520666f6c6c6f77696e6720636f6e64697469
6f6e733a0d0d5468652061626f766520636f70797269676874206e6f7469
636520616e642074686973207065726d697373696f6e206e6f7469636520
7368616c6c20626520696e636c7564656420696e20616c6c20636f706965
73206f72207375627374616e7469616c20706f7274696f6e73206f662074
6865204c61796f7574204c6f67696320536f6674776172652e0d0d544845
20534f4654574152452049532050524f564944454420274153204953272c
20574954484f55542057415252414e5459204f4620414e59204b494e442c
2045585052455353204f5220494d504c4945442c20494e434c5544494e47
20425554204e4f54204c494d4954454420544f205448452057415252414e
54494553204f46204d45524348414e544142494c4954592c204649544e45
535320464f52204120504152544943554c415220505552504f534520414e
44204e4f4e494e4652494e47454d454e542e20494e204e4f204556454e54
205348414c4c2054484520415554484f5253204f5220434f505952494748
5420484f4c44455253204245204c4941424c4520464f5220414e5920434c
41494d2c2044414d41474553204f52204f54484552204c494142494c4954
592c205748455448455220494e20414e20414354494f4e204f4620434f4e
54524143542c20544f5254204f52204f54484552574953452c2041524953
494e472046524f4d2c204f5554204f46204f5220494e20434f4e4e454354
494f4e20574954482054484520534f465457415245204f52205448452055
5345204f52204f54484552204445414c494e475320494e2054484520534f
4654574152452e0d004e006f0072006d0061006c006e0079006f00620079
010d0065006a006e00e9006e006f0072006d0061006c005300740061006e
0064006100720064039a03b103bd03bf03bd03b903ba03ac0059006f0075
0020006d0061007900200075007300650020007400680069007300200066
006f006e00740020006100730020007000650072006d0069007400740065
00640020006200790020007400680065002000450055004c004100200066
006f00720020007400680065002000700072006f00640075006300740020
0069006e0020007700680069006300680020007400680069007300200066
006f006e007400200069007300200069006e0063006c0075006400650064
00200074006f00200064006900730070006c0061007900200061006e0064
0020007000720069006e007400200063006f006e00740065006e0074002e
002000200059006f00750020006d006100790020006f006e006c00790020
00280069002900200065006d006200650064002000740068006900730020
0066006f006e007400200069006e00200063006f006e00740065006e0074
0020006100730020007000650072006d0069007400740065006400200062
0079002000740068006500200065006d00620065006400640069006e0067
0020007200650073007400720069006300740069006f006e007300200069
006e0063006c007500640065006400200069006e00200074006800690073
00200066006f006e0074003b00200061006e006400200028006900690029
002000740065006d0070006f0072006100720069006c007900200064006f
0077006e006c006f006100640020007400680069007300200066006f006e
007400200074006f002000610020007000720069006e0074006500720020
006f00720020006f00740068006500720020006f00750074007000750074
002000640065007600690063006500200074006f002000680065006c0070
0020007000720069006e007400200063006f006e00740065006e0074002e
000d000a000d000a00540068006500200066006f006c006c006f00770069
006e00670020006c006900630065006e00730065002c0020006200610073
006500640020006f006e00200074006800650020004d004900540020006c
006900630065006e00730065002000280068007400740070003a002f002f
0065006e002e00770069006b006900700065006400690061002e006f0072
0067002f00770069006b0069002f004d00490054005f004c006900630065
006e007300650029002c0020006100700070006c00690065007300200074
006f00200074006800650020004f00700065006e00540079007000650020
004c00610079006f007500740020006c006f00670069006300200066006f
00720020004200690062006c006900630061006c00200048006500620072
006500770020201c004c00610079006f007500740020004c006f00670069
0063201d0020006100730020006a006f0069006e0074006c007900200064
006500760065006c006f007000650064002000620079002000520061006c
00700068002000480061006e0063006f0063006b00200061006e00640020
004a006f0068006e00200048007500640073006f006e002e0020000d000a
000d000a005000650072006d0069007300730069006f006e002000690073
00200068006500720065006200790020006700720061006e007400650064
002c002000660072006500650020006f0066002000630068006100720067
0065002c00200074006f00200061006e007900200070006500720073006f
006e0020006f0062007400610069006e0069006e00670020006100200063
006f007000790020006f006600200074006800650020004f00700065006e
00540079007000650020004c00610079006f007500740020006c006f0067
0069006300200066006f00720020004200690062006c006900630061006c
002000480065006200720065007700200061006e00640020006100730073
006f00630069006100740065006400200064006f00630075006d0065006e
0074006100740069006f006e002000660069006c00650073002000280074
006800650020201c004c00610079006f007500740020004c006f00670069
006300200053006f006600740077006100720065201d0029002c00200074
006f0020006400650061006c00200069006e00200074006800650020004c
00610079006f007500740020004c006f00670069006300200053006f0066
0074007700610072006500200077006900740068006f0075007400200072
00650073007400720069006300740069006f006e002c00200069006e0063
006c007500640069006e006700200077006900740068006f007500740020
006c0069006d00690074006100740069006f006e00200074006800650020
00720069006700680074007300200074006f0020007500730065002c0020
0063006f00700079002c0020006d006f0064006900660079002c0020006d
0065007200670065002c0020007000750062006c006900730068002c0020
0064006900730074007200690062007500740065002c0020007300750062
006c006900630065006e00730065002c00200061006e0064002f006f0072
002000730065006c006c00200063006f00700069006500730020006f0066
00200074006800650020004c00610079006f007500740020004c006f0067
0069006300200053006f006600740077006100720065002c00200061006e
006400200074006f0020007000650072006d006900740020007000650072
0073006f006e007300200074006f002000770068006f006d002000740068
00650020004c00610079006f007500740020004c006f0067006900630020
0053006f0066007400770061007200650020006900730020006600750072
006e0069007300680065006400200074006f00200064006f00200073006f
002c0020007300750062006a00650063007400200074006f002000740068
006500200066006f006c006c006f00770069006e006700200063006f006e
0064006900740069006f006e0073003a000d000a000d000a005400680065
002000610062006f0076006500200063006f007000790072006900670068
00740020006e006f007400690063006500200061006e0064002000740068
006900730020007000650072006d0069007300730069006f006e0020006e
006f00740069006300650020007300680061006c006c0020006200650020
0069006e0063006c007500640065006400200069006e00200061006c006c
00200063006f00700069006500730020006f007200200073007500620073
00740061006e007400690061006c00200070006f007200740069006f006e
00730020006f006600200074006800650020004c00610079006f00750074
0020004c006f00670069006300200053006f006600740077006100720065
002e000d000a000d000a00540048004500200053004f0046005400570041
00520045002000490053002000500052004f005600490044004500440020
0027004100530020004900530027002c00200057004900540048004f0055
0054002000570041005200520041004e005400590020004f004600200041
004e00590020004b0049004e0044002c0020004500580050005200450053
00530020004f005200200049004d0050004c004900450044002c00200049
004e0043004c005500440049004e004700200042005500540020004e004f
00540020004c0049004d004900540045004400200054004f002000540048
0045002000570041005200520041004e00540049004500530020004f0046
0020004d00450052004300480041004e0054004100420049004c00490054
0059002c0020004600490054004e00450053005300200046004f00520020
004100200050004100520054004900430055004c00410052002000500055
00520050004f0053004500200041004e00440020004e004f004e0049004e
004600520049004e00470045004d0045004e0054002e00200049004e0020
004e004f0020004500560045004e00540020005300480041004c004c0020
00540048004500200041005500540048004f005200530020004f00520020
0043004f005000590052004900470048005400200048004f004c00440045
005200530020004200450020004c004900410042004c004500200046004f
005200200041004e005900200043004c00410049004d002c002000440041
004d00410047004500530020004f00520020004f00540048004500520020
004c0049004100420049004c004900540059002c00200057004800450054
00480045005200200049004e00200041004e00200041004300540049004f
004e0020004f004600200043004f004e00540052004100430054002c0020
0054004f005200540020004f00520020004f005400480045005200570049
00530045002c002000410052004900530049004e0047002000460052004f
004d002c0020004f005500540020004f00460020004f005200200049004e
00200043004f004e004e0045004300540049004f004e0020005700490054
0048002000540048004500200053004f0046005400570041005200450020
004f0052002000540048004500200055005300450020004f00520020004f
00540048004500520020004400450041004c0049004e0047005300200049
004e002000540048004500200053004f004600540057004100520045002e
000d000a004e006f0072006d00610061006c0069004e006f0072006d00e1
006c006e0065004e006f0072006d0061006c0065005300740061006e0064
0061006100720064041e0431044b0447043d044b0439004e006100760061
0064006e006f0074006801b001a10300006e00670041007200720075006e
007400610000410a005403ef02ad001d001f03ee03ed003c001f03edb206
1d1fb803ecb3032a1f3f411503e4006003e9009f03e500df03e500040010
03e4001003e5003f03e5007003e400ff03e40005ffc003e1b345453240b8
03e1b32b2e3240b803e1b2282932b9ffc003e1b21a1c32bd03e102ac0027
001fffc003dfb2161b32b9ffc003deb2424232b9ffc003deb2363832b9ff
c003deb32a2d32df410a03de00ef03de000203de03df0028001fffc003df
b3282e32f0410d03df0001037e000f0101001f00a003dd00b003dd000200
4003dab32426329fbf03cc000103ca03c90064001fffc003c9b20d113241
0a03c703b70012001f03b603b50064001fffc003b5b30e1132004173038d
000100c0038d00d0038d00e0038d00f0038d0004006f03a7007f03a7008f
03a700af03a70004000f03a7001f03a7002f03a7004f03a7000403ab03ab
00ef03a50001000f03a5002f03a5006f03a5008f03a50004005403aa0001
006b03aa000103a8036a0022001f038c03940015001f038b03930015001f
03a40393001a001f03a20394001e001f03a10393001e001f039f0394001e
001f039b0394001a001f039a0393001e001f039903940016001f03980394
0016001f03970393001b001f03960394001b001f03950393001b001f0376
0375001a001f03740375001a001f03a00373b21e1f10411e039300200393
00300393000300200394003003940040039400030000039400010383036c
001e001f03b1036c0032001f036d036c0032001fffc0037db2212332b9ff
c0037db3171932a0410a037d00b0037d00c0037d00d0037d0004ffc0037c
b2212332b9ffc0037cb3171932a0412d037c00b0037c00c0037c00d0037c
000400300373004003730002000003730010037300200373000300e00373
00f00373000200b0037300c0037300d003730003008403730090037300a0
037300030377036a0029001f0389036ab2281f40b80367b33940323fbb03
66000100400366b3191d328fbb0366000100400366b3090a3240b80366b3
090e3240b80366b3090f323fbb0365000100400365b3090c3240b80365b3
1a1d3240b80365b3090e326b410e0363007b036300020014036300240363
003403630044036300040363b2242f1fba034e006d0800400e1f7f027f03
7f047f050430440112bf033200500800001f0012032d003c0800b61f5f3c
013785a041850362000100000362001003620070036200900362000400f0
035f00010020035e0020035f0030035f0040035e00040000035e0000035f
0010035f00d0035e00e0035f00050010030f0020030f0030030f00d0030f
00e0030f00050000030f0010030f0050030f0060030f0070030f00d0030f
00060000030f0010030f0020030f0030030f00e0030f00f0030f0006030f
00270000030e0030030e000200e0030e00f0030e0002030e004a00e0030d
00f0030d0002030d002700d002fc0001001002fc002002fc005002fc0003
00d002fc00e002fc0002000002fc001002fc002002fc003002fc005002fc
006002fc000600e002fc00f002fc0002002002fc003002fc004002fc0003
02fc402c27c02901b02901a02901902901403c3f413240223f4132121212
858f4caf4cbf4ccf4c045f4c6f4c7f4c0337b8ffc0b3b22b3032b8ffc0b3
b2222532b8ffc0b5b2191a32370f413b02af0001005f02af009f02af00df
02af0003001f02af002f02af003f02af006f02af000402af02af001f02ad
002f02ad003f02ad004f02ad005f02ad000500df02ad0001000f02ad001f
02ad003f02ad005f02ad009f02ad0005005f02ad00df02ad0002000f02ad
001f02ad003f02ad0003004002acb23a334f414d02ac005f02ac009f02ac
0003002f02ac003f02ac0002000f02ac003f02ac00af02ac000300b002ac
00e002ac0002004f02ac005f02ac00a002ac0003001f02ac002f02ac003f
02ac0003000f02ac0001000f035a0001000f035a001f035a003f035a005f
035a0070035a000500cf035700df03570002000f0357001f035700700357
00af03570004035a035a0357035702ad02ad02ac02ac032c400d31151f00
1616000000121108104110020c004a000d01a8004a000d0198004a000d01
89004a000d013f004a000d0124400e4a0df64a0dbe4a0d864a0d274a0dbe
02280041000d01940041000d0121400b410db4410d4f410d29410d411002
170021000d02150021000d02060021000d01eb0021000d014e0021000d01
2c4014210df9210df3210df1210d9d210d71210d3d210d4110021c001f00
0d0214001f000d020b001f000d0196001f000d014a001f000d0126400b1f
0dc61f0d571f0d371f0d410d019e0141000d00420141000d001e0141000d
001b0141000d01f2b40f440f0009bb01f20044000d0201b23c291fb80200
b23c291fb801ffb23c411fb801feb23c471fb801fdb23c9e1fb801fab23c
931fbc01f9010f0101001f01f6b224e41f411501f401490401001f01f301
490401001f01f1014900ab001f01f001490067001f01a6003c0125001f01
a4b23c811f411501a3010f019a001f01a200220801001f01a10050040100
1f019f0149019a001f019d01490067001f019cb22c621fb8019bb22c791f
bc019a002c0101001f0197b22ce41fb80193b22c891fb80192b22c6c1fb8
018fb2259e1fb8016ab23c2a1f4111016700240201001f0163002502ab00
1f014c010f019a001f01480149006c001f0147b22c891fb80145b22c9e1f
b80144b22c791fb80143b223311fb80127b23c811fbc012300500101001f
011fb223e41f4115011d0023019a001f011c00230801001f011b00250801
001f010e010f0401001f010d00220401001f0108b223811fb80106b425e4
1ff73cbb0125001f00f5010fb29e1fe3bc01490156001f00e20149b2ab1f
d1b901490401b21fcf2cb80125b61fce23bb1fc524b80156b21fc02cb808
01b21fbf2cb80201b51fb124e41fb0b901490201b61faf2c671fad23b808
01b21fa523b80201400b1f9f3c2d1f9b235a1f9925b80201b21f812cbc04
01001f006d010f0156400b1f592c3e1f4c3cab1f4625b80101b21f403cb8
0125400a1f3a23721f393cab1f38b80149b3ab1f3124b80401b21f3025b8
02abb61f2a24e41f2623b80156b41f35555537ba023500070175402c0774
076207560751073b0733072d0720071d071c071408120810080e080c080a
080808060804080208000814b8ffe0402b00000100140610000001000604
000001000410000001001002000001000200000001000002010802004a00
b013034b024b534201b0124b004b5442b0372b4bb807ff52b0382b4bb008
505b58b101018e59b0382bb00288b801005458b801ffb101018e851bb012
4358b90001012f858d1bb90001017c858d5959014bb0c063004b6220b0f6
5323b8010a515ab0052342180016763f183f123e113946443e113946443e
113946443e113946443e11394660443e11394660442b2b2b2b2b2b2b2b2b
2b2b182b2b2b2b2b2b2b2b2b2b2b2b2b181d42b0964b5358b235aaaa1d42
59b0324b5358b235ffff1d42594bb04753205c58b90271026f4544b90270
026f45445958b9017a0271455258b90271017a4459594bb04753205c58b9
002202704544b9003c027045445958b901b30022455258b9002201b34459
594bb04c53205c58b9014900224544b1222245445958b901c20149455258
b9014901c24459594bb06753205c58b9002402714544b900500271454459
58b9021e0024455258b90024021e4459594bb8020153205c58b9010f0022
4544b1222245445958b90c00010f455258b9010f0c004459594bb01c5320
5c58b125254544b12c2545445958b13725455258b125374459594bb0ab53
205c58b125254544b1232545445958b901590025455258b9002501594459
594bb8010153205c58b125254544b1282545445958b902080025455258b9
002502084459592b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b65422b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b01b361dc6463456523456023456560234560b08b76
6818b080622020b164dc4565234520b003266062636820b003266165b0dc
236544b064234420b161634565234520b003266062636820b003266165b0
63236544b0612344b10063455458b163406544b26140614523614459b3a6
7f434b456523456023456560234560b089766818b080622020b1437f4565
234520b003266062636820b003266165b07f236544b043234420b1a64b45
65234520b003266062636820b003266165b04b236544b0a62344b1004b45
5458b14b406544b2a640a645236144594b5242014b5058b108004259435c
58b108004259b3020b0a124358601b2159421610703eb0124358b93b2118
7e1bba040001a8000b2b59b00c2342b00d2342b0124358b92d412d411bba
04000400000b2b59b00e2342b00f2342b0124358b9187e3b211bba01a804
00000b2b59b0102342b0112342002b001845694445694445694445694473
737374737373737475752b7373747475184569447373742b4bb021534bb0
46515a58b03cb03c45b040604459012b2b2b2b75752b5840365f235f255f
285fa5046f236f256f286fa5044f234f254f284fa5043f233f253f283fa5
042f232f252f282fa5041f231f251f281fa5047575757575755943584010
bf3ccf3c026f3c7f3c8f3c9f3caf3c0575755943584012bf22cf22025f22
6f227f228f229f22af2206757559435c58b6403c9f22ef220375592b2b01
74747474454473737474757545447345447374454473747573737373732b
5840246009700980090310092009300940095009056f037f038f03031f03
2f033f034f035f0305b8ffc0b2073a33b8ffc04046063a33900ba00bb00b
c00bd00b05b006c006d006e006f006052006300640065006600670068006
9006a006099006900702600b700b800b03100b200b300b400b500b051f07
0100757575737575752b2b757575751b40100706441f0b0a441f0302441f
0908441f2b2b2b2b592b752b435841220063032d00010003032d0013032d
0023032d0033032d0053032d000500c3032d00d3032d00e3032d00f3032d
00040083032d0093032d00a3032d00b3032d0004032d032d451869447474
7575592b4358b900180332b330353238b80332b361663238b80332b3535a
3238b80332b3454e3238b80332b33c413218b80332b23f330a410f033200
0100ba033200ca033200da033200ea033200fa0332000503320332451869
4474752b2b2b2b2b2b597300732b012b7575002b2b2b74002b2b2b732b74
012b002b2b017373737474732b2b00732b2b002b2b2b017374732b012b2b
012b2b2b2b2b2b2b2b2b2b2b2b2b2b000173750073730045694400737301
73742b2b2b2b2b732b00732b752b2b732b2b2b2b2b2b2b2b2b73742b002b
2b2b2b0000>
[9435 ] AllocGlyphStorage
]def 
108 44 
PrepFor2015
Type42DictEnd
1 150 1 <0001003300000278054c001f00e6b0852b58406f21401010025521400d0d
025521402835192161116436081f1b022122181f1b122122191f1b012123
091f1b1121231211020201081819021313025519080f0f025519040d0d02
5519220970088008e00803ff0801300850086008035f08c008d008030804
0f0f0255081a0d0d025508b8fff8b41313025508b8fffe401d1010025508
612070218021e0210330215021602103c021d0210261dc182b4e5d717210
f42b2b2b2b5d7171723c4dfd2b2b2b3c003f3c3f3c2b2b2b2b31302b2b2b
2b1bb2141110b803e2b56c11021f0203b803e2b26c020800183f2b323f2b
323031592515213533323736351134272627262323352115232207061511
1417161716330278fdbb305426180d0a1f2c30300245315326190d0a202b
3025252531207a036c6721191218252531207afc946721191218>PBAAAA+Times#20New#20Roman AddT42Char 
1 476 2 <0002002300000579054c001600210144b0852b5840590b1b0b1d86109510
d5100576107614871098139915c91bc91dd41008181112141d1e03071501
871a881e022808061f1b002122071f1b0d21231721191f280e0e0d021928
161600081c3c4f1201001210122012301240120512b8ffdeb60d0d025512
4923b8ffc0403e3f354023012023017023a023e023032321170613130255
170c0f0f0255170c0d0d0255172207060c10100255060c0f0f0255061a0d
0d0255069e226163182b4e10f42b2b2b3c4dfd2b2b2b3c4d105d71722bf6
2b5d724ded003f3c10ed3f3c10ed1139392b2b31304379401c1a1e0f1510
2514261e0f1c56011a151c56011d111f56011b131956002b2b012b2b2b2b
8181005d7101725d711bb10d21b80802b26c0d1fb807eeb26c0d0cb803e2
b46c0d020017b807fdb26c0019b807ecb26c0001b803e2b26c000800183f
2b2b2b3f2b2b2b3031593335333237363511342726232335212004121510
070621271633320011100023220723335624161c274d3302280130013dc1
acc1fe75db7f56e80132fecef05a7325372173036c7f202c258afebed3fe
e5bed4621c01460117011901441d>PBAAAA+Times#20New#20Roman AddT42Char 
1 910 3 <00010022000006f2054c00300204b0852b5840e80f18010e0008170e190d
280f290f2a043007123d013d2f59186f0168186d2f791897019a2fcb18da
18e801eb180d0d18010a1706304630033618363047180316302718263003
061805301717032b00291826303b003a173918351935303f324f3268007a
007618791974308a008918853099009730a900a630a032b032cc17c918c0
32dc17d918d032ed17ea18ea19e032f600fa17f7302548014917462f5a01
5917562f6a177819c618c530d618d630e518e5300e0f1f1b092122201f1b
1a21222e1f1b282122021f1b082123101f1b162123211f1b272123171818
220001140018190001191818b802c9403e302f14301817302f182f012f18
0316171a1919170209080800003030272808305b000002192f2e22202021
a021b021c021d021e02106219e403201320102b802c9400d100f200f1102
550f9e3161dc182b4e10f42b3c4dfd3c4d105df65d3c4dfd3c3c11392ffe
003f3c3c103c103c103c3f3c103c103c173901113987082e2b057d10c487
082e182b057d10c4182b2b2b2b2b2b3130015d5d7171717100715d435c58
401b2f10140c3f0110140c3f0110103918181139181012390008183917b8
ffd0b5173917301439012b2b2b002b2b2b002b2b59015d005d1b400c0118
2f03091916020008191cb803e240096c190206252903090ab803e2b36c28
090800183f332b17323f2b3f3f1112173930315921011114171633331521
353332373635113427262623352101012115232207061511141716333315
2135333237363511010346fdf41b255030fe2830562416140e4b53018001
ec01e401802f5724161c25502ffdc030572316fdf50475fc767d1f2a2525
34207203765a281d2725fbdb042525342072fc8a7d1f2a2525342072038a
fb8b>PBAAAA+Times#20New#20Roman AddT42Char 
1 1572 4 <0002004cffe4035303b00014001d03b4b0852b58b1020243545840280816
1415000c0f100255000e0c0f1002550e0c0d0d02550e1530400001200030
0002000010000200b8ffc0b41314025500b8ffc040111111025500000b1b
251107000710070207b8ffc0b40f10025507b8ffc0b5131402550704b8ff
d6b41314025504b8ffcab71212025504310b0b003fed2b2bc42b2b5d3fed
12392f2b2b5d5d5ded012f2b2bdd2bc02fcdc031301bb10602435458401d
158000a000b0000320003000400003000010000200000b1b2511070807b8
ffc040241010065510072007b00703000760078007a00704079204a204b2
040304310b0b07081614b8fff440260d0d065514141f1e15000c0d0d0655
000c0f0f0655000e0c0f0f06550e160d0d06550e0e1f1e1112392f2b2bdd
2b2bc01112392f2bcdd0cd003fed5dc45d5d2b323fed12392f5d5d5dcd31
301b4019125f185d1960006014d6030519201c3917201c3916401c391fb8
ffc0400a434a34081f430d5d361fb8ffc0b32828341fb8ffc040532a2e34
1b06190958135e165f175a185b1a07010309060709080c0515490689028c
06870c8a10851da302ab18b513d402d90fda10f402f30313126007600870
0780078909c107c80ff007080401070d84020309baffe00006ffe0404a36
09460247094f1f5402540962027202891389199913a409a40ab808b509b0
0ac702e702e00cf40a1408d007010007d007027107010007100720079007
a007b00706077d041400301615b8ffc040131239125f157f159f15df1504
15151bd3040104b8ffd0b2143904b8ffe8b2133904b8ffd8404812390431
0b0b5c1b011b25110707cc0816281b390f16016f167f168f160316f41414
800801300890080230088f08df08031008400860087008b008e0080608aa
0e15040089000200b8032c4012300e400e500e03000e100e200e03f00e01
0eb8ffc04009434a340e431e434b182b4e10f42b7172724dfd713c10fd5d
715d713c10ed5d712b10ed003fed723fed2b2b2b7211392f5d4358b26f15
015d592b3cfd3c10f45d5d7172393130015d00383800715d014358b40600
010202715971722b2b2b2b2b2b2b0072435c58b90007ffc0400b23390c40
2d390d402d3908b8ffc0b2283907b8ffc0b2283906b8ffc0b21b3907b8ff
c0b21b3908b8ffc0b21b3907b8ffc0b20a3908b8ffc0b20a3907b8ffc0b2
093908b8ffc0400e093915101939192011390d201139002b2b012b002b2b
2b2b2b2b2b2b2b2b2b2b5959591bb507070b111500b807e5b56c15150b11
1bb807ebb46c11070b04b8081fb26c0b0b00183f2b3f2b12392f2b111239
2f3031591306171633323637170606232202353412333216152521262726
26232206da016464875a852d1f15ca98a5ebf1b69ac6fd8701a805101963
365383023bcc747463781489e10101d9eb0107cbaa3a582438408100>PBAAAA+Times#20New#20Roman AddT42Char 
1 2620 5 <00010014fff1023c04c1001b0228b0852b58b1020243545840251d401213
02551d40101002550b0c18121202550c15130105131812120255130e1313
025513b8fff8b40f0f025513b8fff4b40d0d025513b8fff0400c10100255
130b082c0f161404b8011bb2000106003fcdfdd0cd2fedc4012f2b2b2b2b
2bddc010c62f2bcd31302b2b1bb106024354584019170c10100655160c10
100655150c10100655160c101006551bb8ffe8b4101006551ab8ffe8b410
10065519b8ffe8401410100655700b010b0f1b01156914014914011404b8
011b401c0106082c0f0b1b0105021010065505080f0f0655050c0d0d0655
0513b8ffeeb41010065513b8fff0b40f0f065513b8fffab70d0d06551313
1d1c1112392f2b2b2bdd2b2b2bd0cd003fed3ffdd05d5dc010cd10c45d31
30012b2b2b2b2b002b2b1bb9000dffe840410c395f015f02023f1d991199
19bf15bf16b819e819079f1d01891a014f0c4f0d5f0c5f0df51805061815
18271803161518191a030118191a03141ba00103153004b8011b401c0103
30020201060c35082c0f0b16cf15df15ef15031565141bcc000bb801ec40
2c200c010c2e2f1db01d021d000101040405241450130180130100131013
b013c013d013e0130613601cab89182b10f65d71723cfd3c103c103c105d
f45ded10ed10f45d3c003ffde43f3c10ed10edfd3c10e401111739001117
391239313000715d0171725d00722b59591bb61b014014160104b807ecb4
6c01060f08b80809b26c0f0b00183f2b3f2b39391a10cd30315901113315
231114163332363733060623222626351123353636373637014ad6d63328
213e11272380442e582a9137732d172904c1fed346fdae593e2928626333
5f630268211669482665>PBAAAA+Times#20New#20Roman AddT42Char 
1 3260 6 <00020049ffed038903af0032003d038bb0852b58b1020243545840203f40
0d0d02553f4013130255151b072e25080b0b0255250c0d0d025525000c33
b8fff0400b1212025533161313025533b8ffdeb41010025533b8fff44015
0f0f0255330c0d0d02553339070c0d0d0255072d2eb8ffc0402009120255
2e33001e04292c30340c40090b02550c401d1d02550c40111202550cb8ff
d4401e091202550c0c047f180118401112025518401d1d02551810251e07
3c2c04002fed3fedc42b2b5d12392f2b2b2b2bcd2ffd11123939d42bcd01
2f2bcd2f2b2b2b2b2bc0c0dd2b2bc410d4cd31302b2b1b406f0b1c8a3302
1253360112201f39803fa809b60a03122b127d007d3386008b0b8b35061d
12163a103f803f04091c4c054c06452045224c3a403f891d080a0e072000
2249014b0a490b49354b37433a493d570b670b8509840a840b0f54168316
021f3f5f3f0260083300343c2e292d34bb011b000c000cffc0b609390c28
0b390cb8ffc0401a3a35100c500c02400c500c600c03200c500c600c760c
040c3c18b8ffd840290b394f185f186f18032f187f1802187e1f10011025
1e07303c403c023c2c04702d802d022d35292c30b803464011040b2ec02d
012d602500330d0c0c343433b8fffcb41010065533bb016700240025ffc0
401a0e3900251f2580259025044025f0250280250125101010065525bb02
4300070015ffc0b21f3915b80167401e1b2f393107400e39200750078007
03100701f0070150070107433e436e182b4e10f45d7172722b4dedf4ed2b
10fd2b5d71722b3cfd2b3c103c103c103c10f65d3c003ff4fde45d10ed71
3fed72fd5d712b11395d71722b2b2b2fb10602435458b2030c01005d59ed
11123911123939313043794047353b1c23051337383638020609080a0802
06212220220206350b392000111d131c0012130f1f0d1c0122233b05391c
00380834200135340b121c101c010e22101c013a063c1c002b2b2b3c103c
2b012b103c2b103c2b2b2a2a2a818181017201710071017172005d4358b2
3f12015d59015d2b0072435c58b431400e392eb8ffe0b210392eb8ffe0b6
0e3937200e3920b8ffe8b20c3920b8ffe0400b0b3918200b3917200b391c
b8fff0401a0b390a280b3937280b390a280a3937280a390a280939372809
39002b2b2b2b2b2b2b2b2b2b2b2b2b2b2b59005d591bb51818041e0c34b8
07e8b56c0c0c301e10b807e8b46c1e073029b8080db46c300b043cb80809
b26c040b00183f2b3f2b3f2b12392f2b1112392f30315925060706232226
353437363637353426232207061517140623222635343633321716171615
1114161633323736371506232226271106070606151416333202478d2436
3d5f7b1e29cbec57533f2526022f26252fb09f7a4e3b1c120a170f100c15
3c7066313a01972c4f4456384c846d1119826a433144785624896622222c
3a2e32342d5690291f422b85fec9833b14070d3c38964493015d3c192c60
39485f00>PBAAAA+Times#20New#20Roman AddT42Char 
1 4344 7 <0001005301800258021700030054b0852b5840200205801d64367f050101
000200b0030300021001500160019001a001d0010601b80134b500800454
5a182b10f6fd5d3c103c002fed3c103c3130015d2b1bb10003b8081ab16c
0000182f2b30315913211521530205fdfb021797>PBAAAA+Times#20New#20Roman AddT42Char 
1 4454 8 <0001004f0000037a058c002b0241b0852b58b1020243545840252d401010
02552d400f0f02552d400d0d02551b2b01100e0601080e2901080d0d0255
01120eb8ffea4012121202550e120d0d02550e0c0f0f02550e06ba03e200
0903e2400a0824251e1700000f290fb8011bb2120608002f3fedc010c03f
cded10eded012f2b2b2bc0dd2bc010c410c610c610c6c431302b2b2b1bb1
0602435458b9000f011bb2120600b8011b401d2906241e17000829010c0d
0d065501060f0f065501021010065501120eb8ffd8400b0d0d06550e060f
0f06550eb8ffdab7101006550e0e2d2c1112392f2b2b2bc0dd2b2b2bc000
2f3fcdcd3fed3fed31301b403e8b2099159926034403440c48198503850c
059a04012f2d7f21900690079f089f099e109e11b02d0910061007025f2a
5f2b021c080eb41e08922201b41e07b80308401f231e9f1ebf1e021e1124
2517012b50100110302a2912110608070a101b011bb80152b38f2d012db8
02f6b2012a2bb80110400d282901120f1110920f0f01240eb8ffc0b36060
340eb8ffc0b33a3a340eb8ffc0b33f3f340eb8ffc0b32431340eb8ffc040
161c2134900e01000e100e5f0e700ec00ed00e060e192cba030603070018
2b4e10f45d722b2b2b2b2b4ded3c10f43c103c103c3cf43c10e65de47200
3f3c3f3c3c3cfd723c3ffd11395d2f2b2b31304379401225271416262515
262516281c002714241c012b012b2b2b81810172715d0072715d59591bb1
1724b807ec40096c1e1e111700001110b807ebb66c291106050809b803e2
b26c080a00183f2b323f332b323f12392f2b303159011114171633331521
353332363635112335333534363633321716151406232226262726232206
061515331501a61c253e53fddd29284219b2b258b57169583a341e17334a
1f1f262e401cec034cfda680222c2424284462025a483c89be75442d381e
35216d13133167d64248>PBAAAA+Times#20New#20Roman AddT42Char 
1 5154 9 <00010002ffe403fd039400250258b0852b58b10202435458401627401212
02550801080d0d0255010b20281212025520b8fffc400b0f0f0255201e0d
0d025520b8ffe4401310100255201a080d0d02551a121c1212025512b8ff
f8b40f0f025512b8fffab40d0d025512b8fff4b5101002551224ba03e200
1703e2400e1825060b200e18061d2c0e0b0708b8ffc0b509100255080a00
2fdd2bcd3fed3f1239393f10edec012f2b2b2b2bcd2b2f2b2b2b2bc0dd2b
c431302b1bb1060243545840570740086008700803080a0b200b180e2425
1718250618061d2c0e0b0b010810100655010a0f0f0655010c0d0d065501
201a040f0f06551a04101006551a0a0d0d06551a1208082620080f0f0655
20060d0d065520202612b8fff2b41010065512b8fff6b40f0f065512b8ff
f6b70d0d0655121227261112392f2b2b2b11392f2b2b11392f10cd2b2b2b
10cd2b2b2bc0003fed3f3f10cd10cd111239393fdd5dcd31301b40350127
600d5d36202760277027b02704340b371f3a20481f4820051a08134f1e18
2723214f1e25272308270141071e0844200b251d08b8014540130a002525
191918061d2c0e0e0a0b0a0b0b2120b80167400e00b001010f0170019f01
cf010401b802bd402512191a241212501390130280139013b01303001310
132013b013c013d01306136026c27f182b4e10f45d71723c4d10fd3c10fd
5d713cfd3c3c103c003f3c10ed3f3c103c103c10ed11123939f5edfc01f5
2b2b3130437940101b1c0f111c0f1a1c0010111b101d1c002b01103c2b81
81005d015d2b59591bb2241817b803e2b76c2518060a0b0e1db8080cb26c
0e0b00183f2b3f3f332b3230315901111416163332371705233506062322
2626351134262607352111141633323637113426273503630f21161f270e
feee2d767c454d712c1c37480141593f2b6d4b395a0394fdd59f471c1123
71c28042598c80019941321b0125fd9b8050364c02074e370225>PBAAAA+Times#20New#20Roman AddT42Char 
1 5870 10 <0001000d000002b703af002801dab0852b58b1020243545840282a401313
0255061f171127040f0f025527181f0111080d0d025511040f0f02551106
0c0c0255111fb8fff4b40f0f02551fb8fff6b40d0d02551fb8ffee401110
1002551f14121202551f0e131302551fb8fffc400b0f0f02551f01100318
1619bb03e20018002603e2400e4f276f277f2703272807180c0307003fcd
2f3fdd5ded10fdc011123939012f2b2b2b2b2b2bdd2b2b2bc010c4c62b10
c410c431302b1bb10602435458402301100318262728076f097f0902090c
030718061f01110c0d0d0655110410100655111fb8fffab40d0d06551fb8
ffeab40f0f06551fb8ffeab7101006551f1f2a291112392f2b2b2bdd2b2b
c010c4002f3fcdcd5d3fddcd1112393931301b406f2002200f3202320f40
02400f820407402a015f2a011f291e18272211291e17862327272041261e
2744000a0b2a111420100104188009010939100c010c590303000718170a
5f0601400601062e1f2a012a0011241f1f1f2001802090200200201020b0
20c020d02005206029a66e182b4e10f45d71723c4d10fd3c1072e4717200
3f3c3f3c10ed72ed5d11173901111239390010f5edfc01f52b2b31300172
71005d59591bb2161819b803e2b46c180a280cb80813b36b03280700183f
332b3f2b3230315901153633321615140623222623220706071114171616
33152135323736373635113426262322072725014c737937483424235715
12152d30130d423efe2b4622190a050d231a1f270a011503afcece432c27
364514295efe494c271b24242416102311500163a03d1c0f2470>PBAAAA+Times#20New#20Roman AddT42Char 
1 6466 11 <00010064ffe402d503af0031046ab0852b58b10202435458402733401313
025533400b0b02550201181010025501180f0f0255010f1b1a08270c0b0b
025527210fb8ffe0b4101002550fb8fff440320f0f02550f310708270f21
04122b05017905016c050105252f0101012a0719771e01631e011e25201a
01601a701a021a120b003fc45d5ded5d5d2f3fc45ded5d5d5d1217393f01
2f2b2bcd2f2bcdd4cd10d42b2bcd31302b2b1bb106024354584032210f27
08042a161e122e05022a3107601a701a021a19124b05016b057b05020525
2a07441e01641e741e021e25120b01210fb8fff2401a0d0d06550f0f3332
1a080e0d0d06550827120d0d0655272733321112392f2bcd2bc41112392f
2bcdc4003fed5d5d3fed5d5d10c4c45d3f10c4123911123912173931301b
4029092c192c0212122e400b392c280b391814590c5a269b109424050a07
0a280a29603370338033060f33b8012040870d5d36cb0dcb0ec424c425d7
23d624d92ce604e623e624e92c0b123f2c5d2c6e2d7d2c8f018f028f0380
15801a801b801c892d8f2e0d0f010f020a03090c061c0a2cc822c923081c
031614121c161d19291b2c9909990a9b20932393240b122b0d282c4a2c4f
335f337829782c860ea823af33e803e61c0c2908311e00bd021e011f012f
010201b8012bb200bd2eb8011a40112a181e19bd1b1e1a1f1a01101a201a
021ab8012bb219bd16b8011a4022121224230d0b040f2724230d0b04051e
01c7002e2f2a31000005252a071a7e191918b803464014162f1e25120b02
cc12010112cf21df21ef210321b80314400b700f01600f700f900f030fb8
01364019271a192e1f0801082c9f270160277027802703202730270227ba
012000320120b14b182b4e10f45d71724ded72f43c10fd5d71fd5d4358b2
ff21015d59392f435c58b2ff01015d59ed003fede4f43c10ed3fed3c103c
10e410ed1112173901111217394358400a242323240d0b140d0d0b870e2e
2b0e7d10c459180010ecf4ed5d720110edf4ed0010ecf4ed5d0110edf4ed
b10602435458b42e20090d34002b5931304379401c28291f20101106071f
11211c010629081c0020101e1c000728051c01002b2b012b2b8181818101
5d43584009fb07f610f611fb28045d5901720071005d435840199f019f02
9f039f0b9a0d9015901a901b901c992297239f2d0c5d595d2b017100722b
2b4358400b2f232f248b2c9b249b2c055d59435c58401128201939092819
3901400a3902400a391bb8ffc0b20a391ab8ffc040190a392e400a392c40
0a392c4009390c101e123f0e201e123f0eb8fff0b21b390eb8fff0b21939
24b8ffe8b2133923b8ffe8b213390cb8ffe8b613392c1813391bb8ffc0b2
12391ab8ffc0400f123901401239024012392c20123924b8fff0400f0f39
2c180f3903100d392e400d3923b8fff040120d390c100d392c200d392c18
11392c181139002b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b012b2b59005d59591b400d02022e1a1a162e3107190a2a05
b807e6b46c2a07121eb807e6b26c120b00183f2b3f2b3f3f1112392f1139
2f3031590111232626232206151417161717161514062322272623220723
11331616333236353426242726353436333217163332363702902126775c
4656201f5f92cbbd75546c2115170d21211c9e62455761fede2d2d9b7b36
4d331110120c03affec8936a4a2d3828292e4763a27d991e0a1a01478c8e
5139455e903a39577198170f0e18>PBAAAA+Times#20New#20Roman AddT42Char 
1 7740 12 <000100f0000003060568001600b2b0852b58401440186018a018e0180400
1840180276008600020e411301690141000901a000220003016901410008
01a00023000001f8000f016900160141000001f2400e010f0f0209020105
09080c020300ba01f70003014940120e0e0f401135300f7f0f900fa00f04
0f1917ba022401e400182b4e10f45d2b3c4d10ede4103c003f3c3f3c1112
3901113900f5edfc01f52b2b3130005d01715d1bb4010507090ab803e2b2
6c090c00183f2b323f30315913253311141616171521353e023511342726
26232207f0014a21133c5cfe026038160a07251a254204c7a1fb8772381e
022525021d317a02dc942a201e1f>PBAAAA+Times#20New#20Roman AddT42Char 
1 7994 13 <0001002c000003ab0568001e0195b0852b58408207180b3917181c3d3418
401c3d3419401c3d340f1e161629073c074907a9070640205b045a085b17
5a186b08741174129c0b9d0e9911ac0bac0ec905c917c818d917d918e020
f904f9171515011d0419051b15191619171d180709170b180b1d34194719
89178f200718190202171a190c19060d031902050618171615140713040d
b8016840090940140c3f80090109b80333400c10051a8f19019f19af1902
19ba03330003018db301020c1eb8018d400d0006e24f135f136f137f1304
13b801074013400001001a002040208020036020a020022019bb01f90003
000d014040145f026f027f028f02bf02cf02df02ef020802191fba018e01
0100182b4e10f45d4de43ced4e105d71f65d4df45ded10ed003f3cedfd5d
713c3ffd71b10602435458b78f0901bf09cf0902005d71592be411121739
11123901111239390210b10602435458b47d198d1902005d590e3c871005
7dc40ec431300171725d005d012b2b2b002b1bb70d0d101e1e021009b808
1ab46c10050219b8081ab26c020c00183f2b3f2b12392f11392f30315901
032135000035342623220607233636333216151407060702072132363637
03ab5ffce0016101209e6e649f262519cf9ba5dd304aa6f93e01626c5746
1a0105fefb2501420198a981a67571b9c6d4906767a2b5fef03810312d00
>PBAAAA+Times#20New#20Roman AddT42Char 
1 8504 14 <00020044ffe40405058e001f002d0272b0852b58b1020243545840262f40
101002552906180d0d025506080f0f0255060c101002550600201d160a0d
0d0255160b20b8fff4401112120255200c1313025520180d0d025520b8ff
f8400c0f0f0255201810100255201cba03e2001dffc0b6091002551d1f12
b803e240101340090e0255131400252509072c2c03002fed3fed3fdd2bed
2fdd2bed012f2b2b2b2b2bc0dd2bc410c02f2b2b2bcd31302b1bb1060243
545840521213140000200b0303252509071c701d01401d601d021d1f0b2c
2c030b160c0d0d0655160410100655160b20141010065520040f0f065520
020d0d065520202f2e290c0d0d06552906180d0d065506062f2e1112392f
2bcd2b1112392f2b2b2bc0cd2b2b003fed3fdd5d5dcd3fed1217393fddcd
31301bb9002fffc0b34747342fb8ffc040422b2e34602f7c047c058a0480
2faf2fc02f07402f802f02002f162a152b55055508542b96070748070120
2f370a470a560a9804a72aa02f07c02ff02b022020002021baffe0000bff
e040453c204f205e20660a6c207a209f009f20aa07b907c62a0b26081327
0c41121e1344151d2716411c1e1d441f0020210b042c1500252509071f2c
012c2c1f030b1f000b210c20b8016740121560168016af16031f16901602
16eb295006b8ffc0b3282e3406b8ffc0b7473506432e437f182b4e10f42b
2b4dedfd725d3cfd3c3c3c3c3c003f3ced723fed3f11173910f5edfc01f5
0010f5edfc01f531304379401a262b0408272526082920002b0429200028
072520012a052c2000002b2b012b2b2b8181005d3838383801715d007101
72715d2b2b59591bb514001f0b0925b807e9b46c0907032cb80805b26c03
0b00183f2b3f2b3f3f303159250606232226353412333217353426262322
072725331114161633323717052335112e0223220706151416333202c743
804a96e0f8c3794f0f20181a2b0d01112d0f21161b2d0bfef02e063c632f
58455bb06c5b67463dfbc5c501474da99d481a102370fbdda1471c112371
c901d84470394f68c8cad700>PBAAAA+Times#20New#20Roman AddT42Char 
1 9266 15 <000200b0ffe4019003b0000b0017005bb0852b58b10319b80125401d0d67
369019a01902064000070c40120b0f4015034009349015a0150215bc0125
001800d2010000182b10f65df4ed10ed003fed3fed3130015d2b1bb70c12
0600120b000700183f3f1133113330315901321615140623222635343613
321615140623222635343601212e41412e2e41412c2f41422e2e414103b0
412e2e41412e2e41fd13422e2e41412e2e42>PBAAAA+Times#20New#20Roman AddT42Char 

1 0 16 <> PBAAAA+Times#20New#20Roman AddT42Char 
1 0 0 <0002011c0000051c050000030007006cb0852b58b10201bb02be00060007
02bfb2000504b802beb403000a0704b802beb5010019080605bf02be0002
000301290009016b015e00182b10f63cfd3c4e10f43c4dfd3c003f3cfd3c
10fc3cfd3c31301bb10004b807d7b36c000107b807d7b16c0100182f2b2f
2b3031592111211125211121011c0400fc2003c0fc400500fb002004c000
>PBAAAA+Times#20New#20Roman AddT42Char 
PBAAAA+Times#20New#20Roman /CharStrings get begin
/g1 1 def
/g2 2 def
/g3 3 def
/g4 4 def
/g5 5 def
/g6 6 def
/g7 7 def
/g8 8 def
/g9 9 def
/g10 10 def
/g11 11 def
/g12 12 def
/g13 13 def
/g14 14 def
/g15 15 def
/g16 16 def
end
PBAAAA+Times#20New#20Roman /Encoding get
dup 32 /g1 put
dup 33 /g2 put
dup 34 /g3 put
dup 35 /g4 put
dup 36 /g5 put
dup 37 /g6 put
dup 38 /g7 put
dup 39 /g8 put
dup 40 /g9 put
dup 41 /g10 put
dup 42 /g11 put
dup 43 /g12 put
dup 44 /g13 put
dup 45 /g14 put
dup 46 /g15 put
dup 47 /g16 put
pop
end
%ADOEndSubsetFont
/DGXVTS+Times#20New#20Roman /PBAAAA+Times#20New#20Roman findfont ct_VMDictPut
/DGXVTS+Times#20New#20Roman*1 
[32{/.notdef}rp /g1 /g2 /g3 /g4 /g5 /g6 /g7 
/g8 /g9 /g10 /g11 /g12 /g13 /g14 /g15 
/g16 208{/.notdef}rp]
DGXVTS+Times#20New#20Roman nf
DGXVTS+Times#20New#20Roman*1 [18 0 0 -18 0 0 ]msf
169.92 52.565 mo
( !)
[5.99387 0 ]xsh
210.474 52.565 mo
("#$%)
[16.0021 7.992 5.004 0 ]xsh
247.554 52.565 mo
(&)sh
253.566 52.565 mo
('#%$\(\)#*)
[5.99388 7.992 7.992 5.14185 9 5.9939 7.992 0 ]xsh
%ADOBeginSubsetFont: HIBBAA+Times#20New#20Roman Initial
ct_T42Dict begin
-0.496 -0.305 1.332 1.023
 256 array 0 1 255 {1 index exch /.notdef put} for  /HIBBAA+Times#20New#20Roman
Type42DictBegin
[<00010000000b000b000b000b63767420c6aff928000000bc0000079c6670
676dd56261dc0000085800000634676c7966930dc59700004a88000026b6
6865616471a99fe100000e8c00000036686865610203300d00000ec40000
0024686d747884ffff5700000ee8000000646c6f6361bfca000000000f4c
000000686d6178701403b30400000fb4000000206e616d65ef6888040000
0fd400002f987072657036be05f700003f6c00000b1b6764697200000000
0000000000000000058e0000054c001f054c001c037100180000ffe10000
ffe80000ffe8fe4afffc056b0023fe68ffe2033e00000095000000950000
000000000000002500a8008e010b007d00820045003200a400ca006b0070
005100af003c00f001d700470004002500770029004000fd001601610046
01370029008e0017ffca0025005bffe902e600020099008100f2007500d6
006300c60006009a01330024003800cc003dff67001305d8003600860095
ffdb0007043400a500d8ffdcfffe004800a200d8013c01530380053e0057
007a007c008c0117012a0138017c0026003c007800bd00c0021009b5000c
004d004e00540058006700b4040100020005005000af01d5034300240058
008b013501c0ffac002000250026002d00410136022bffba001e002a0034
003b003f00850094009800d7012e013d033104b900170040006100b9010e
0116012201bfff9c001f001f004d005c0086008c009600aa00cb00cb011f
0154022f036005a9fee8000e006f007c007d008b00d500f1010a01570178
02b803adfe3fff6affb3ffc4001f0037003f0044004a0078007d009700a2
00a700b600c000c100c600d8011d0150019701ee04740532fd81fed1fee0
ff16fff1000f002d00550068006e007f00890095009e00c200da00e400f8
01040108011101c2023002da030e049e0517ff00ff8700000020002f0041
0057007800870088008800b900c200c5012001280133017401d6020e020f
026c027e02ab02ec038903b103e304e7ff43ffa8ffc3ffdcffe900070023
0023002600520077007d0081008f009900ac00ae00b500b800c800ea00f0
00f40135016a018b01b101b501f7021402ad02d504fc05d805f0ff9dfffc
000b00240025002c0030003000330040004700490057006e009a00bd00c9
00cd00dc00fa00fa011b0139017e0187018a018e0195019601df01f60286
02cf02de039603a903b003c804010432046a058b05e006510761fe96fe9a
ff4bff870013002500340038003e004a0065006b0073007a009c00a200b2
00b700bf00f000f700fb0104011301200124013b01520178017c0181018f
01a001d90248026a026f02700301031d032303270388041f04ab04d104da
057a058bfe26fe59ff2e00010002000a003b003b004700580058005f0066
006b007a007a008b009900af00bc00c000c700cc00e900f200f500fb00fb
0102010a010b01150121012701450145015501570158015e01610168017d
01a301ab01da01ee021002180222028f029402a302d202e703710393039b
03b303d303fe04ff050b05320532054b0559058b05ab05f2065506890742
076207a708ccfd2afdc8fddefe0cfe15fe27fe53fe84febbff58ff76ff77
ffa1ffa7ffadffafffc00000000000030094001d001f002000200027002e
0048004b004c005e005f006b0071007c008a00900091009100a700af00b3
00b400c400c600d100d200de00df00df00e600e800ea00eb00f200f500f5
00fc010201180123013101330137015c016201660170017a017a017a0182
01980199019b01b001bf01c001ca01d301d701d801e001e001f601f701f8
02120213022f023702440247024f0252026302650270027f0298029b02a6
02b702ba02c502cf02d602d702e502fe031c031d03450348035d035e0371
0379038103a103b703d403d503d803e103f803fe0404041f042104230425
043a0467048304e00528054b0564056a059f059f05c2060b066a06af06b3
06cb06e8070607280748075007a607b207ff009500af0092009600000000
0000000000000000017e01a80129025b0212020301c302b4019301cd02b2
04ed020e0159017a0300022d042c00c8004d00e602890325013e0378011b
00f1018d00490203007c000e029d02470024000000000052004400330038
005405d3041501a7000002860168005000cf0002004b0024008800ba0025
ffd800110091ff6b00b5011700260065ff9900490080014b01c000f40167
027102ea04fc0310017c01e103d9015501e601ee0434019606cb005c022b
0099003d009f00160039002700de00790120022e005a0099038800940021
0019002a046c05e8000001f203b200aa0296028902b4ffc9020000ec0005
005a0447010004e00000052a001f01eb00ae016800ca02d3028901b50406
01a1014f014b011c0308005e00c70024029d006503750104028002f304d8
00d90239025a032c01f204310303005002e50283005901eb010800ac0196
02f8012100950180004400e501eb02e5007400f301ff02fd038f026801c8
01c70116022b0142033000fe02e101620200002400ee0517010802370066
0006010201e602aa0366019b00d305c203dc044d03b6000401be013702fc
03200244014d0338ffed002506f8030dfed5ff43004402ffff92040bfdef
0155017100d9ffc4032d0461044afbb5fbcf02170192036d0558fff2fe7d
0583023e006605e9073d00790243002500cf00fd00af002a01ef021a0026
001f0025003a000001170490fbfb0251001d02f001f50078018f005f0024
0044005400bf00af006701a8002600050006003f009800fa02ab00c2004d
0375004a00b600c401bf017c006f00130263000c006801520002012e0104
001f001f009a000000f1046900790080005000bd056b00ab0080001e05a5
fe4000ce006e0056004800db018b00b30048023904580053008200820022
03d703f1047040425554403f3e3d3c3b3a3938373534333231302f2e2d2c
2b2a292827262524232221201f1e1d1c1b1a191817161514131211100f0e
0d0c0b0a090807060504030201002c4523466020b02660b004262348482d
2c452346236120b02661b004262348482d2c45234660b0206120b04660b0
04262348482d2c4523462361b0206020b02661b02061b004262348482d2c
45234660b0406120b06660b004262348482d2c4523462361b0406020b026
61b04061b004262348482d2c0110203c003c2d2c20452320b0cd442320b8
015a51582320b08d44235920b0ed51582320b04d44235920b09051582320
b00d44235921212d2c20204518684420b001602045b04676688a4560442d
2c01b10b0a432343650a2d2c00b10a0b4323430b2d2c00b0172370b10117
3e01b0172370b10217453ab10200080d2d2c45b01a234445b01923442d2c
2045b00325456164b050515845441b2121592d2cb00143632362b0002342
b00f2b2d2c2045b0004360442d2c01b00643b00743650a2d2c2069b04061
b0008b20b12cc08a8cb8100062602b0c642364615c58b00361592d2c45b0
112bb0172344b0177ae4182d2c45b0112bb01723442d2cb01243588745b0
112bb0172344b0177ae41b038a45186920b01723448a8a8720b0a05158b0
112bb0172344b0177ae41b21b0177ae45959182d2c2d2cb0022546608a46
b040618c482d2c01182f2d2c20b0032545b019234445b01a234445652345
20b00325606a20b009234223688a6a606120b01a8ab000527921b21a1a40
b9ffe0001a45208a54582321b03f1b235961441cb114008a5279b3194020
1945208a54582321b03f1b235961442d2cb110114323430b2d2cb10e0f43
23430b2d2cb10c0d4323430b2d2cb10c0d432343650b2d2cb10e0f432343
650b2d2cb11011432343650b2d2c4b525845441b2121592d2c0120b00325
2349b04060b0206320b000525823b002253823b002256538008a63381b21
2121212159012d2c4bb06451584569b00943608a103a1b212121592d2c01
b005251023208af500b0016023edec2d2c01b005251023208af500b00161
23edec2d2c01b0062510f500edec2d2c20b001600110203c003c2d2c20b0
01610110203c003c2d2cb02b2bb02a2a2d2c00b00743b006430b2d2c3eb0
2a2a2d2c352d2c76b802ee23701020b802ee4520b0005058b00161593a2f
182d2c21210c6423648bb84000622d2c21b08051580c6423648bb8200062
1bb200402f2b59b002602d2c21b0c051580c6423648bb81555621bb20080
2f2b59b002602d2c0c6423648bb84000626023212d2cb4000100000015b0
0826b00826b00826b008260f10161345683ab001162d2cb4000100000015
b00826b00826b00826b008260f1016134568653ab001162d2c4b53234b51
5a5820458a60441b2121592d2c4b545820458a60441b2121592d2c4b5323
4b515a58381b2121592d2c4b5458381b2121592d2cb0134358031b02592d
2cb0134358021b03592d2c4b54b012435c5a58381b2121592d2cb012435c
580cb00425b00425060c6423646164b807085158b00425b00425012046b0
1060482046b0106048590a21211b2121592d2cb012435c580cb00425b004
25060c6423646164b807085158b00425b00425012046b8fff060482046b8
fff06048590a21211b2121592d2c4b53234b515a58b03a2b1b2121592d2c
4b53234b515a58b03b2b1b2121592d2c4b53234b515ab012435c5a58381b
2121592d2c0c8a034b54b00426024b545a8a8a0ab012435c5a58381b2121
592d2c462346608a8a462320468a608a61b8ff8062232010238ab903b003
b08a70456020b0005058b00161b8ffba8b1bb0468c59b0106068013a2d2c
b1020042b123018851b1400188535a58b910000020885458b20201024360
4259b12401885158b920000040885458b2020202436042b12401885458b2
022002436042004b014b5258b2020802436042591bb940000080885458b2
02040243604259b94000008063b80100885458b202080243604259b94000
010063b80200885458b202100243604259b12601885158b94000020063b8
0400885458b202400243604259b94000040063b80800885458b202800243
604259b12801885158b94000080063b81000885458ba0002010000024360
42595959595959592d2cb0024354584b53234b515a58381b2121591b2121
2121592d000100000006e66614c07c9f5f0f3cf50819080000000000a31f
b8bd00000000d19de405fc05fd8c0aaa0830000200090001000100000000
000100000721fe4500570a3afc05fa500aaa001800070000000000000000
0000000000190639011c04e3ff9c0400007d04000020038d001404e3ff77
02aa008c0239005402aaff21047300b80200ffeb0400002705c7ffc304e3
ffd104e3ffd1020000000473008f031d002a04000030031dffed0239fe9b
0400003c05c70023023900580400004400000000000000680000027c0000
03a8000004c00000071a00000946000009c600000b3200000bba00000ddc
00000e5000001084000011fa000014400000166a0000166a000018020000
198000001bfc00001d4c00001f7e00002084000023be00002562000026b6
00010000001900f2003c0097000600020010002f0056000004ed02580004
00020000005303ea0000000300000000021a00000000000300000001001e
021a0000000300000002000c02c200000003000000030056029000000003
00000004002c02a20000000300000005001802e600000003000000060030
02fe00000003000000070076021a00000003000000080030033c00000003
000000090086054c000000030000000d0d1805d20001000000000000010d
12ea0001000000000001000f13f700010000000000020006144b00010000
00000003002b143200010000000000040016143b0001000000000005000c
145d0001000000000006001814690001000000000007003b13f700010000
00000008001812f1000100000000000900431481000100000000000d068c
14c40003000104030002000e1b700003000104030004002e1b5000030001
04050002000e1b9e0003000104050004002e1b7e0003000104060002000c
1bcc0003000104060004002c1bac0003000104070002000c1bf800030001
04070004002c1bd80003000104080002000c1c2c0003000104080004002c
1c0c0003000104090000021e032e0003000104090001001e021a00030001
04090002000c02c20003000104090003005602900003000104090004002c
02a20003000104090005001802e60003000104090006003002fe00030001
040900070076021a00030001040900080030033c00030001040900090086
054c000300010409000d0d2a1c3800030001040a0002000e298200030001
040a0004002e296200030001040b000200141bf800030001040b00040034
1bd800030001040c0002001029b000030001040c00040030299000030001
040e0002000829e000030001040e0004002829c00003000104100002000e
2a080003000104100004002e29e80003000104130002000e2a3600030001
04130004002e2a160003000104140002000c1bf80003000104140004002c
1bd80003000104150002000e2a640003000104150004002e2a4400030001
04160002000e2a920003000104160004002e2a720003000104190002000c
2ac00003000104190004002c2aa000030001041b0002000e2aec00030001
041b0004002e2acc00030001041d0002000c1bf800030001041d0004002c
1bd800030001041f0002000c2b1a00030001041f0004002c2afa00030001
04240002000e2b460003000104240004002e2b2600030001042a0002000e
2b7400030001042a0004002e2b5400030001042d0002000c2ba200030001
042d0004002c2b8200030001080a0002000e298200030001080a0004002e
29620003000108160002000e2a920003000108160004002e2a7200030001
0c0a0002000e2982000300010c0a0004002e2962000300010c0c00020010
29b0000300010c0c00040030299000a90020003200300031003500200054
006800650020004d006f006e006f007400790070006500200043006f0072
0070006f0072006100740069006f006e002e00200041006c006c00200052
00690067006800740073002000520065007300650072007600650064002e
0020000d000d0048006500620072006500770020004f00700065006e0054
0079007000650020004c00610079006f007500740020006c006f00670069
006300200063006f0070007900720069006700680074002000a900200032
0030003000330020002600200032003000300037002c002000520061006c
00700068002000480061006e0063006f0063006b002000260020004a006f
0068006e00200048007500640073006f006e002e00200054006800690073
0020006c00610079006f007500740020006c006f00670069006300200066
006f00720020004200690062006c006900630061006c0020004800650062
0072006500770020006900730020006f00700065006e00200073006f0075
00720063006500200073006f00660074007700610072006500200075006e
00640065007200200074006800650020004d004900540020004c00690063
0065006e00730065003b002000730065006500200065006d006200650064
0064006500640020006c006900630065006e007300650020006400650073
006300720069007000740069006f006e00200066006f0072002000640065
007400610069006c0073002e00540069006d006500730020004e00650077
00200052006f006d0061006e002000690073002000610020007400720061
00640065006d00610072006b0020006f006600200054006800650020004d
006f006e006f007400790070006500200043006f00720070006f00720061
00740069006f006e002e004d006f006e006f0074007900700065003a0054
0069006d006500730020004e0065007700200052006f006d0061006e0020
004900740061006c0069006300200028004d006900630072006f0073006f
00660074002900560065007200730069006f006e00200036002e00390030
00540069006d00650073004e006500770052006f006d0061006e00500053
002d004900740061006c00690063004d005400a900200032003000310035
00200054006800650020004d006f006e006f007400790070006500200043
006f00720070006f0072006100740069006f006e002e00200041006c006c
002000520069006700680074007300200052006500730065007200760065
0064002e0020000d000a000d000a0048006500620072006500770020004f
00700065006e00540079007000650020004c00610079006f007500740020
006c006f00670069006300200063006f0070007900720069006700680074
002000a9002000320030003000330020002600200032003000300037002c
002000520061006c00700068002000480061006e0063006f0063006b0020
00260020004a006f0068006e00200048007500640073006f006e002e0020
00540068006900730020006c00610079006f007500740020006c006f0067
0069006300200066006f00720020004200690062006c006900630061006c
00200048006500620072006500770020006900730020006f00700065006e
00200073006f007500720063006500200073006f00660074007700610072
006500200075006e00640065007200200074006800650020004d00490054
0020004c006900630065006e00730065003b002000730065006500200065
006d0062006500640064006500640020006c006900630065006e00730065
0020006400650073006300720069007000740069006f006e00200066006f
0072002000640065007400610069006c0073002e004d006f006e006f0074
00790070006500200054007900700065002000440072006100770069006e
00670020004f006600660069006300650020002d0020005300740061006e
006c006500790020004d006f007200690073006f006e002c002000560069
00630074006f00720020004c0061007200640065006e0074002000310039
003300320059006f00750020006d00610079002000750073006500200074
00680069007300200066006f006e00740020006100730020007000650072
006d00690074007400650064002000620079002000740068006500200045
0055004c004100200066006f00720020007400680065002000700072006f
006400750063007400200069006e00200077006800690063006800200074
00680069007300200066006f006e007400200069007300200069006e0063
006c007500640065006400200074006f00200064006900730070006c0061
007900200061006e00640020007000720069006e007400200063006f006e
00740065006e0074002e002000200059006f00750020006d006100790020
006f006e006c0079002000280069002900200065006d0062006500640020
007400680069007300200066006f006e007400200069006e00200063006f
006e00740065006e00740020006100730020007000650072006d00690074
007400650064002000620079002000740068006500200065006d00620065
006400640069006e00670020007200650073007400720069006300740069
006f006e007300200069006e0063006c007500640065006400200069006e
0020007400680069007300200066006f006e0074003b00200061006e0064
00200028006900690029002000740065006d0070006f0072006100720069
006c007900200064006f0077006e006c006f006100640020007400680069
007300200066006f006e007400200074006f002000610020007000720069
006e0074006500720020006f00720020006f00740068006500720020006f
00750074007000750074002000640065007600690063006500200074006f
002000680065006c00700020007000720069006e007400200063006f006e
00740065006e0074002e000d000d00540068006500200066006f006c006c
006f00770069006e00670020006c006900630065006e00730065002c0020
006200610073006500640020006f006e00200074006800650020004d0049
00540020006c006900630065006e00730065002000280068007400740070
003a002f002f0065006e002e00770069006b006900700065006400690061
002e006f00720067002f00770069006b0069002f004d00490054005f004c
006900630065006e007300650029002c0020006100700070006c00690065
007300200074006f00200074006800650020004f00700065006e00540079
007000650020004c00610079006f007500740020006c006f006700690063
00200066006f00720020004200690062006c006900630061006c00200048
006500620072006500770020201c004c00610079006f007500740020004c
006f006700690063201d0020006100730020006a006f0069006e0074006c
007900200064006500760065006c006f0070006500640020006200790020
00520061006c00700068002000480061006e0063006f0063006b00200061
006e00640020004a006f0068006e00200048007500640073006f006e002e
0020000d000d005000650072006d0069007300730069006f006e00200069
007300200068006500720065006200790020006700720061006e00740065
0064002c002000660072006500650020006f006600200063006800610072
00670065002c00200074006f00200061006e007900200070006500720073
006f006e0020006f0062007400610069006e0069006e0067002000610020
0063006f007000790020006f006600200074006800650020004f00700065
006e00540079007000650020004c00610079006f007500740020006c006f
00670069006300200066006f00720020004200690062006c006900630061
006c002000480065006200720065007700200061006e0064002000610073
0073006f00630069006100740065006400200064006f00630075006d0065
006e0074006100740069006f006e002000660069006c0065007300200028
0074006800650020201c004c00610079006f007500740020004c006f0067
0069006300200053006f006600740077006100720065201d0029002c0020
0074006f0020006400650061006c00200069006e00200074006800650020
004c00610079006f007500740020004c006f00670069006300200053006f
00660074007700610072006500200077006900740068006f007500740020
007200650073007400720069006300740069006f006e002c00200069006e
0063006c007500640069006e006700200077006900740068006f00750074
0020006c0069006d00690074006100740069006f006e0020007400680065
002000720069006700680074007300200074006f0020007500730065002c
00200063006f00700079002c0020006d006f0064006900660079002c0020
006d0065007200670065002c0020007000750062006c006900730068002c
00200064006900730074007200690062007500740065002c002000730075
0062006c006900630065006e00730065002c00200061006e0064002f006f
0072002000730065006c006c00200063006f00700069006500730020006f
006600200074006800650020004c00610079006f007500740020004c006f
00670069006300200053006f006600740077006100720065002c00200061
006e006400200074006f0020007000650072006d00690074002000700065
00720073006f006e007300200074006f002000770068006f006d00200074
006800650020004c00610079006f007500740020004c006f006700690063
00200053006f006600740077006100720065002000690073002000660075
0072006e0069007300680065006400200074006f00200064006f00200073
006f002c0020007300750062006a00650063007400200074006f00200074
0068006500200066006f006c006c006f00770069006e006700200063006f
006e0064006900740069006f006e0073003a000d000d0054006800650020
00610062006f0076006500200063006f0070007900720069006700680074
0020006e006f007400690063006500200061006e00640020007400680069
00730020007000650072006d0069007300730069006f006e0020006e006f
00740069006300650020007300680061006c006c00200062006500200069
006e0063006c007500640065006400200069006e00200061006c006c0020
0063006f00700069006500730020006f0072002000730075006200730074
0061006e007400690061006c00200070006f007200740069006f006e0073
0020006f006600200074006800650020004c00610079006f007500740020
004c006f00670069006300200053006f006600740077006100720065002e
000d000d00540048004500200053004f0046005400570041005200450020
00490053002000500052004f005600490044004500440020002700410053
0020004900530027002c00200057004900540048004f0055005400200057
0041005200520041004e005400590020004f004600200041004e00590020
004b0049004e0044002c002000450058005000520045005300530020004f
005200200049004d0050004c004900450044002c00200049004e0043004c
005500440049004e004700200042005500540020004e004f00540020004c
0049004d004900540045004400200054004f002000540048004500200057
0041005200520041004e00540049004500530020004f00460020004d0045
0052004300480041004e0054004100420049004c004900540059002c0020
004600490054004e00450053005300200046004f00520020004100200050
004100520054004900430055004c0041005200200050005500520050004f
0053004500200041004e00440020004e004f004e0049004e004600520049
004e00470045004d0045004e0054002e00200049004e0020004e004f0020
004500560045004e00540020005300480041004c004c0020005400480045
00200041005500540048004f005200530020004f005200200043004f0050
00590052004900470048005400200048004f004c00440045005200530020
004200450020004c004900410042004c004500200046004f005200200041
004e005900200043004c00410049004d002c002000440041004d00410047
004500530020004f00520020004f00540048004500520020004c00490041
00420049004c004900540059002c00200057004800450054004800450052
00200049004e00200041004e00200041004300540049004f004e0020004f
004600200043004f004e00540052004100430054002c00200054004f0052
00540020004f00520020004f00540048004500520057004900530045002c
002000410052004900530049004e0047002000460052004f004d002c0020
004f005500540020004f00460020004f005200200049004e00200043004f
004e004e0045004300540049004f004e0020005700490054004800200054
0048004500200053004f0046005400570041005200450020004f00520020
00540048004500200055005300450020004f00520020004f005400480045
00520020004400450041004c0049004e0047005300200049004e00200054
0048004500200053004f004600540057004100520045002e000da9203230
313520546865204d6f6e6f7479706520436f72706f726174696f6e2e2041
6c6c205269676874732052657365727665642e200d0d486562726577204f
70656e54797065204c61796f7574206c6f67696320636f70797269676874
20a92032303033202620323030372c2052616c70682048616e636f636b20
26204a6f686e20487564736f6e2e2054686973206c61796f7574206c6f67
696320666f72204269626c6963616c20486562726577206973206f70656e
20736f7572636520736f66747761726520756e64657220746865204d4954
204c6963656e73653b2073656520656d626564646564206c6963656e7365
206465736372697074696f6e20666f722064657461696c732e54696d6573
204e657720526f6d616e20697320612074726164656d61726b206f662054
6865204d6f6e6f7479706520436f72706f726174696f6e2e4d6f6e6f7479
70653a54696d6573204e657720526f6d616e204974616c696320284d6963
726f736f66742956657273696f6e20362e393054696d65734e6577526f6d
616e50532d4974616c69634d544d6f6e6f74797065205479706520447261
77696e67204f6666696365202d205374616e6c6579204d6f7269736f6e2c
20566963746f72204c617264656e742031393332596f75206d6179207573
65207468697320666f6e74206173207065726d6974746564206279207468
652045554c4120666f72207468652070726f6475637420696e2077686963
68207468697320666f6e7420697320696e636c7564656420746f20646973
706c617920616e64207072696e7420636f6e74656e742e2020596f75206d
6179206f6e6c792028692920656d626564207468697320666f6e7420696e
20636f6e74656e74206173207065726d6974746564206279207468652065
6d62656464696e67207265737472696374696f6e7320696e636c75646564
20696e207468697320666f6e743b20616e6420286969292074656d706f72
6172696c7920646f776e6c6f6164207468697320666f6e7420746f206120
7072696e746572206f72206f74686572206f757470757420646576696365
20746f2068656c70207072696e7420636f6e74656e742e0d0d5468652066
6f6c6c6f77696e67206c6963656e73652c206261736564206f6e20746865
204d4954206c6963656e73652028687474703a2f2f656e2e77696b697065
6469612e6f72672f77696b692f4d49545f4c6963656e7365292c20617070
6c69657320746f20746865204f70656e54797065204c61796f7574206c6f
67696320666f72204269626c6963616c2048656272657720d24c61796f75
74204c6f676963d3206173206a6f696e746c7920646576656c6f70656420
62792052616c70682048616e636f636b20616e64204a6f686e2048756473
6f6e2e200d0d5065726d697373696f6e2069732068657265627920677261
6e7465642c2066726565206f66206368617267652c20746f20616e792070
6572736f6e206f627461696e696e67206120636f7079206f662074686520
4f70656e54797065204c61796f7574206c6f67696320666f72204269626c
6963616c2048656272657720616e64206173736f63696174656420646f63
756d656e746174696f6e2066696c6573202874686520d24c61796f757420
4c6f67696320536f667477617265d3292c20746f206465616c20696e2074
6865204c61796f7574204c6f67696320536f66747761726520776974686f
7574207265737472696374696f6e2c20696e636c7564696e672077697468
6f7574206c696d69746174696f6e207468652072696768747320746f2075
73652c20636f70792c206d6f646966792c206d657267652c207075626c69
73682c20646973747269627574652c207375626c6963656e73652c20616e
642f6f722073656c6c20636f70696573206f6620746865204c61796f7574
204c6f67696320536f6674776172652c20616e6420746f207065726d6974
20706572736f6e7320746f2077686f6d20746865204c61796f7574204c6f
67696320536f667477617265206973206675726e697368656420746f2064
6f20736f2c207375626a65637420746f2074686520666f6c6c6f77696e67
20636f6e646974696f6e733a0d0d5468652061626f766520636f70797269
676874206e6f7469636520616e642074686973207065726d697373696f6e
206e6f74696365207368616c6c20626520696e636c7564656420696e2061
6c6c20636f70696573206f72207375627374616e7469616c20706f727469
6f6e73206f6620746865204c61796f7574204c6f67696320536f66747761
72652e0d0d54484520534f4654574152452049532050524f564944454420
274153204953272c20574954484f55542057415252414e5459204f462041
4e59204b494e442c2045585052455353204f5220494d504c4945442c2049
4e434c5544494e4720425554204e4f54204c494d4954454420544f205448
452057415252414e54494553204f46204d45524348414e544142494c4954
592c204649544e45535320464f52204120504152544943554c4152205055
52504f534520414e44204e4f4e494e4652494e47454d454e542e20494e20
4e4f204556454e54205348414c4c2054484520415554484f5253204f5220
434f5059524947485420484f4c44455253204245204c4941424c4520464f
5220414e5920434c41494d2c2044414d41474553204f52204f5448455220
4c494142494c4954592c205748455448455220494e20414e20414354494f
4e204f4620434f4e54524143542c20544f5254204f52204f544845525749
53452c2041524953494e472046524f4d2c204f5554204f46204f5220494e
20434f4e4e454354494f4e20574954482054484520534f46545741524520
4f522054484520555345204f52204f54484552204445414c494e47532049
4e2054484520534f4654574152452e0d00540069006d006500730020004e
0065007700200052006f006d0061006e0020006300750072007300690076
006100540069006d006500730020004e0065007700200052006f006d0061
006e0020006b00750072007a00ed0076006100540069006d006500730020
004e0065007700200052006f006d0061006e0020006b0075007200730069
007600540069006d006500730020004e0065007700200052006f006d0061
006e0020004b00750072007300690076006f00690074007500540069006d
006500730020004e0065007700200052006f006d0061006e002003a003bb
03ac03b303b903b10059006f00750020006d006100790020007500730065
0020007400680069007300200066006f006e007400200061007300200070
00650072006d006900740074006500640020006200790020007400680065
002000450055004c004100200066006f0072002000740068006500200070
0072006f006400750063007400200069006e002000770068006900630068
0020007400680069007300200066006f006e007400200069007300200069
006e0063006c007500640065006400200074006f00200064006900730070
006c0061007900200061006e00640020007000720069006e007400200063
006f006e00740065006e0074002e002000200059006f00750020006d0061
00790020006f006e006c0079002000280069002900200065006d00620065
00640020007400680069007300200066006f006e007400200069006e0020
0063006f006e00740065006e00740020006100730020007000650072006d
00690074007400650064002000620079002000740068006500200065006d
00620065006400640069006e006700200072006500730074007200690063
00740069006f006e007300200069006e0063006c00750064006500640020
0069006e0020007400680069007300200066006f006e0074003b00200061
006e006400200028006900690029002000740065006d0070006f00720061
00720069006c007900200064006f0077006e006c006f0061006400200074
00680069007300200066006f006e007400200074006f0020006100200070
00720069006e0074006500720020006f00720020006f0074006800650072
0020006f0075007400700075007400200064006500760069006300650020
0074006f002000680065006c00700020007000720069006e007400200063
006f006e00740065006e0074002e000d000a000d000a0054006800650020
0066006f006c006c006f00770069006e00670020006c006900630065006e
00730065002c0020006200610073006500640020006f006e002000740068
00650020004d004900540020006c006900630065006e0073006500200028
0068007400740070003a002f002f0065006e002e00770069006b00690070
0065006400690061002e006f00720067002f00770069006b0069002f004d
00490054005f004c006900630065006e007300650029002c002000610070
0070006c00690065007300200074006f00200074006800650020004f0070
0065006e00540079007000650020004c00610079006f007500740020006c
006f00670069006300200066006f00720020004200690062006c00690063
0061006c00200048006500620072006500770020201c004c00610079006f
007500740020004c006f006700690063201d0020006100730020006a006f
0069006e0074006c007900200064006500760065006c006f007000650064
002000620079002000520061006c00700068002000480061006e0063006f
0063006b00200061006e00640020004a006f0068006e0020004800750064
0073006f006e002e0020000d000a000d000a005000650072006d00690073
00730069006f006e00200069007300200068006500720065006200790020
006700720061006e007400650064002c002000660072006500650020006f
00660020006300680061007200670065002c00200074006f00200061006e
007900200070006500720073006f006e0020006f0062007400610069006e
0069006e00670020006100200063006f007000790020006f006600200074
006800650020004f00700065006e00540079007000650020004c00610079
006f007500740020006c006f00670069006300200066006f007200200042
00690062006c006900630061006c00200048006500620072006500770020
0061006e00640020006100730073006f0063006900610074006500640020
0064006f00630075006d0065006e0074006100740069006f006e00200066
0069006c00650073002000280074006800650020201c004c00610079006f
007500740020004c006f00670069006300200053006f0066007400770061
00720065201d0029002c00200074006f0020006400650061006c00200069
006e00200074006800650020004c00610079006f007500740020004c006f
00670069006300200053006f006600740077006100720065002000770069
00740068006f007500740020007200650073007400720069006300740069
006f006e002c00200069006e0063006c007500640069006e006700200077
006900740068006f007500740020006c0069006d00690074006100740069
006f006e0020007400680065002000720069006700680074007300200074
006f0020007500730065002c00200063006f00700079002c0020006d006f
0064006900660079002c0020006d0065007200670065002c002000700075
0062006c006900730068002c002000640069007300740072006900620075
00740065002c0020007300750062006c006900630065006e00730065002c
00200061006e0064002f006f0072002000730065006c006c00200063006f
00700069006500730020006f006600200074006800650020004c00610079
006f007500740020004c006f00670069006300200053006f006600740077
006100720065002c00200061006e006400200074006f0020007000650072
006d0069007400200070006500720073006f006e007300200074006f0020
00770068006f006d00200074006800650020004c00610079006f00750074
0020004c006f00670069006300200053006f006600740077006100720065
0020006900730020006600750072006e0069007300680065006400200074
006f00200064006f00200073006f002c0020007300750062006a00650063
007400200074006f002000740068006500200066006f006c006c006f0077
0069006e006700200063006f006e0064006900740069006f006e0073003a
000d000a000d000a005400680065002000610062006f0076006500200063
006f00700079007200690067006800740020006e006f0074006900630065
00200061006e0064002000740068006900730020007000650072006d0069
007300730069006f006e0020006e006f0074006900630065002000730068
0061006c006c00200062006500200069006e0063006c0075006400650064
00200069006e00200061006c006c00200063006f00700069006500730020
006f00720020007300750062007300740061006e007400690061006c0020
0070006f007200740069006f006e00730020006f00660020007400680065
0020004c00610079006f007500740020004c006f00670069006300200053
006f006600740077006100720065002e000d000a000d000a005400480045
00200053004f004600540057004100520045002000490053002000500052
004f0056004900440045004400200027004100530020004900530027002c
00200057004900540048004f00550054002000570041005200520041004e
005400590020004f004600200041004e00590020004b0049004e0044002c
002000450058005000520045005300530020004f005200200049004d0050
004c004900450044002c00200049004e0043004c005500440049004e0047
00200042005500540020004e004f00540020004c0049004d004900540045
004400200054004f0020005400480045002000570041005200520041004e
00540049004500530020004f00460020004d00450052004300480041004e
0054004100420049004c004900540059002c0020004600490054004e0045
0053005300200046004f0052002000410020005000410052005400490043
0055004c0041005200200050005500520050004f0053004500200041004e
00440020004e004f004e0049004e004600520049004e00470045004d0045
004e0054002e00200049004e0020004e004f0020004500560045004e0054
0020005300480041004c004c002000540048004500200041005500540048
004f005200530020004f005200200043004f005000590052004900470048
005400200048004f004c00440045005200530020004200450020004c0049
00410042004c004500200046004f005200200041004e005900200043004c
00410049004d002c002000440041004d00410047004500530020004f0052
0020004f00540048004500520020004c0049004100420049004c00490054
0059002c0020005700480045005400480045005200200049004e00200041
004e00200041004300540049004f004e0020004f004600200043004f004e
00540052004100430054002c00200054004f005200540020004f00520020
004f00540048004500520057004900530045002c00200041005200490053
0049004e0047002000460052004f004d002c0020004f005500540020004f
00460020004f005200200049004e00200043004f004e004e004500430054
0049004f004e00200057004900540048002000540048004500200053004f
0046005400570041005200450020004f0052002000540048004500200055
005300450020004f00520020004f00540048004500520020004400450041
004c0049004e0047005300200049004e002000540048004500200053004f
004600540057004100520045002e000d000a00540069006d006500730020
004e0065007700200052006f006d0061006e002000430075007200730069
0076006100540069006d006500730020004e0065007700200052006f006d
0061006e0020004900740061006c006900710075006500540069006d0065
00730020004e0065007700200052006f006d0061006e002000440151006c
007400540069006d006500730020004e0065007700200052006f006d0061
006e00200043006f0072007300690076006f00540069006d006500730020
004e0065007700200052006f006d0061006e002000430075007200730069
0065006600540069006d006500730020004e0065007700200052006f006d
0061006e0020006b00750072007300790077006100540069006d00650073
0020004e0065007700200052006f006d0061006e00200049007400e1006c
00690063006f00540069006d006500730020004e0065007700200052006f
006d0061006e0020041a0443044004410438043200540069006d00650073
0020004e0065007700200052006f006d0061006e0020004b00750072007a
00ed0076006100540069006d006500730020004e0065007700200052006f
006d0061006e0020013000740061006c0069006b00540069006d00650073
0020004e0065007700200052006f006d0061006e00200050006f01610065
0076006e006f00540069006d006500730020004e0065007700200052006f
006d0061006e0020006e00670068006900ea006e006700540069006d0065
00730020004e0065007700200052006f006d0061006e002000450074007a
0061006e0061410c005403cd02b0001d001f03cd03cd03cc03cb003c001f
03cbb3061d1f00410c03bc003003bc004003bc00a003bc00b003bc0005ff
c003bbb345453240b803bbb32b2e3240b803bbb2282932b9ffc003bbb31a
263280411303bb009f03bb00af03bb00cf03bb0004000003bb001f03bb00
0203bb02af0027001fffc003b9b2161b32b9ffc003b8b2424232b9ffc003
b8b2363832b9ffc003b8b32a2d32df410a03b800ef03b8000203b803b900
28001fffc003b9b3282e32f0410f03b90001000003b7000103b700030800
001f03be03bf002b001fffc003bfb2242a32b903b60381b23a1f0f411703
b3001003b2002003b2005003b2007003b200e003b2000600cf03b300df03
b300ef03b300ff03b30004001203a8b2e2891fbe039f016b019a001f0398
00930801400c1f7f047f05027f027f03025fbb02b00001ffc00117b21966
32b8ffc0b3651a6632b9ff800173b2196632bd038401170800001fffc002
afb2313340b802afb22e3340b802afb328293240b802afb326273240b802
afb321253240b802afb31c203240b802afb2233340b802afb21933a0bc02
af00b002af00e002afb5034003212932b8fff2b33a263d32bc0382038203
82003a0800b51f40255c331eb80381b25c6432b8ffeeb3252e3314b80381
b32b2e3269be03810001008a03810001000e0381b32b2f3210b80381b351
5b320cb80381b34e513222b80381b3474d320eb80381b246330ab8038140
0926473212254358320cb80381b2323310b80381b22a3312b80381b3373d
3212bb0381003d0033fff44015253d331825355b32102526343206252a33
0c252e33b8fffe4024252d330c3a2f33329925aa25ba25c9250405253633
0c25323832193a293a383a03182517b80381b42825382504bc0381038103
810025080040101f0f1f2b2e32691f781f020b1f303332b8fff1b31f263d
32bc038003800380001f080040151f375f07af07025f06af060222ac2b2e
3209ac2f33b8ffdc400aac1f223222232b52320eb8037fb229330eb8037f
b2223314b8037fb21e2032b8ffe7b71e2b33321e2b2f32b9ffc0037fb64c
4f3232262c33410affee037f00390033fff8037f002b0033ffea037fb23a
3320b8037fb33f46321eb8037fb32f3a3212b8037fb22e331eb8037fb32a
2d320eb8037fb2263304b8037fb3494a3404b8037fb2463304b8037fb221
3318b8037f400c1d3322263032322226333832b8fff8400a262b2f320926
1b21328abe037f0001037f037f037f00260800402e1f371f062f063f0603
9f02af02bf02cf02049f03af03bf03cf03046f037f038f03031f032f033f
034f035f03050f413a02ed0001005f02ed009f02ed00df02ed0003002f02
ed003f02ed006f02ed000300af02af0001004f02af009f02af0002002f02
af003f02af0002003f02b00001000f02b0001f02b00002004f02af005f02
af0002002f02af003f02af0002007003b2000103b203b202ed02ed02b002
b002af02af401a3701003001400102010100090102000800171700000012
110840410b027b02230034000d013d0034000d01370034000d011b401a34
0d8f340d84340d68340d59340d54340d48340d2c340d28340d4110023500
20000d021b0020000d01fc0020000d01c30020000d01500020000d012c40
1a200df0200dbe200d94200d79200d6a200d61200d5f200d44200d410d01
3e0138000d003d0138000d00300138000d001d0138000d01fdb40f4d0f00
09bf01fd004d000d03b1037f0015001f0215b226341fb80214b2263f1fb8
0208b21ebb1f41190206001e0801001f0205001f02ab001f0204001f02ab
001f0203001f0401001f02010031019a001f01fb00230156001f01aeb226
2a1fb801adb2262a1fb801abb226341f411501a8002602ab001f01a5001e
0125001f01a400ab02ab001f01a2003102ab001f01a1003102ab001f019d
b2236c1fb8019cb2236c1f4109019b00230401001f019a0033019a001f01
76b2262e1fb8016cb231721f4111016b0023019a001f016800240401001f
014500260801001f013f00230401001f0123b21e9e1fbc0121001e020100
1f0100b426791ffd1fb80125b21ffa33b80801b21ff924b802abb21fe826
b80101b21fe51fb8019ab21fe431b80101400b1fe331e41fe231891fd226
b80201b61fd026cd1fcd25b80401b21fb731b8019ab21fae26b80801b21f
ac1eb80401400b1f9e315e1f97269e1f9333b80801b21f8a24b8019ab21f
831fb802ab40131f82236c1f7523e41f7026cd1f6423721f5e25b80401b2
1f5d23b802abb21f55e6b80401b21f5324b80201b21f4f33b802abb21f4e
26b8040140131f4731671f4626ab1f4331cd1f3e235e1f3a1fb80401b61f
3924e41f3723b80801b21f2e23b80401b21f2a1eb80125400b1f2923ab1f
2731ab1f5537bc01c60007018a0007012b402e077f077107690766074b07
4007380736072d07220721071408120810080e080c080a08080806080408
0208000814b8ffe0402b0000010014061000000100060400000100041000
0001001002000001000200000001000002010802004a00b013034b024b53
42b0372b4bb807ff52b0382b4bb009505b58b101018e59014bb0c063004b
6220b0f65323b8010a515ab005234201b0124b004b544218b0382bb00288
b801005458b801ffb101018e851bb0124358b900010140858d1bb9000101
59858d59590016763f183f123e113946443e113946443e113946443e1139
46443e11394660443e11394660442b2b2b2b2b2b2b2b2b2b2b182b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b181db0964b5358b0aa1d59b0324b5358b0ff1d
594bb04753205c58b9027d027b4544b9027c027b45445958b90146027d45
5258b9027d01464459594bb04753205c58b9001e027c4544b90026027c45
445958b9017f001e455258b9001e017f4459594bb05e53205c58b9001f02
7d4544b90025027d45445958b901a8001f455258b9001f01a84459594bb8
010153205c58b1ab1f4544b11f1f45445958b9047000ab455258b900ab04
704459594bb8012553205c58b1e61f4544b11f1f45445958b9051000e645
5258b900e605104459594bb01753205c58b124244544b1312445445958b1
2224455258b124224459594bb05153205c58b124244544b1232445445958
b17d24455258b1247d4459594bb06e53205c58b124244544b13324454459
58b1aa24455258b124aa4459592b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b65422b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b45
695342014b5058b108004259435c58b1080042591610703eb0124358b911
b53d801bba011c03d9000b2b59b00a2342b00b2342003f3f182b103c012f
5d060cb0062342b0072342b0124358b93b21187e1bba040001a8000b2b59
b00c2342b00d2342b0124358b92d412d411bba04000400000b2b59b00e23
42b00f2342b0124358b9187e3b211bba01a80400000b2b59b0102342b011
2342002b4bb02e5358b8016b45b02a60b8016b2344590018456944456944
18456944456944737373737375757573737475757575752b4bb026534bb0
3d515a58b1262645b0196044592b45186944742b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b004bb02a534bb03f515a58b10707
45b04060445973732b2b451869442b2b752b2b4518694475752b2b752b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b74752b2b2b2b2b451869442b002b
732b2b2b2b2b2b2b2b2b012b2b2b007373732b2b2b01435c58b8ffdeb31e
1c3318b8037fb52b3318262b33b9fff00381b112332b2b2b2b590173742b
2b2b002b73752b2b732b2b2b2b2b73752b2b2b2b73002b2b4569442b2b00
00>
[9911 ] AllocGlyphStorage
]def 
108 44 
PrepFor2015
Type42DictEnd
1 104 1 <0002ff9c00000460056b0022002501914081031500160418032108220a23
0624070c23012f233f234f235f236f237e238e239a23bb23e720f6200b05
2105230524302133223024451d452255226d1d6422662476147522a822d4
15d521d723d62413262230143015311d0429002c1b2f1c2f1d042740193a
342640133a34132523121424232315212222200a120b1d0a1d2121b8021b
404a22211e1d1d0901081d091c151b1d1c23151523212214212122231223
15121e01001401010024251425231313092200031d1c1c0a0a0908032211
22022200232115142404122630150115b8ffc0b30b3a3415b80342b7237e
2240191b3422b8ffc0b30b3a3422b8033eb50040191b3400b8ffc0b30b3a
3400b80142400d0140103a340f012f014f010301b8034eb5268b23220020
ba035a035b00182b2b10f45d2bf42b2bf62b2bf4e62b5d11121739111239
5d003f3c103c103c3f3c12392fed3c103c870e2e2b087d10c4870e2e182b
047d10c4180010ed0110c00010ed0110c00010ed08ec0110c00010ed0110
c0070e103c0705103c3c073c3c3130012b2b5d5d5d005d00710171010306
151417161633072137333237363736373721070606151416170721373636
3701030121041f67080f13414d0bfdea0b1741291d100b0a10fe7c8a2f18
343c0bfe6f0b4a7170032aa3fe770155056bfb984f1928151d1c25251c13
2c1f73acbb3f3718202e022525035d98044efeb3fde9>HIBBAA+Times#20New#20Roman AddT42Char 
1 636 2 <0001007d000003570568001b00ca401a071a015602670276027403bd0d05
080008101701170f04080f09b80138b308070106410b01380007001a01a3
0010020e002800190138001a01fd401300100f0103000828100f0fe60100
1401010019ba01f4001a030d40091b1b000508070c0001bb03280010001a
020bb31f0f010fb80327400b10011c2800100117011c0aba022801e30018
2b2b103c2b2b3c2b10c0012bf65de43cf53c003f3c3f3c10f4ed870e2e2b
7d10c42b11121739180010f5ed2bfc01f50010ed0110c00010ed0110c031
30015d5d0071010106151416170721373637363736371336373635342623
220727250357febe1c335e0afdfd0e521a2a152122e815020326211a370d
01510568fb9f632c2527072525020b121e2e770325490b141323280c245e
>HIBBAA+Times#20New#20Roman AddT42Char 
1 936 3 <00010020000003c00568001d00b540218f08860b9c08960aac08ab0cbf08
ba0cce08ce180aef03ea04eb16ef17040b0c1dbd01a3001900190177001c
013840151d031718041605021514130312060317041604010bb80202400c
09ab0f051918e60000010c0cbf0217000201f7001e00060121001d0202b2
121a1fba01f601ef00182b4e10f64de4ed10f6e4003f3c10fd3c3ffde412
173901111217391217392eedec0010fd0110c9b1060243545840090f030b
041f031b0404005d593130005d015d212135001336353426232207273636
33321615140706070601213236373302c3fd5d0204a64d80668d5b2333c4
7281b01f3081c4feb90154526a17282501c40101778368838710818fb17e
584b7591defedf443900>HIBBAA+Times#20New#20Roman AddT42Char 
1 1216 4 <00010014ffe803e7058e003301b540300c22143935400d0f343540153535
4010350a0b0a0c180b190c52008511a5100737173f3546175617041b2519
261a2d03b10602435458401f0127002800281f291f293534270126140428
0c3230334d00000c06280a220b003f3f3f3ff5ed1112173901111239392f
ec33111239391b4027030204040113141418262726242711010104272827
1128001e1f0d110e300d0c040b300c33fe2bb8011c4015283230334d0014
18181f2426142424260104010004b8016b40321127141111270127261404
0c270128000000280033281f292b1429292b0d0c0629280a1e951a27220b
2b29100d1a351e8a1fb801b9b618e424b814e426be032f0000028d002802
03002b01bbb232d329b8ffc0b3191b3429b8ffc0b21c3529b8ffc0b32829
3429b8ffc0b32a343429b8ffc0400a3a35291934291732a7182b2b4e10f4
2b2b2b2b2b4de4e4fde6f6edf4edfded4e10e62b103c003f4dfde43f3c3f
3c87052e2b087d10c400183f0112393900111739870e2e2b087d10c4870e
2e182b0e7d10c4180010f5ed2bfc01f50010ed0110c00010ed0110c010c9
0708103c083c8708103c087dc40ec4870e10c4c459313001715d5d2b2b2b
2b0101373637363534262623233721070606070607071617161716333237
3637170606232227260307032301373635342623220735024afee472bb38
120c232c230b01b50a4b6d336520561620361313141117343b236d74302a
17285d89679c014c1c0525231732058efc29619e4c190d09100a26260427
264b1d4c4881d62828112653198957213b019677fe9d047561191318200a
2300>HIBBAA+Times#20New#20Roman AddT42Char 
1 1818 5 <0001ff77000005ed054c003f015c401a89049b04ab0403181656106d21a7
33b533050808081637180335b8ffde40460f394140193034404019303406
060717171618180517171828282729291606060507363637353509282829
3636353737270105021d010f16101d0f2e352f1d2e0f001f000200b8011b
4063393f1d000e090d1d0e2118201d21002d012d292c1d2d393628251706
06414039362817060500223509091e162914161629053727272318051418
180537352919181609050841403735291816090507002225a9232f222e2d
01000223882222210f0e08ba01ea021900182b003f3c3c3c10ed3f3c3c3c
012ff4e400111217390111121739870e2e2b870e7dc4870e2e182b7d10c4
00111217390111121739180010ed0110c05d0010ed0110c00010ed0110c0
0010ed0110f55d0010ed0110c00010ed0110c00010ed0110c00710083c08
3c8710087dc40ec4083c871008c4083c8710083c08c43130012b2b2b5d5d
005d012107060607011316171e0217072137363736353427030106070615
141716170721373637363701032626273721072206061514171337363736
3534272627042201cb0b61917dfea0630e261830494a0bfdec0b52241b1a
5ffec25d120b1e0e470afe3d0b55364f8b018a6c31495b0a01e50c432f19
185cd57e2f11131b4a054c250e5985fe98fe95346d463a1f032525031c14
201c5f0155febf5f1e12111e1308092525081f2f8c018c0187b453062525
1123161858feb2d47e4d1b15170d1203>HIBBAA+Times#20New#20Roman AddT42Char 
1 2374 6 <0001008cfe4a038a058e0010003cb70708010113091112b80181b30f00a6
01b80145b3050a3b09b80156b50f4305191142b9021000182b4e10f44ded
fde410fded10e6003f3f3130015d01072627263510371201170607060215
1401812277342895b7019a18b97592bafe5a10e3ae888a0142ff01380128
2389aad4fda8f6bc>HIBBAA+Times#20New#20Roman AddT42Char 
1 2502 7 <00010054ffe802630481001e0106b90005ffde40710f390f400f39a405ef
02fb0e03551b8a00f60103241d3a005b0e030f201d20027f20ef20021e00
0e0f0104050707001d1c1e1b011a1c1d1e18051904010800161a19190404
039300a0020106130b0007071f161914161619161f2819161002490f031f
0302ff0301036c2000af070f8a0eba010100070203400c121640363934c0
16d0160216b8013b400a1f091617161f0a774c182b2b103c2b2b10f65d2b
435c58400f164028143f16401c113f16401e123f2b2b2b5901fdf6ed10e4
10f45d71e42b103c2b10c0870e2e2b057d10c400183f3f3ce4fd3c103c10
3c011112173900111239113939870e7d10c4053c3c0110c910c93130015d
715d5d5d2b2b010333072303061514163332373637170607062322263534
3713233736363702144e9d119cac1c100b19291853215c5238392c3820a7
970a6e925a0481fef03ffdb25f1c111223146719863726372b366f024327
1e779300>HIBBAA+Times#20New#20Roman AddT42Char 
1 2866 8 <0001ff21fe4a021f058e00100043b70908010111091311b80181b30f00a6
01b80145b3050a3b09b80156400a0f430f051f0502051a12b801e8b15018
2b4e10f65d4dedfde410fded10e6003f3f3130015d013716171615100702
0127363736123534012a2277332995b8fe6718b97592ba057b13e2ae888a
febdfefec7fed81f8aa9d40259f6bc00>HIBBAA+Times#20New#20Roman AddT42Char 
1 3002 9 <000100b800000556054c0030017db9002effde40c513390d010f020c030c
070c080f0c0f0d0f0e0d0f8c018c038c078c088c0d8c0f0f9f019f029f03
9f069f079f089d0a9f0b9f0c9f0d9f0e9f0f93130d3240193a340822aa20
a62dbb02b314b52e069b03ab03a0090389018a03962e03480169016d0203
080f091d081a211b1d1a2830291d280701061d071911181d192723261d27
2111100004221a281011111e2122142121220f01000023100f1410100f00
303000001e222314222223000130230f0104323130230103072222192827
0807021a19080032b80291b6100911d2220921b8ffc0b3193a3421b80286
400921312822102121310aba0173012600182b2b103c012f2b3c2b10c001
f62b2bc401fd2bc401e6192f18003f3c3f3c3c3c1912392f121739011112
173908872e182b0e7d10c408872e182b870e7dc4870e2e182b7d10c42b11
121739180010ed0110c00010ed0110c00010ed0110c00010ed0110c00010
ed0110c00010ed0110c0b10602435458b2340f01005d593130015d5d5d5d
2b0172712b01013635342627372107060706070607010306151416171617
07213736373637363713032626273721070607060615141702cc0102642b
650a01aa083e1724232f59feb46425171d264e0afdc50c551c2d16222477
912741510a01f50c5e0d161c1d02d101698d27161d06252508090f202a7b
fe36feb17e301f200a0c012525020c121e2e77018c01d47c3c0725250705
072a1c296300>HIBBAA+Times#20New#20Roman AddT42Char 
1 3548 10 <0001ffebfeff011000b40014002f400c001414ef3f0e017f0e010e11ba01
74000402b5b7003e0b19156df5182b4e10f44dece4ed002f5d71ed10c931
30073637363534272626272635343633321615140607154b2f2406043003
073b28293f8c85e122342825120f08300911162b3e423259b632>HIBBAA+Times#20New#20Roman AddT42Char 
1 3664 11 <00010027ffe803ad03890036018f400901180c392d180c390ab8ffde409c
13143e14221339082f16001b021b2f0451075209521e512079017b2d891e
a627a428ba02ba260b5c015c28bf01035a095a1e5a2003690669096a1e79
09791e7b2606562a51356c260352000114221935132219350101022a2b2b
00131436452d5a283530364d0001232c01002d9f2301233104040007070c
0c1f1b20141b1b20002b00362b1f2c2d142c2c2d2c2b0a180b1b3728201b
2d2c10148a13b80143b30c072520b80124b20c251bb8ffc0b25c351bb802
95b235c92dbc0124002b0203002cffc0b217392cb8ffc0b25c352cb8ffc0
b23a352cb8ffc0b32a34342cb8ffc0b32324342cb8ffc0b21c352cb8ffc0
4013191a34ef2c012c19371b172c171b370a3286182b2b103c2b2b4e10f4
5d2b2b2b2b2b2b2b4dede4e4f42bedf4ed10f6ed2b103c103c2b10c0003f
3f3c87052e2b087d10c4870e2e182b7d10c400183f3c10ed720111123900
11123910f5ed2bfc01f510c987100e7dc4083c3130012b2b5d5d5d4bb032
534bb036515a58b120223859015d005d015d712b2b2b2b01031236333216
151407030615141633323736371706070623222635343713363534262322
07060607060707231336353426232207072701c485bbc75c32411d7a1510
090c11353f1f5d533a2e252c2274161a131c274aa0592f1f3296b620231a
0c1e26060389fe390117b042353c64fe5b49100e130d2a56138539272d26
307501924b2a1419182dcfa15565a5027271171621040624>HIBBAA+Times#20New#20Roman AddT42Char 
1 4228 12 <0002ffc3000005a3054c001a002d00dfb9001cffe8403311392f2b571b79
277a2b8b27b51e060d140e1d0d0115001d011b1c1c1e141514141415232e
0d2c2e01020d08142e2815141029ba037f0006ffc0b326173f06ba011700
2fffc040091339702f012f1bd41cba030100150345b4120f140114b80173
b62e091417142e0aba0173011500182b2b103c2b2b4e10f471435c58b900
14ff80b326173f14b8ff80b328183f14b8ff80400b2d173f144018391440
11392b2b2b2b2b59014de4fde44e105d2bf62b4de92b103c2b10c0003f3f
ed10ed870e2e2b057d10c4180010ed0110c00010ed0110c03130015d2b01
372120041215140e02042321373637363736371336353426230501061514
1617163332243736123534262322012c0c01b1011301099e5b73eefeead0
fdc20d4f1b28131d24f01c344c014dfeda2115121a3a9d010d567a92e0d7
350527257efef19b85fb97b65725020c111d2a7f03346137272a26fc0972
1b101e050941405d0146d0ebe500>HIBBAA+Times#20New#20Roman AddT42Char 
1 0 0 <0002011c0000051c050000030007003fb40201f80607b802664013000504
f803000a0704f8010019080605f80203b8014ab309a2dc182b10f63cfd3c
4e10f43c4dfd3c003f3cfd3c10fc3cfd3c31302111211125211121011c04
00fc2003c0fc400500fb002004c0>HIBBAA+Times#20New#20Roman AddT42Char 
HIBBAA+Times#20New#20Roman /CharStrings get begin
/g1 1 def
/g2 2 def
/g3 3 def
/g4 4 def
/g5 5 def
/g6 6 def
/g7 7 def
/g8 8 def
/g9 9 def
/g10 10 def
/g11 11 def
/g12 12 def
end
HIBBAA+Times#20New#20Roman /Encoding get
dup 32 /g1 put
dup 33 /g2 put
dup 34 /g3 put
dup 35 /g4 put
dup 36 /g5 put
dup 37 /g6 put
dup 38 /g7 put
dup 39 /g8 put
dup 40 /g9 put
dup 41 /g10 put
dup 42 /g11 put
dup 43 /g12 put
pop
end
%ADOEndSubsetFont
/DGXVTT+Times#20New#20Roman /HIBBAA+Times#20New#20Roman findfont ct_VMDictPut
/DGXVTT+Times#20New#20Roman*1 
[32{/.notdef}rp /g1 /g2 /g3 /g4 /g5 /g6 /g7 
/g8 /g9 /g10 /g11 /g12 212{/.notdef}rp]
DGXVTT+Times#20New#20Roman nf
DGXVTT+Times#20New#20Roman*1 [18 0 0 -18 0 0 ]msf
358.56 52.565 mo
( )sh
DGXVTT+Times#20New#20Roman*1 [12 0 0 -12 0 0 ]msf
369.6 56.885 mo
(!)sh
DGXVTT+Times#20New#20Roman*1 [18 0 0 -18 0 0 ]msf
456.12 52.565 mo
( )sh
DGXVTT+Times#20New#20Roman*1 [12 0 0 -12 0 0 ]msf
467.16 56.885 mo
(")sh
%ADOBeginSubsetFont: QJJAAA+Times#20New#20Roman Initial
ct_T42Dict begin
-0.555 -0.324 2 1.055
 256 array 0 1 255 {1 index exch /.notdef put} for  /QJJAAA+Times#20New#20Roman
Type42DictBegin
[<00010000000b000b000b000b63767420c4eedb8c000000bc0000082c6670
676d7d78a3cb000008e80000063f676c7966f19a7e6c000052c80000011a
68656164f5bd3ce500000f2800000036686865615509031200000f600000
0024686d7478cb01390e00000f84000000086c6f63618601000000000f8c
0000000c6d6178705d054b0800000f98000000206e616d6579127cc30000
0fb800002fa8707265706e606dba00003f60000013686764697200000000
0000000000000000058e001f054c001f054c001c0394001b0000ffe10000
ffe40000ffe8fe4afffc056b0023fe6affe0031300000124000001240000
00000000000000250084002400e8009600bf005d00cb02030045012e0058
00040118001900020139004b011000170005010a00280023004b00500015
004a00e5010d00af003100ea014600810125004f009c0022004e00160041
009100a00147ffe9008100d3016900ab001700a801400027004c0148ffdf
00510050ffb7012e0000003b0097009a010e001f004c010a0123ffde0022
0073008700ba00d600ff005a009805a0ffe900500052006effb7005c00d1
015a015bff1c0049006e007e009800a100bd00e4018801c00405ff600035
006200720107011301280382ffa8003805d809b5ffc4ffd00010006e00a1
00ba00ec022b0446ffee004000e80401ff680003001300330033006e00a2
00b600dc011801350343000e0034005c005d007c00af0328003b00480089
009c00ba017b01af030effa4001700370063007f00e0017801c0022105d8
05f0ff7a0012002700340052008a00a400c100c300eb011801460154036d
fe3fff4e00010008002b0045006e0084008600ae00af00c200c200c4010f
01210149017b01c101de01e1036e03e6006300a700ed00f600f801280169
017e023f02820532fd81ffb5002600350040004500490057006c00ac0126
0140015b017b019c0277027e027f03b603dc042804efff38ffc30006002f
0040008200aa00b600ce00d300d700e50146014d01d6027e03b30586ff7b
0012002f0068007f008400a500b900f501050109010c0114012001330137
0178017b01c001e1021d02230258036203af058cff79ff8d00210024005d
00650068006a0083008500b700cf00e200eb00ed011a0120012f0137013f
0150018d018f01c402cf0357035c03960440049604ab04c204fc051105c2
fed1fee00013002100240030004d004d005d0066007a007c00b800b800c3
00da0103011b011e012f013d014a0150015f0166017c0190019501a301a6
01b601c701d001e901ef01f90218028c029402bb02c502cf02d0031d032a
0344039f03cc042104da04fb0761fd1dfebffeefff0bff2bff33ff90ff9c
ffdbffed00010008001c0025003f0043005a006b0080008400900095009d
00a700b400cd00d500d600df00df00df00e400f000f600fb010601130119
011b012201230127012c013f015701580177018a019301a401c601e101e4
01fc0200020c02220222022a0236024a025c028202ec02fc030a03230341
0378039703d203fa04790532053205ab05b505f006e4072508ccfc9bfdde
fe00fe69fe96fe9bff3500030006000e00130019003400420048004a0057
006400710071007200760077007a007a0083009c00af00af00b200bb00c8
00cc00cf00cf00db00dc00df00e400e400e400e900eb00f400fd00fe0102
0105010501080108011b01220123013001370143015b0160016501780178
01780178017b0182018901980198019b019e01a101a601d101d201d301df
01e301f502000200022d02410247024a0250025b025d025d025f02630281
028b02b402b402ce02d602db02e202fa03100311031f0327034503670388
038a03b003b403d403d5042604410448046b04c704d1053205480549055f
0563058b05a105a305c205ca05e405ff069306a206b806e8070a07360750
0754078907a907bb07dc07ff08270120014d011b01290000000000000000
00000093015b042f029001ff02b800db00be027403cb029401ab00000000
0000000000000000058a038a0364005f02b803bd029d7c9003e203ac0282
0000044400000000003d010a00cc00bc00cc05d3041505e800c7021a00ee
00000194036102be029902180136033b048504cc0050007905a305a302df
020702af000001eb0064005f0055011900f2045600ef00c800cf058a0143
014602de01ab02c6024a005d00d800a402bb009900a00065013702740364
00b500fa009101b9032001b60025007f00d000ec00e00000000000000000
0000042ffd42023f06180276063a013701b90151ffc70229ffeb023f02e1
018500db03fa01900156014e012f00a600e300bb00d50134011f04fe041b
00d100e4011e009b00cd00e700b300e200ca042400b800f500b90334005a
04e00123012ffdc9fe440574038301f602410002001700500015004f0017
00a80051009800520049006e000e00af017b017b019c006a008300eb00cd
0122000005d306da009a008f00ba0315002503a5028002ff03c804200092
00e0034c009b007d00f8011c013400a8006d006900000420ffe6fea4006a
006a003800380162015a0044006d0048001eff6d00a600a600400040ff5c
ff990559052b00ce014c011500bf0140011800c800960509feed004800b4
009500db0048018b00b3fe6400c000ea01180125013203b003ed05760590
05aa05b405be05cd063100780084009b00cc00e200f4010a0120016300d1
00ea00f7010801420019002c00340041003800480058006c025903bd0043
011a007000d30028003700420050005a0064007300780082008c009c00a5
00bd00ce00f00110015c00be00d801020117012c016300ea01080041004b
0055005f007300a60109018301b300410064001e002a00eb00fa010e0138
0274002c00400082009600b600c000cc00dc00e600f000ff010a0120012c
013b01440156016300f70057006401100136005001b10000ffb60039004e
004403cc00e5002401100042012201a400f0006000e0000e001d003905e3
0102002cfe4eff38026903bd011600ff000e00a00054001b003d01710041
000f005000fd0015014f0035fe47003900ab0080005005a50016002b00ac
0115021504570555007300da005c00ce0072ff58019a074403d703f00470
40425554403f3e3d3c3b3a3938373534333231302f2e2d2c2b2a29282726
2524232221201f1e1d1c1b1a191817161514131211100f0e0d0c0b0a0908
07060504030201002c4523466020b02660b004262348482d2c4523462361
20b02661b004262348482d2c45234660b0206120b04660b004262348482d
2c4523462361b0206020b02661b02061b004262348482d2c45234660b040
6120b06660b004262348482d2c4523462361b0406020b02661b04061b004
262348482d2c0110203c003c2d2c20452320b0cd442320b8015a51582320
b08d44235920b0ed51582320b04d44235920b09051582320b00d44235921
212d2c20204518684420b001602045b04676688a4560442d2c01b10b0a43
2343650a2d2c00b10a0b4323430b2d2c00b0172370b101173e01b0172370
b10217453ab10200080d2d2c45b01a234445b01923442d2c2045b0032545
6164b050515845441b2121592d2cb00143632362b0002342b00f2b2d2c20
45b0004360442d2c01b00643b00743650a2d2c2069b04061b0008b20b12c
c08a8cb8100062602b0c642364615c58b00361592d2c45b0112bb0172344
b0177ae4182d2c45b0112bb01723442d2cb01243588745b0112bb0172344
b0177ae41b038a45186920b01723448a8a8720b0a05158b0112bb0172344
b0177ae41b21b0177ae45959182d2c2d2cb0022546608a46b040618c482d
2c4b53205c58b002855958b00185592d2c20b0032545b019234445b01a23
444565234520b00325606a20b009234223688a6a606120b01a8ab0005279
21b21a1a40b9ffe0001a45208a54582321b03f1b235961441cb114008a52
79b31940201945208a54582321b03f1b235961442d2cb110114323430b2d
2cb10e0f4323430b2d2cb10c0d4323430b2d2cb10c0d432343650b2d2cb1
0e0f432343650b2d2cb11011432343650b2d2c4b525845441b2121592d2c
0120b003252349b04060b0206320b000525823b002253823b00225653800
8a63381b212121212159012d2c4bb06451584569b00943608a103a1b2121
21592d2c01b005251023208af500b0016023edec2d2c01b005251023208a
f500b0016123edec2d2c01b0062510f500edec2d2c20b001600110203c00
3c2d2c20b001610110203c003c2d2cb02b2bb02a2a2d2c00b00743b00643
0b2d2c3eb02a2a2d2c352d2c76b8029f23701020b8029f4520b0005058b0
0161593a2f182d2c21210c6423648bb84000622d2c21b08051580c642364
8bb82000621bb200402f2b59b002602d2c21b0c051580c6423648bb81555
621bb200802f2b59b002602d2c0c6423648bb84000626023212d2cb40001
00000015b00826b00826b00826b008260f10161345683ab001162d2cb400
0100000015b00826b00826b00826b008260f1016134568653ab001162d2c
4b53234b515a5820458a60441b2121592d2c4b545820458a60441b212159
2d2c4b53234b515a58381b2121592d2c4b5458381b2121592d2cb0134358
031b02592d2cb0134358021b03592d2c4b54b012435c5a58381b2121592d
2cb012435c580cb00425b00425060c6423646164b807085158b00425b004
25012046b01060482046b0106048590a21211b2121592d2cb012435c580c
b00425b00425060c6423646164b807085158b00425b00425012046b8fff0
60482046b8fff06048590a21211b2121592d2c4b53234b515a58b03a2b1b
2121592d2c4b53234b515a58b03b2b1b2121592d2c4b53234b515ab01243
5c5a58381b2121592d2c0c8a034b54b00426024b545a8a8a0ab012435c5a
58381b2121592d2c462346608a8a462320468a608a61b8ff806223201023
8ab9032703278a70456020b0005058b00161b8ffba8b1bb0468c59b01060
68013a2d2cb1020042b123018851b1400188535a58b910000020885458b2
02010243604259b12401885158b920000040885458b2020202436042b124
01885458b2022002436042004b014b5258b2020802436042591bb9400000
80885458b202040243604259b94000008063b80100885458b20208024360
4259b94000010063b80200885458b202100243604259b12601885158b940
00020063b80400885458b202400243604259b94000040063b80800885458
b202800243604259b12801885158b94000080063b81000885458ba000201
000002436042595959595959592d2cb0024354584b53234b515a58381b21
21591b21212121592d00000100000006e666a3677d3d5f0f3cf508190800
00000000a2e3354600000000d19de404fb89fd6110000872000100090001
000100000000000100000721fe4500571000fb89fa0b1000000100000000
0000000000000000000000020639011c080000af000000000000006c0000
011a00010000000202d2003c0094000600020010002f00560000089b02c4
000500020000005303ea0000000300000000021a00000000000300000001
001e021a0000000300000002000802c20000000300000003005202900000
000300000004002802a20000000300000005001802e20000000300000006
002c02fa00000003000000070076021a0000000300000008003003340000
00030000000900860544000000030000000d0d1805ca0001000000000000
010d12e20001000000000001000f13ef0001000000000002000414430001
0000000000030029142a0001000000000004001414330001000000000005
000c145300010000000000060016145f0001000000000007003b13ef0001
000000000008001812e9000100000000000900431475000100000000000d
068c14b80003000104030002000e1b640003000104030004002e1b440003
000104050002000a1b920003000104050004002a1b720003000104060002
00061bbc000300010406000400261b9c000300010407000200081be20003
00010407000400281bc20003000104080002000c1c0a0003000104080004
002c1bea0003000104090000021e03260003000104090001001e021a0003
000104090002000802c20003000104090003005202900003000104090004
002802a20003000104090005001802e20003000104090006002c02fa0003
0001040900070076021a0003000104090008003003340003000104090009
00860544000300010409000d0d2a1c1600030001040a0002000e29600003
0001040a0004002e294000030001040b00020012298e00030001040b0004
0032296e00030001040c0002000829c000030001040c0004002829a00003
0001040e0002001029f200030001040e0004003029d20003000104100002
001229c00003000104100004003229a0000300010413000200062a220003
00010413000400262a020003000104140002000e2a480003000104140004
002e2a28000300010415000200142a76000300010415000400342a560003
000104160002000e2aaa0003000104160004002e2a8a0003000104190002
00142ad8000300010419000400342ab800030001041b0002000a2b0c0003
0001041b0004002a2aec00030001041d000200061be200030001041d0004
00261bc200030001041f0002000a2b3600030001041f0004002a2b160003
000104240002000c2b600003000104240004002c2b4000030001042a0002
00082b8c00030001042a000400282b6c00030001042d0002000a2bb40003
0001042d0004002a2b9400030001080a0002000e296000030001080a0004
002e29400003000108160002000e2aaa0003000108160004002e2a8a0003
00010c0a0002000e2960000300010c0a0004002e2940000300010c0c0002
000829c0000300010c0c0004002829a000a9002000320030003100350020
0054006800650020004d006f006e006f007400790070006500200043006f
00720070006f0072006100740069006f006e002e00200041006c006c0020
005200690067006800740073002000520065007300650072007600650064
002e0020000d000d0048006500620072006500770020004f00700065006e
00540079007000650020004c00610079006f007500740020006c006f0067
0069006300200063006f0070007900720069006700680074002000a90020
00320030003000330020002600200032003000300037002c002000520061
006c00700068002000480061006e0063006f0063006b002000260020004a
006f0068006e00200048007500640073006f006e002e0020005400680069
00730020006c00610079006f007500740020006c006f0067006900630020
0066006f00720020004200690062006c006900630061006c002000480065
00620072006500770020006900730020006f00700065006e00200073006f
007500720063006500200073006f00660074007700610072006500200075
006e00640065007200200074006800650020004d004900540020004c0069
00630065006e00730065003b002000730065006500200065006d00620065
00640064006500640020006c006900630065006e00730065002000640065
0073006300720069007000740069006f006e00200066006f007200200064
0065007400610069006c0073002e00540069006d006500730020004e0065
007700200052006f006d0061006e00200069007300200061002000740072
006100640065006d00610072006b0020006f006600200054006800650020
004d006f006e006f007400790070006500200043006f00720070006f0072
006100740069006f006e002e004d006f006e006f0074007900700065003a
00540069006d006500730020004e0065007700200052006f006d0061006e
00200042006f006c006400200028004d006900630072006f0073006f0066
0074002900560065007200730069006f006e00200036002e003900300054
0069006d00650073004e006500770052006f006d0061006e00500053002d
0042006f006c0064004d005400a900200032003000310035002000540068
00650020004d006f006e006f007400790070006500200043006f00720070
006f0072006100740069006f006e002e00200041006c006c002000520069
0067006800740073002000520065007300650072007600650064002e0020
000d000a000d000a0048006500620072006500770020004f00700065006e
00540079007000650020004c00610079006f007500740020006c006f0067
0069006300200063006f0070007900720069006700680074002000a90020
00320030003000330020002600200032003000300037002c002000520061
006c00700068002000480061006e0063006f0063006b002000260020004a
006f0068006e00200048007500640073006f006e002e0020005400680069
00730020006c00610079006f007500740020006c006f0067006900630020
0066006f00720020004200690062006c006900630061006c002000480065
00620072006500770020006900730020006f00700065006e00200073006f
007500720063006500200073006f00660074007700610072006500200075
006e00640065007200200074006800650020004d004900540020004c0069
00630065006e00730065003b002000730065006500200065006d00620065
00640064006500640020006c006900630065006e00730065002000640065
0073006300720069007000740069006f006e00200066006f007200200064
0065007400610069006c0073002e004d006f006e006f0074007900700065
00200054007900700065002000440072006100770069006e00670020004f
006600660069006300650020002d0020005300740061006e006c00650079
0020004d006f007200690073006f006e002c00200056006900630074006f
00720020004c0061007200640065006e0074002000310039003300320059
006f00750020006d00610079002000750073006500200074006800690073
00200066006f006e00740020006100730020007000650072006d00690074
0074006500640020006200790020007400680065002000450055004c0041
00200066006f00720020007400680065002000700072006f006400750063
007400200069006e00200077006800690063006800200074006800690073
00200066006f006e007400200069007300200069006e0063006c00750064
0065006400200074006f00200064006900730070006c0061007900200061
006e00640020007000720069006e007400200063006f006e00740065006e
0074002e002000200059006f00750020006d006100790020006f006e006c
0079002000280069002900200065006d0062006500640020007400680069
007300200066006f006e007400200069006e00200063006f006e00740065
006e00740020006100730020007000650072006d00690074007400650064
002000620079002000740068006500200065006d00620065006400640069
006e00670020007200650073007400720069006300740069006f006e0073
00200069006e0063006c007500640065006400200069006e002000740068
0069007300200066006f006e0074003b00200061006e0064002000280069
00690029002000740065006d0070006f0072006100720069006c00790020
0064006f0077006e006c006f006100640020007400680069007300200066
006f006e007400200074006f002000610020007000720069006e00740065
00720020006f00720020006f00740068006500720020006f007500740070
00750074002000640065007600690063006500200074006f002000680065
006c00700020007000720069006e007400200063006f006e00740065006e
0074002e000d000d00540068006500200066006f006c006c006f00770069
006e00670020006c006900630065006e00730065002c0020006200610073
006500640020006f006e00200074006800650020004d004900540020006c
006900630065006e00730065002000280068007400740070003a002f002f
0065006e002e00770069006b006900700065006400690061002e006f0072
0067002f00770069006b0069002f004d00490054005f004c006900630065
006e007300650029002c0020006100700070006c00690065007300200074
006f00200074006800650020004f00700065006e00540079007000650020
004c00610079006f007500740020006c006f00670069006300200066006f
00720020004200690062006c006900630061006c00200048006500620072
006500770020201c004c00610079006f007500740020004c006f00670069
0063201d0020006100730020006a006f0069006e0074006c007900200064
006500760065006c006f007000650064002000620079002000520061006c
00700068002000480061006e0063006f0063006b00200061006e00640020
004a006f0068006e00200048007500640073006f006e002e0020000d000d
005000650072006d0069007300730069006f006e00200069007300200068
006500720065006200790020006700720061006e007400650064002c0020
00660072006500650020006f00660020006300680061007200670065002c
00200074006f00200061006e007900200070006500720073006f006e0020
006f0062007400610069006e0069006e00670020006100200063006f0070
00790020006f006600200074006800650020004f00700065006e00540079
007000650020004c00610079006f007500740020006c006f006700690063
00200066006f00720020004200690062006c006900630061006c00200048
0065006200720065007700200061006e00640020006100730073006f0063
0069006100740065006400200064006f00630075006d0065006e00740061
00740069006f006e002000660069006c0065007300200028007400680065
0020201c004c00610079006f007500740020004c006f0067006900630020
0053006f006600740077006100720065201d0029002c00200074006f0020
006400650061006c00200069006e00200074006800650020004c00610079
006f007500740020004c006f00670069006300200053006f006600740077
00610072006500200077006900740068006f007500740020007200650073
007400720069006300740069006f006e002c00200069006e0063006c0075
00640069006e006700200077006900740068006f007500740020006c0069
006d00690074006100740069006f006e0020007400680065002000720069
006700680074007300200074006f0020007500730065002c00200063006f
00700079002c0020006d006f0064006900660079002c0020006d00650072
00670065002c0020007000750062006c006900730068002c002000640069
00730074007200690062007500740065002c0020007300750062006c0069
00630065006e00730065002c00200061006e0064002f006f007200200073
0065006c006c00200063006f00700069006500730020006f006600200074
006800650020004c00610079006f007500740020004c006f006700690063
00200053006f006600740077006100720065002c00200061006e00640020
0074006f0020007000650072006d0069007400200070006500720073006f
006e007300200074006f002000770068006f006d00200074006800650020
004c00610079006f007500740020004c006f00670069006300200053006f
0066007400770061007200650020006900730020006600750072006e0069
007300680065006400200074006f00200064006f00200073006f002c0020
007300750062006a00650063007400200074006f00200074006800650020
0066006f006c006c006f00770069006e006700200063006f006e00640069
00740069006f006e0073003a000d000d005400680065002000610062006f
0076006500200063006f00700079007200690067006800740020006e006f
007400690063006500200061006e00640020007400680069007300200070
00650072006d0069007300730069006f006e0020006e006f007400690063
00650020007300680061006c006c00200062006500200069006e0063006c
007500640065006400200069006e00200061006c006c00200063006f0070
0069006500730020006f00720020007300750062007300740061006e0074
00690061006c00200070006f007200740069006f006e00730020006f0066
00200074006800650020004c00610079006f007500740020004c006f0067
0069006300200053006f006600740077006100720065002e000d000d0054
0048004500200053004f0046005400570041005200450020004900530020
00500052004f005600490044004500440020002700410053002000490053
0027002c00200057004900540048004f0055005400200057004100520052
0041004e005400590020004f004600200041004e00590020004b0049004e
0044002c002000450058005000520045005300530020004f005200200049
004d0050004c004900450044002c00200049004e0043004c005500440049
004e004700200042005500540020004e004f00540020004c0049004d0049
00540045004400200054004f002000540048004500200057004100520052
0041004e00540049004500530020004f00460020004d0045005200430048
0041004e0054004100420049004c004900540059002c0020004600490054
004e00450053005300200046004f00520020004100200050004100520054
004900430055004c0041005200200050005500520050004f005300450020
0041004e00440020004e004f004e0049004e004600520049004e00470045
004d0045004e0054002e00200049004e0020004e004f0020004500560045
004e00540020005300480041004c004c0020005400480045002000410055
00540048004f005200530020004f005200200043004f0050005900520049
00470048005400200048004f004c00440045005200530020004200450020
004c004900410042004c004500200046004f005200200041004e00590020
0043004c00410049004d002c002000440041004d00410047004500530020
004f00520020004f00540048004500520020004c0049004100420049004c
004900540059002c0020005700480045005400480045005200200049004e
00200041004e00200041004300540049004f004e0020004f004600200043
004f004e00540052004100430054002c00200054004f005200540020004f
00520020004f00540048004500520057004900530045002c002000410052
004900530049004e0047002000460052004f004d002c0020004f00550054
0020004f00460020004f005200200049004e00200043004f004e004e0045
004300540049004f004e0020005700490054004800200054004800450020
0053004f0046005400570041005200450020004f00520020005400480045
00200055005300450020004f00520020004f005400480045005200200044
00450041004c0049004e0047005300200049004e00200054004800450020
0053004f004600540057004100520045002e000da9203230313520546865
204d6f6e6f7479706520436f72706f726174696f6e2e20416c6c20526967
6874732052657365727665642e200d0d486562726577204f70656e547970
65204c61796f7574206c6f67696320636f7079726967687420a920323030
33202620323030372c2052616c70682048616e636f636b2026204a6f686e
20487564736f6e2e2054686973206c61796f7574206c6f67696320666f72
204269626c6963616c20486562726577206973206f70656e20736f757263
6520736f66747761726520756e64657220746865204d4954204c6963656e
73653b2073656520656d626564646564206c6963656e7365206465736372
697074696f6e20666f722064657461696c732e54696d6573204e65772052
6f6d616e20697320612074726164656d61726b206f6620546865204d6f6e
6f7479706520436f72706f726174696f6e2e4d6f6e6f747970653a54696d
6573204e657720526f6d616e20426f6c6420284d6963726f736f66742956
657273696f6e20362e393054696d65734e6577526f6d616e50532d426f6c
644d544d6f6e6f7479706520547970652044726177696e67204f66666963
65202d205374616e6c6579204d6f7269736f6e2c20566963746f72204c61
7264656e742031393332596f75206d617920757365207468697320666f6e
74206173207065726d6974746564206279207468652045554c4120666f72
207468652070726f6475637420696e207768696368207468697320666f6e
7420697320696e636c7564656420746f20646973706c617920616e642070
72696e7420636f6e74656e742e2020596f75206d6179206f6e6c79202869
2920656d626564207468697320666f6e7420696e20636f6e74656e742061
73207065726d69747465642062792074686520656d62656464696e672072
65737472696374696f6e7320696e636c7564656420696e20746869732066
6f6e743b20616e6420286969292074656d706f726172696c7920646f776e
6c6f6164207468697320666f6e7420746f2061207072696e746572206f72
206f74686572206f75747075742064657669636520746f2068656c702070
72696e7420636f6e74656e742e0d0d54686520666f6c6c6f77696e67206c
6963656e73652c206261736564206f6e20746865204d4954206c6963656e
73652028687474703a2f2f656e2e77696b6970656469612e6f72672f7769
6b692f4d49545f4c6963656e7365292c206170706c69657320746f207468
65204f70656e54797065204c61796f7574206c6f67696320666f72204269
626c6963616c2048656272657720d24c61796f7574204c6f676963d32061
73206a6f696e746c7920646576656c6f7065642062792052616c70682048
616e636f636b20616e64204a6f686e20487564736f6e2e200d0d5065726d
697373696f6e20697320686572656279206772616e7465642c2066726565
206f66206368617267652c20746f20616e7920706572736f6e206f627461
696e696e67206120636f7079206f6620746865204f70656e54797065204c
61796f7574206c6f67696320666f72204269626c6963616c204865627265
7720616e64206173736f63696174656420646f63756d656e746174696f6e
2066696c6573202874686520d24c61796f7574204c6f67696320536f6674
77617265d3292c20746f206465616c20696e20746865204c61796f757420
4c6f67696320536f66747761726520776974686f75742072657374726963
74696f6e2c20696e636c7564696e6720776974686f7574206c696d697461
74696f6e207468652072696768747320746f207573652c20636f70792c20
6d6f646966792c206d657267652c207075626c6973682c20646973747269
627574652c207375626c6963656e73652c20616e642f6f722073656c6c20
636f70696573206f6620746865204c61796f7574204c6f67696320536f66
74776172652c20616e6420746f207065726d697420706572736f6e732074
6f2077686f6d20746865204c61796f7574204c6f67696320536f66747761
7265206973206675726e697368656420746f20646f20736f2c207375626a
65637420746f2074686520666f6c6c6f77696e6720636f6e646974696f6e
733a0d0d5468652061626f766520636f70797269676874206e6f74696365
20616e642074686973207065726d697373696f6e206e6f74696365207368
616c6c20626520696e636c7564656420696e20616c6c20636f7069657320
6f72207375627374616e7469616c20706f7274696f6e73206f6620746865
204c61796f7574204c6f67696320536f6674776172652e0d0d5448452053
4f4654574152452049532050524f564944454420274153204953272c2057
4954484f55542057415252414e5459204f4620414e59204b494e442c2045
585052455353204f5220494d504c4945442c20494e434c5544494e472042
5554204e4f54204c494d4954454420544f205448452057415252414e5449
4553204f46204d45524348414e544142494c4954592c204649544e455353
20464f52204120504152544943554c415220505552504f534520414e4420
4e4f4e494e4652494e47454d454e542e20494e204e4f204556454e542053
48414c4c2054484520415554484f5253204f5220434f5059524947485420
484f4c44455253204245204c4941424c4520464f5220414e5920434c4149
4d2c2044414d41474553204f52204f54484552204c494142494c4954592c
205748455448455220494e20414e20414354494f4e204f4620434f4e5452
4143542c20544f5254204f52204f54484552574953452c2041524953494e
472046524f4d2c204f5554204f46204f5220494e20434f4e4e454354494f
4e20574954482054484520534f465457415245204f522054484520555345
204f52204f54484552204445414c494e475320494e2054484520534f4654
574152452e0d00540069006d006500730020004e0065007700200052006f
006d0061006e0020004e00650067007200650074006100540069006d0065
00730020004e0065007700200052006f006d0061006e002000740075010d
006e00e900540069006d006500730020004e0065007700200052006f006d
0061006e002000660065006400540069006d006500730020004e00650077
00200052006f006d0061006e0020004600650074007400540069006d0065
00730020004e0065007700200052006f006d0061006e0020038803bd03c4
03bf03bd03b10059006f00750020006d0061007900200075007300650020
007400680069007300200066006f006e0074002000610073002000700065
0072006d0069007400740065006400200062007900200074006800650020
00450055004c004100200066006f00720020007400680065002000700072
006f006400750063007400200069006e0020007700680069006300680020
007400680069007300200066006f006e007400200069007300200069006e
0063006c007500640065006400200074006f00200064006900730070006c
0061007900200061006e00640020007000720069006e007400200063006f
006e00740065006e0074002e002000200059006f00750020006d00610079
0020006f006e006c0079002000280069002900200065006d006200650064
0020007400680069007300200066006f006e007400200069006e00200063
006f006e00740065006e00740020006100730020007000650072006d0069
0074007400650064002000620079002000740068006500200065006d0062
0065006400640069006e0067002000720065007300740072006900630074
0069006f006e007300200069006e0063006c007500640065006400200069
006e0020007400680069007300200066006f006e0074003b00200061006e
006400200028006900690029002000740065006d0070006f007200610072
0069006c007900200064006f0077006e006c006f00610064002000740068
0069007300200066006f006e007400200074006f00200061002000700072
0069006e0074006500720020006f00720020006f00740068006500720020
006f00750074007000750074002000640065007600690063006500200074
006f002000680065006c00700020007000720069006e007400200063006f
006e00740065006e0074002e000d000a000d000a00540068006500200066
006f006c006c006f00770069006e00670020006c006900630065006e0073
0065002c0020006200610073006500640020006f006e0020007400680065
0020004d004900540020006c006900630065006e00730065002000280068
007400740070003a002f002f0065006e002e00770069006b006900700065
006400690061002e006f00720067002f00770069006b0069002f004d0049
0054005f004c006900630065006e007300650029002c0020006100700070
006c00690065007300200074006f00200074006800650020004f00700065
006e00540079007000650020004c00610079006f007500740020006c006f
00670069006300200066006f00720020004200690062006c006900630061
006c00200048006500620072006500770020201c004c00610079006f0075
00740020004c006f006700690063201d0020006100730020006a006f0069
006e0074006c007900200064006500760065006c006f0070006500640020
00620079002000520061006c00700068002000480061006e0063006f0063
006b00200061006e00640020004a006f0068006e00200048007500640073
006f006e002e0020000d000a000d000a005000650072006d006900730073
0069006f006e002000690073002000680065007200650062007900200067
00720061006e007400650064002c002000660072006500650020006f0066
0020006300680061007200670065002c00200074006f00200061006e0079
00200070006500720073006f006e0020006f0062007400610069006e0069
006e00670020006100200063006f007000790020006f0066002000740068
00650020004f00700065006e00540079007000650020004c00610079006f
007500740020006c006f00670069006300200066006f0072002000420069
0062006c006900630061006c002000480065006200720065007700200061
006e00640020006100730073006f00630069006100740065006400200064
006f00630075006d0065006e0074006100740069006f006e002000660069
006c00650073002000280074006800650020201c004c00610079006f0075
00740020004c006f00670069006300200053006f00660074007700610072
0065201d0029002c00200074006f0020006400650061006c00200069006e
00200074006800650020004c00610079006f007500740020004c006f0067
0069006300200053006f0066007400770061007200650020007700690074
0068006f007500740020007200650073007400720069006300740069006f
006e002c00200069006e0063006c007500640069006e0067002000770069
00740068006f007500740020006c0069006d00690074006100740069006f
006e0020007400680065002000720069006700680074007300200074006f
0020007500730065002c00200063006f00700079002c0020006d006f0064
006900660079002c0020006d0065007200670065002c0020007000750062
006c006900730068002c0020006400690073007400720069006200750074
0065002c0020007300750062006c006900630065006e00730065002c0020
0061006e0064002f006f0072002000730065006c006c00200063006f0070
0069006500730020006f006600200074006800650020004c00610079006f
007500740020004c006f00670069006300200053006f0066007400770061
00720065002c00200061006e006400200074006f0020007000650072006d
0069007400200070006500720073006f006e007300200074006f00200077
0068006f006d00200074006800650020004c00610079006f007500740020
004c006f00670069006300200053006f0066007400770061007200650020
006900730020006600750072006e0069007300680065006400200074006f
00200064006f00200073006f002c0020007300750062006a006500630074
00200074006f002000740068006500200066006f006c006c006f00770069
006e006700200063006f006e0064006900740069006f006e0073003a000d
000a000d000a005400680065002000610062006f0076006500200063006f
00700079007200690067006800740020006e006f00740069006300650020
0061006e0064002000740068006900730020007000650072006d00690073
00730069006f006e0020006e006f00740069006300650020007300680061
006c006c00200062006500200069006e0063006c00750064006500640020
0069006e00200061006c006c00200063006f00700069006500730020006f
00720020007300750062007300740061006e007400690061006c00200070
006f007200740069006f006e00730020006f006600200074006800650020
004c00610079006f007500740020004c006f00670069006300200053006f
006600740077006100720065002e000d000a000d000a0054004800450020
0053004f004600540057004100520045002000490053002000500052004f
0056004900440045004400200027004100530020004900530027002c0020
0057004900540048004f00550054002000570041005200520041004e0054
00590020004f004600200041004e00590020004b0049004e0044002c0020
00450058005000520045005300530020004f005200200049004d0050004c
004900450044002c00200049004e0043004c005500440049004e00470020
0042005500540020004e004f00540020004c0049004d0049005400450044
00200054004f0020005400480045002000570041005200520041004e0054
0049004500530020004f00460020004d00450052004300480041004e0054
004100420049004c004900540059002c0020004600490054004e00450053
005300200046004f00520020004100200050004100520054004900430055
004c0041005200200050005500520050004f0053004500200041004e0044
0020004e004f004e0049004e004600520049004e00470045004d0045004e
0054002e00200049004e0020004e004f0020004500560045004e00540020
005300480041004c004c002000540048004500200041005500540048004f
005200530020004f005200200043004f0050005900520049004700480054
00200048004f004c00440045005200530020004200450020004c00490041
0042004c004500200046004f005200200041004e005900200043004c0041
0049004d002c002000440041004d00410047004500530020004f00520020
004f00540048004500520020004c0049004100420049004c004900540059
002c0020005700480045005400480045005200200049004e00200041004e
00200041004300540049004f004e0020004f004600200043004f004e0054
0052004100430054002c00200054004f005200540020004f00520020004f
00540048004500520057004900530045002c002000410052004900530049
004e0047002000460052004f004d002c0020004f005500540020004f0046
0020004f005200200049004e00200043004f004e004e0045004300540049
004f004e00200057004900540048002000540048004500200053004f0046
005400570041005200450020004f00520020005400480045002000550053
00450020004f00520020004f00540048004500520020004400450041004c
0049004e0047005300200049004e002000540048004500200053004f0046
00540057004100520045002e000d000a00540069006d006500730020004e
0065007700200052006f006d0061006e0020004e00650067007200690074
006100540069006d006500730020004e0065007700200052006f006d0061
006e0020004c0069006800610076006f00690074007500540069006d0065
00730020004e0065007700200052006f006d0061006e0020004700720061
00730073006500740074006f00540069006d006500730020004e00650077
00200052006f006d0061006e0020004600e9006c006b00f6007600e90072
00540069006d006500730020004e0065007700200052006f006d0061006e
002000560065007400540069006d006500730020004e0065007700200052
006f006d0061006e002000480061006c007600660065007400540069006d
006500730020004e0065007700200052006f006d0061006e00200050006f
00670072007500620069006f006e006100540069006d006500730020004e
0065007700200052006f006d0061006e0020004e00650067007200690074
006f00540069006d006500730020004e0065007700200052006f006d0061
006e0020041f043e043b0443043604380440043d044b043900540069006d
006500730020004e0065007700200052006f006d0061006e002000540075
010d006e00e900540069006d006500730020004e0065007700200052006f
006d0061006e0020004b0061006c0131006e00540069006d006500730020
004e0065007700200052006f006d0061006e0020004b007200650070006b
006f00540069006d006500730020004e0065007700200052006f006d0061
006e0020011100e20323006d00540069006d006500730020004e00650077
00200052006f006d0061006e0020004c006f006400690061410c00540415
029a001d001f0415041504140413003c001f0413b3061d1f20b8040cb30c
0e3220b8040cb2131732b8040bb328201f0f41100412008004120002000f
0412003f0412005f04120003005f0412000100400412b2783340b80412b2
723340b80412b26e3340b80412b26a3340b80412b2543340bc0412004a00
33ffc00412b317183240b80412b30a0c3280b80412b308093240b80411b2
5a33404109041100560033ffc0041100530033ffc00411b2503340b80411
b24d3340bc041100470033ffc00411b344453240b80411b2423340bc0411
003e0033ffc00411b23a331f4124041100200411004004110070041100af
041100f004110006000f0411002f04110090041100ff04110004002f0411
00400411007f0411008f041100a0041100e004110006ffc00411b208330f
411b0410008f04100002000f0410001f0410002f04100003006004090001
00b004090001000f0408003f0408004f0408009f04070004040ab2006c1f
b9ffc00403b345453240b80403b32b2e3240b80403b2282932b9ffc00403
b21a1c32bd040302990027001fffc00401b2161b32b9ffc00400b2424232
b9ffc00400b2363832b9ffc00400b32a2d32df410a040000ef0400000204
0004010028001fffc00401b3282e32f0bf0401000103fe000f0101001fff
c003fcb310143240b803fdb30f133240411003f9005003f9000200b003b1
00c003b10002006f03f5007f03f50002ffc003afb22d3132b9ffc003afb3
0a0e3210411003ef002003ef008003ef000300a003ef0001002003ef0040
03ef0002ffc003efb313163240b803e7b20f1132b9ffc003dfb2303432b9
ffc003dfb310183250411403dc000103c903d20023001f03e203d2001e00
1f03c703d2001d001f03c603c8000d001fffc003a4b30f103280411003a3
000103a303790029001f03a5037a0032001f03a8037e001b001fffc003d9
b20e1132b9ffc003d9b2282a32410a03a7037c0032001f03730371003400
1f036c036bb2321f20bb03a40001004003ecb3090b3240b803ecb2101532
bd03e9036b0014001f03e4036bb2171f0fbd036e002f036e0002ffc003b8
b3090d3290410c03b800a003b80002001f03d20001009f03d20001004003
d2b2090b32410a03a903800016001f03cf03810015001f03aa0382b2151f
c0bb03f70001004003f6b3090d3240b803a2b2083340b803a2b30d0e32c0
410903a2000100b003f200c003f20002ffc003f4b3263832004126038c00
30038c0002002003e3003003e30002001003ee003003ee005003ee006f03
ee007f03ee009f03ee0006000003ed003003ed0002002f03de007003db00
9003db009f03de0004ffc00379b20f1032b9ffc00379b2242832b9037d03
7cb2321f10bb037e0001ffc0037eb3090e3240b8037cb2121332b9ffc003
7cb30c0e323fbd03d7004f03d70002004003d8b31718326fbb038e000100
400390b3181b3240b803d4b2090c32bd037b037a0032001fffc0037ab20e
1132bd038003820016001f03810382b2151fb0be03820001000f03830001
004003ffb30c11327f411403540001006f0354008f035400d0035400ef03
540004000f0354002f0354005f0354000300400350b30e0f320fbb035a00
0100400349b20e331fbd0348007f03480002ffc00348b2152232b9ffc003
47b2152232b9ffc0040fb21b1e32beffc0040f002d01000032040e0406b2
2f1f51bb034b0001034f034eb2641f40b80351b20e0f32b9ffc0034eb338
3a3230bb034e0001ffc0034eb21f2332b9ffc0034eb2131932b9ffc00346
b2091132b9ffc00343b30a11320fbb03440001ffc0032bb2080e32b9ffc0
032bb2161b32b9ffc0032ab31417321f4110033a0001000f033300010000
03370020033700300337008003330004ffc00332b3101232504164033200
01004003320060033200a0033200b0033200040010033200300332005003
3200e003320004000f0336007f033600ff033600030070033600f0033600
02000f0331003f0331008f033100bf033100e003310005000f0331006003
310002008f03300001006003300090033000020050032f00010010032f00
40032f0060032f0080032f00a0032f00c0032f00f0032f000700cf032d00
ff032d00020030032d0080032d00b0032d00df032d0004006f032c007f03
2c00020012032000fd0800001f007f0299403a017f007f017f027f037f04
7f057f107f11084035252c32406a252c32402e252c324028252c32376009
7009800903300940095009031009200902b8ffc0b2073a33b8ffc0401206
3a33da4dea4dfa4d0312379006900702cf410c011100df011100ef011100
0300cf011000df011000ef0110408703cf3edf3eef3e03cf4ddf4def4d03
cfdedfdeefde03cf2ddf2def2d03404d1b3a32375f016f017f018f01041f
012f013f014f01045f036f037f038f03041f032f033f034f0304600b700b
800b03300b400b500b03100b200b02900ba00bb00bc00bd00b05b006c006
d006e006f0060550066006700680069006a006061f072f073f07400604f0
414302db000100a002db00b002db0002008002db009002db0002001002db
000100c002db00d002db0002009002db0001006002db007002db00020040
02db005002db0002002302db003002db000202db002300a002da00010080
02da009002da0002004002da0001002302da003002da000202da00230000
02d90001007002d9009002d9000202d9401c223024402402102420240200
2401f02401d024e02402b024c02402c0413a02d8000100a002d800b002d8
0002008002d8009002d80002002302d8003002d8000202d8002300c002d7
000100a002d700b002d70002008002d7009002d7000200a002d700b002d7
0002008002d7009002d70002006002d7007002d70002004002d7005002d7
0002002302d7003002d7000202d7b223370f4117029b0001005f029b009f
029b00df029b0003002f029b003f029b006f029b0003001f029b0001029b
029b0040029ab3272c3280b8029ab2263340b8029ab2223340b8029ab21e
3340b8029ab21c3340b8029ab3191a325f410f029a009f029a00df029a00
03000f029a001f029a003f029a0003ffc00299b2443340b80299b23d3340
b80299b23a33df413902990001005f029900af02990002004f0299009f02
990002002f0299003f0299000200af02990001000f0299003f0299000200
b0029900e0029900020070029900a002990002004f0299005f0299000200
0f0299001f0299002f0299003f02990004029a029a02990299000f027a00
2f027a400b0200161600000012110812b802bab269121fb802b4b228101f
b802b3b228101fb802b2b228101f411302030023000d01ee0023000d01ae
0023000d019f0023000d01940023000d01570023000d010f400b230df923
0dc5230da7230d410a024a0024000d01f00024000d01e90024000d016a40
0e240de8240dc6240da3240da2240dbb01e30022000d0121401a220de522
0ddd220db7220daa220d93220d5c220d51220d4c220d410a02280020000d
021d0020000d015e0020000d011c4017200dfc200de1200dcb200dc8200d
a1200d59200d3a200d410a01f20034000d019c0034000d01970034000d01
35b7340d1f340d1d340dba0202000f015bb20f0009bb0202015b000d030a
b22a3e1fb80309b22a3e1fb80221b24d251fb8021cb24d411fb8021bb24d
521fb8021ab24d721fb80213b24d931f4109020f01b10401001f020e01b1
0801001f020cb22a811fb8020bb22a811fb80208b22a5e1fb80205b22a39
1fb801feb22a231fb801fbb2661d1fb801fab2661e1fb801f6b266341fb8
01f5b266341fbc01f300660201001f01f1b2669e1f410901ea0028080100
1f01e7002602ab001f01b8b24d3f1fb801b7b24d931f410901b4003e0125
001f01b200400401001f01acb22a721fb801a8b22a281fb801a7b22a241f
b801a6b22a241fb801a3b22a1f1fb801a1b2662e1fb8019eb266931fb801
9db266e41fb8019ab2286c1f4109019900280401001f019800260401001f
0173b24d1b1fb80171b24d241fb80170b24d2f1fb8016fb24d351fb8016b
b23ecd1fb80169b23ee41f4109016701b1019a001f0166002a02ab001f01
61b2662a1fb8015fb2669e1f4109015d0028019a001f015c00350401001f
0147b24d391fb80146b23ecd1f410d0145003e0125001f01440143010100
1f014201b102ab001f0140b22a301fb8013eb22a261fb8013db2661d1fb8
013cb2662b1fb80138b228811fb80137b2289e1fbc01360028019a001f01
29b24d721fbc0124002a0201001f0123b22aab1fb8011fb266291fb8011e
b266451fb8011bb228811f41090113003e0125001f0112003e0401001f01
11b22a291fb80110b22a201fbe010b0066019a001f010a0026019ab61ffd
4d721ffb3eb80156b21ffa40b80801b21ff728b80801b61fec4d621feb4d
b80401b21fea40b802abb61fdf4d721fde3eb802ab400b1fdc2ae41fdb66
221fca2ab80401401b1fc92a2e1fc326791fb828bb1fb34d1e1fb166291f
b066621faf66b80401b21fae26b802abb21fa828b80201400b1fa0664c1f
982a2b1f9726b8019ab61f9266291f8740b802ab401b1f852a791f822681
1f754d931f744d891f732a1d1f70285e1f6a28b8040140171f692a521f68
2a201f6766291f6566671f612a931f6035b80801b61f5e2acd1f5335b808
01b21f4b66b80156b21f493eb80801b61f4866521f4626b80201b21f3f66
b80156400b1f3b66341f322a931f2e35bb0401001f002d0143b3cd1f5537
bc022f0007018000070172402e07bd077e076207540742072f0727072507
21071e071408120810080e080c080a0808080608040802080008000214b8
ffe0402b0000010014061000000100060400000100041000000100100200
0001000200000001000002010802004a00b013034b024b5342b0372b4bb8
07ff52b0382b4bb008505b58b101018e59014bb0c063004b6220b0f65323
b8010a515ab005234201b0124b004b544218b0382bb00288b801005458b8
01ffb101018e851bb0124358b90001012c858d1bb900010146858d595900
16763f183f123e113946443e113946443e113946443e113946443e113946
60443e113946604445442b2b2b2b2b2b2b2b2b2b2b182b2b2b2b2b2b2b2b
2b2b2b2b2b182b1db0964b5358b0aa1d59b0324b5358b0ff1d594bb02953
205c58b9026c026a4544b9026b026a45445958b90168026c455258b9026c
01684459594bb03b53205c58b9003e026b4544b9004d026b45445958b902
5c003e455258b9003e025c4459594bb03b53205c58b901b1003e4544b13e
3e45445958b9024f01b1455258b901b1024f4459594bb05a53205c58b901
43003e4544b13e3e45445958b9038b0143455258b90143038b4459594bb0
9e53205c58b9002a026c4544b90040026c45445958b9056c002a455258b9
002a056c4459594bb01853205c58b126264544b1662645445958b1322645
5258b126324459594bb05153205c58b126264544b1282645445958b1ad26
455258b126ad4459594bb8010153205c58b126264544b1352645445958b9
02280026455258b9002602284459592b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b65422b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b01b33d766e58456523456023456560234560
b08b766818b080622020b16e764565234520b003266062636820b0032661
65b076236544b06e234420b13d584565234520b003266062636820b00326
6165b058236544b03d2344b10058455458b158406544b23d403d45236144
59b34e813871456523456023456560234560b089766818b080622020b138
814565234520b003266062636820b003266165b081236544b038234420b1
4e714565234520b003266062636820b003266165b071236544b04e2344b1
0071455458b171406544b24e404e45236144594b5242014b5058b1080042
59435c58b108004259b3020b0a124358601b2159421610703eb0124358b9
3b21187e1bba040001a8000b2b59b00c2342b00d2342b0124358b92d412d
411bba04000400000b2b59b00e2342b00f2342b0124358b9187e3b211bba
01a80400000b2b59b0102342b01123420074184569444569447373737374
74757575752b2b2b73732b2b2b2b2b2b18456944737373742b4544737373
737374747445447374747474747475757545447375454473737474454473
73737373747474740075757575757575757575752b2b7474747474740073
2b4358b14d4d451869441bb8ffc0b34d1b3a322b5973002b2b7575752b2b
2b2b2b0073732b435c58b8ffc0b2071633b8ffc0400b061633d54de54df5
4d03c0410c011100d0011100e00111000300c0011000d0011000e0011040
1e03c03ed03ee03e03c04dd04de04d03c0ded0dee0de03c02dd02de02d03
372b74747474747473002b2b590173737473747374737473747374752b73
7573002b2b2b01732b2b2b2b752b2b2b732b2b2b002b2b742b732b737374
2b73732b2b2b2b2b2b732b732b2b2b742b2b2b73737373732b73732b2b2b
73002b2b2b2b7374732b732b2b2b2b752b2b2b2b2b2b2b2b752b2b2b2b2b
732b2b2b2b7374752b2b7373732b2b2b752b2b732b2b2b2b2b2b2b2b2b2b
73747573742b7374752b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b7374
752b2b2b002b2b4569442b2b00>
[283 ] AllocGlyphStorage
]def 
108 44 
PrepFor2015
Type42DictEnd
1 108 1 <000300afffe507510134000b001700230041b518491e0c4912b80311b31e
004906b80311b41e0b1b4921b8016cb20f4915b8016cb70349091924d8cf
182b4e10f44dfdf6fdf6ed003ff4ed10f4ed10ed31300101321615140623
222635343605321615140623222635343605321615140623222635343601
554661624545616102f04561614545616102f04660614545616101346245
456161454562016145456161454561026145456161454561>QJJAAA+Times#20New#20Roman AddT42Char 
1 0 0 <0002011c0000051c0500000300070042b40201c30607b803084013000504
c303000a0704c3010019080605c30203bc014100090125015600182b10f6
3cfd3c4e10f43c4dfd3c003f3cfd3c10fc3cfd3c31302111211125211121
011c0400fc2003c0fc400500fb002004c000>QJJAAA+Times#20New#20Roman AddT42Char 
QJJAAA+Times#20New#20Roman /CharStrings get begin
/g1 1 def
end
QJJAAA+Times#20New#20Roman /Encoding get
dup 32 /g1 put
pop
end
%ADOEndSubsetFont
/DGXVTU+Times#20New#20Roman /QJJAAA+Times#20New#20Roman findfont ct_VMDictPut
/DGXVTU+Times#20New#20Roman*1 
[32{/.notdef}rp /g1 223{/.notdef}rp]
DGXVTU+Times#20New#20Roman nf
DGXVTU+Times#20New#20Roman*1 [18 0 0 -18 0 0 ]msf
562.194 52.565 mo
( )sh
DGXVTT+Times#20New#20Roman*1 [18 0 0 -18 0 0 ]msf
669.474 52.565 mo
( )sh
DGXVTT+Times#20New#20Roman*1 [12 0 0 -12 0 0 ]msf
680.52 56.885 mo
(#)sh
DGXVTS+Times#20New#20Roman*1 [18 0 0 -18 0 0 ]msf
174.96 81.365 mo
(+)sh
DGXVTT+Times#20New#20Roman*1 [18 0 0 -18 0 0 ]msf
246.6 81.365 mo
($)sh
DGXVTT+Times#20New#20Roman*1 [12 0 0 -12 0 0 ]msf
257.64 85.685 mo
(!)sh
263.64 75.965 mo
(%&')
[3.8399 3.336 0 ]xsh
DGXVTT+Times#20New#20Roman*1 [18 0 0 -18 0 0 ]msf
354.474 81.365 mo
(\()sh
DGXVTT+Times#20New#20Roman*1 [12 0 0 -12 0 0 ]msf
364.68 85.685 mo
(!\)!)
[6 3 0 ]xsh
DGXVTT+Times#20New#20Roman*1 [18 0 0 -18 0 0 ]msf
452.034 81.365 mo
(\()sh
DGXVTT+Times#20New#20Roman*1 [12 0 0 -12 0 0 ]msf
462.24 85.685 mo
(!\)")
[6 3 0 ]xsh
DGXVTU+Times#20New#20Roman*1 [18 0 0 -18 0 0 ]msf
562.194 81.365 mo
( )sh
DGXVTT+Times#20New#20Roman*1 [18 0 0 -18 0 0 ]msf
665.406 81.365 mo
(\()sh
DGXVTT+Times#20New#20Roman*1 [12 0 0 -12 0 0 ]msf
675.6 85.685 mo
(!\)#)
[6 3 0 ]xsh
DGXVTS+Times#20New#20Roman*1 [18 0 0 -18 0 0 ]msf
174.96 110.165 mo
(,)sh
DGXVTT+Times#20New#20Roman*1 [18 0 0 -18 0 0 ]msf
246.6 110.165 mo
($)sh
DGXVTT+Times#20New#20Roman*1 [12 0 0 -12 0 0 ]msf
257.64 114.485 mo
(")sh
263.64 104.765 mo
(%&')
[3.8399 3.336 0 ]xsh
DGXVTT+Times#20New#20Roman*1 [18 0 0 -18 0 0 ]msf
354.474 110.165 mo
(\()sh
DGXVTT+Times#20New#20Roman*1 [12 0 0 -12 0 0 ]msf
364.68 114.485 mo
("\)!)
[6 3 0 ]xsh
DGXVTT+Times#20New#20Roman*1 [18 0 0 -18 0 0 ]msf
452.034 110.165 mo
(\()sh
DGXVTT+Times#20New#20Roman*1 [12 0 0 -12 0 0 ]msf
462.24 114.485 mo
("\)")
[6 3 0 ]xsh
DGXVTU+Times#20New#20Roman*1 [18 0 0 -18 0 0 ]msf
562.194 110.165 mo
( )sh
DGXVTT+Times#20New#20Roman*1 [18 0 0 -18 0 0 ]msf
665.406 110.165 mo
(\()sh
DGXVTT+Times#20New#20Roman*1 [12 0 0 -12 0 0 ]msf
675.6 114.485 mo
("\)#)
[6 3 0 ]xsh
DGXVTU+Times#20New#20Roman*1 [18 0 0 -18 0 0 ]msf
170.406 138.965 mo
( )sh
251.64 138.965 mo
( )sh
358.074 138.965 mo
( )sh
455.634 138.965 mo
( )sh
562.194 138.965 mo
( )sh
668.646 138.965 mo
( )sh
DGXVTT+Times#20New#20Roman*1 [18 0 0 -18 0 0 ]msf
174.96 167.765 mo
(*)sh
246.6 167.765 mo
($)sh
DGXVTT+Times#20New#20Roman*1 [12 0 0 -12 0 0 ]msf
257.64 172.085 mo
(*)sh
263.64 162.365 mo
(%&')
[3.8399 3.336 0 ]xsh
DGXVTT+Times#20New#20Roman*1 [18 0 0 -18 0 0 ]msf
354.474 167.765 mo
(\()sh
DGXVTT+Times#20New#20Roman*1 [12 0 0 -12 0 0 ]msf
364.68 172.085 mo
(*\)!)
[6 3 0 ]xsh
DGXVTT+Times#20New#20Roman*1 [18 0 0 -18 0 0 ]msf
452.034 167.765 mo
(\()sh
DGXVTT+Times#20New#20Roman*1 [12 0 0 -12 0 0 ]msf
462.24 172.085 mo
(*\)")
[6 3 0 ]xsh
DGXVTU+Times#20New#20Roman*1 [18 0 0 -18 0 0 ]msf
562.194 167.765 mo
( )sh
DGXVTT+Times#20New#20Roman*1 [18 0 0 -18 0 0 ]msf
665.406 167.765 mo
(\()sh
DGXVTT+Times#20New#20Roman*1 [12 0 0 -12 0 0 ]msf
675.6 172.085 mo
(*\)#)
[6 3 0 ]xsh
DGXVTS+Times#20New#20Roman*1 [18 0 0 -18 0 0 ]msf
373.806 20.633 mo
("#$%)
[16.0021 7.992 5.004 0 ]xsh
410.886 20.633 mo
(&)sh
416.88 20.633 mo
(-%$%./)
[9 7.992 5.004 8.12411 5.004 0 ]xsh
DGXVTT+Times#20New#20Roman*1 [18 0 0 -18 0 0 ]msf
456.246 20.633 mo
(+)sh
DGXVTT+Times#20New#20Roman*1 [12 0 0 -12 0 0 ]msf
469.2 15.245 mo
(%&')
[3.8399 3.336 0 ]xsh
410.04 217.68 mo
420.84 217.68 li
420.36 218.16 li
420.36 176.04 li
440.4 176.04 li
440.4 218.16 li
439.92 217.68 li
450.6 217.68 li
430.32 237.96 li
410.04 217.68 li
cp
430.68 236.88 mo
429.96 236.88 li
449.04 217.8 li
449.4 218.64 li
439.44 218.64 li
439.44 176.52 li
439.92 177 li
420.84 177 li
421.32 176.52 li
421.32 218.64 li
411.24 218.64 li
411.6 217.8 li
430.68 236.88 li
cp
f
.750271 .679713 .654902 .901945 cmyk
%ADOBeginSubsetFont: HIBBAA+Times#20New#20Roman AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal HIBBAA+Times#20New#20Roman gcheck setglobal} if
1 4602 13 <0003ffd1000004b9054c0021002c0037019b40760704160402122c303f25
3f304f305b346a337b3370398c30950a9d289f30a40aae29ab30b304b50a
bc25bf3013562cc4040222372d2d2c131a141d13011b001d012c2d2d1e1a
1b141a1a1b0935242f2e132a2e01372e222433352e2f228f220222221301
02130822372c2d1a38281b1a100909272d32b8037fb33f0c010cba014200
27037fb5064011123406b8ffc0b310183406b80117b5392cbd2de31bb803
45400e121a40191b34b01ac01ad01a031ab8ffc0b51135301a011ab80173
b638091a171a380aba0173011500182b2b103c2b2b4e10f45d2b5d2b435c
58b9001affc0b31c113f1ab8ffc0b326173f1ab8ff80b328183f1ab8ffc0
b62d173f1a4011392b2b2b2b2b59014de4fde44e10f62b2b4de9f471e919
1112392f2b103c2b10c0011112393900183f3f12392f5dfded10ed10ed10
ed11123987052e2b7d10c4180010ed0110c00010ed0110c007103c3c3130
015d4bb028534bb075515a58b2341925b8ffe7383859004bb02b534bb03e
515a58b524282328222838383859015d435c58400c302215393222213927
2221392b2b2b59015d013721321616151406071616151406060706232137
363736373637133635342623221316333236353426232207011633323635
3426232207012f0e01e47abf5fa9bf7b7468a37352aefe0f0d4e1c281118
28f31f374d11bc411dd0cb7c882438fea26c3d9cf195a6202e0527254c88
4c75bd2d2e985b65b866181125020d111c26880335682a252bfdce02b588
67730cfb5b0ebca17b8a0300>HIBBAA+Times#20New#20Roman AddT42Char 
1 5184 14 <0002ffd1000004a2054c00260031018a407d081609273c2a48004c2a4a2b
5a006a007b00771f792d96069a2daa2ab917bf2abf2e11a606b40702061c
161c892d0303273131040c130d1d0c0b040a1d0b1a14191d1a2622251d26
3104041e1314141313142122221e0001140000012101292f2e1a292e0101
001a02260c0c0b0b000822210100042c1332281413102cba037f001effc0
b3282d341eb8ffc0b31c1e341eb8ffc0b31318341eb80117b67033013331
d404ba030100140213b51340120b3f13b8ff80b326173f13b8ff80400928
183f13400f193e13b8ffc0b30b123e13b8ff80b72d173f1341183913b8ff
c0b612391340113913b8ffc0b3282d3413b8ffc0b31c1e3413b8ffc0b613
183480130113b80173b63209131713320ab80173b1c4182b2b103c2b2b4e
10f45d2b2b2b2b2b2b2b2b2b2b2b2b014de4fde44e105df62b2b2b4de92b
103c2b10c001121739003f3c103c103c3f12392fed10ed111239870e2e2b
0e7d10c4870e2e182b057d10c4180010ed0110c00010ed0110c00010ed01
10c00010ed0110c087103c7dc43130005d015d5d21030627030615141716
170721373637363736371336353426073721321615140607131616170701
163332363534262322070353d94c5075171d166209fdf30b4a1a29132023
ed184b460c01badec4c9af8430606b0bfd584032acc87d7d202c02930110
fe6650372a1812082525030c111d2f770333522d2e400125a88983d91dfe
739258062502db09bf8e6f760800>HIBBAA+Times#20New#20Roman AddT42Char 

1 0 15 <> HIBBAA+Times#20New#20Roman AddT42Char 
1 5738 16 <0001008f00000532054c0021012b40230340120b3f0d221039b50d01131a
141d13120b111d1205038802208821021001060101bb0308000a0021ffc0
400b1139211000300070000200b8030840101b100a0b0b1e1a1b141a1a1b
091c0a1bb8019c4014000221bd0100020a1312081a22281b100bd2121ab8
ffc0b33334341ab8ffc0b32b2e341ab8ffc0b32329341ab8ffc0b31e2034
1ab8ffc0400b181a347f1a9f1aaf1a031ab8021eb722091a171a220a67b9
034a00182b2b103c2b2b10f65d2b2b2b2b2b435c58b51a40140c3f1ab8ff
c0b217391ab8ffc0b323123f1ab8ffc0b712133e1a4032193f2b2b2b2b2b
5901ed2b3c2b10c0003f3c2b3f3cfc3c10fd3c3c3c870e2e2b057d10c42b
7a10f05d01182f2bc42b7a10e001182f382bc40110ed10fd390010ed0110
c00010ed0110c03130015d2b2b0121032336353427262323010615141633
3307213733323736363701232206060723012c04066f26132d228d6bfef4
3340512e0cfdb20b1a4e2a1d2f2a011951758f581c25054cfe984f3e4925
1cfc5ab029263125251911599003c33c7269>HIBBAA+Times#20New#20Roman AddT42Char 
1 6146 17 <0001002a0000033d0389002900f9404102180c3921180c39510155035e09
5e0a5229aa03ac0faa18a51a09851a951aff2b0389049904021e1f1f0100
4521ea282930004d01021420021f0201212f0d010db8019f402214250606
010728011f01001f1f202114202021201f0a282120103009400950090309
ba0240001f0203b229c920b8ffc0402e17392040343d3420402c35204024
352040223520401f203420401c1d3400200100209f20bf20d020ef20ff20
0620b80188b52b2017324c182b2b10f45d712b2b2b2b2b2b2be4fde45d2b
103c2b3f3c87052e2b087d10c42b183f003c10fde45d0111123911390011
123910f5ed2bfc01f5870e7d10c43130005d015d5d2b2b13250312373633
321615140706232226272627262322070607060706070607072313363534
27262322076b015990af8f5133212622182d1721040207080b110f1a3553
612a1e2a062099b9200f14211538035138fe1a012b77442725423c2d1e1f
130608080e40629c425372177e026d6c2e120c100900>HIBBAA+Times#20New#20Roman AddT42Char 
1 6528 18 <00020030ffe803c103890026003501d940180920082135018401842a9501
981b932a982eac33b62b0b30b8ffde40170c143fa416a43102362a4a2002
0c2219350c0e2228340eb8ffde40392228343f174f175f17033d30010c40
2228340c401935b916d926e826030102040400161617252626150c0d1627
2f322625160431152c331d26b80395401300272422220007280004041f15
26141515262fb8ffdcb31e123f2fb8032e400d1a1a100b1536282615100d
8a0cbd014300040203001500000203b726ad15401e123f15b8ffc0400e23
25340015101530150390150115b8ff80b2533515bd0295002c0381001200
1dffc0b32e34341db8ffc040172627341d8053359f1def1d021d32361517
15360a32c3182b2b103c2b4e10f45d2b2b2b435c58b9001dffc0b350283f
1db8ffc0b332193f1db8ffc0b318283f1db8ffc0b315233f1db8ffc0b30f
193f1db8ffc0b31e123f1db8ffc0b313193f1db8ffc0b117392b2b2b2b2b
2b2b2b594de9f42b5d712b2bf4ed10fdf6ed2b103c2b10c0003f3c10ed2b
870e2e2b0e7d10c42b183f003c10ed10e401113911123911393911390011
12390110c9870e7d10c4083c870e10c4c43130015d002b2b5d72012b2b2b
5d004bb02a534bb03a515a58bf0035ffd40034ffd40028ffe80027ffe838
38383859005d2b015d010307061514171633323736371706062322263534
373706070623222635341237363332161737072207060215141633323736
35342603c1c316030a080c0d1527412245923e2b2b1615836e4f4c496abf
9373663d511524c54048669f442c6d80ab420389fd5a5b0d09100c09101d
5b18686d2b2931504bab4431796a9f01616a54404a721c3c55feb287444f
a1d6e1554c00>HIBBAA+Times#20New#20Roman AddT42Char 
1 7164 19 <0001ffedffe802e70389003000c2401b32010117221b103f080b040f180b
150f3a2705280b230f99030301b8ffc0400e0d0d42552f013f014f015f01
0401b80104400a2ec60030070524290719b801b5403415c618170b1d2411
0b028a00c60140120b3f50010101c90e3ad020e020f020037f208f209f20
c0200420a0083a26951a8a19c618b8ffc040133435184030351840212234
a018c01802187c31ba0144016400182b10f55d2b2b2bf4edf4edf45d5dfd
f45d2be4ed003fed3f3ce4ed3fed3f3ce4ed5d2b3130015d5d2b005d0103
232626232206151416171616151406232227262322072313331616333236
3534272e02353436333217161633323702e73d2505684d3e491d31824cad
84485e21122d17253d250672634c59101cb3338d6f201a0e67112b1d0389
fecd867a4430213c368e904068a1220c2e0144987e553e28223cd46a3561
860503272f00>HIBBAA+Times#20New#20Roman AddT42Char 
1 7500 20 <0001fe9bfe4603c5058e0043016db90003ffdeb35a2d3f03b8ffc0401355
2b3f06401741174239000412454028293423b8ffc0401a19233400401923
3445403235454016354540183545400e103445b8ffc0b10d35b106024354
58400c2104044544012340552b3f23b8016b40102424000633953d242d00
10951b24090f003ffde43ffde43f3c10fd2b3c011112392fcd1b402b2122
27271f03024342042324041f0243274204041f1f27141f1f2710951b3395
3d242d00012340552b3f23b8016b4019242400061b24090f1f4428271f10
363a393130180909025530b802feb217310db802034010301340130213ad
441f171f440a32db182b2b103c2b10f45dfdedfd2beded2b103c2b10c000
3fed3f3c10fd2b3c3ffde410e4870e2e2b0e7d10c4011139391112393987
c4c40ec4870510c40e3c593130012b2b2b2b2b2b2b2b435c58b90004ffde
b3552b3f02b8ffde401b552b3f04223c1e3f02403c143f22222d5a3f2122
2d5a3f454013392b2b2b2b2b2b2b59015d2b2b0107230302070607062322
272635343633321615140706151417163332363637363713233732363637
363736363332161514062322263534363534272623220706070607025f12
926e494a69795c5c3c2a1f33251b2515100709132b5f4a210e3daeae0e53
42372c3b364aa3484c5c2e241f271a090d193f3243351b48037142fe4bfe
df9edf5541241928202f221616130e07090507366b652aeb02a542174159
784259594d2d23302419102f080e070a2835713bea00>HIBBAA+Times#20New#20Roman AddT42Char 
1 8062 21 <0002003cffe803b30389000d001900ad404108020903060a03a413ae18a0
1bb212b216be18065b18591985138c1895139d18a5120736133a19471349
19570856125413070a0c0c11240b070305051724040b14b8038140120780
4b5334078043358f079f070207191a0eb8038140270040170e3f00404b53
34004043350040323500401e350000200030004000a0000500c31b2bc318
2b4e10f65d2b2b2b2b2b4de94e10f45d2b2b4de9003fed3c103c3fed3c10
3c3130015d5d5d005d011402042322263534122433321607342623220215
141633321203b39ffee48689ada9011b8484aba65b4893f760498df70250
96fedaacaf8b930128acae465d63fe5bd05f6701a300>HIBBAA+Times#20New#20Roman AddT42Char 
1 8324 22 <00010023ffe8056e038900530245408419010112382d0159095b0c5f0d57
145c385d3a5d3b5e3c5552681369166a2c790c79167a2c783c89038b2c8b
3c89439d039b0e9b369d43a701ab0da137a938af39af3aaf3bae3caa44a3
45b538b63ab648256b3668376a4403520059445252038936884498450365
397a36753a7b447648a339062801253927472f556f5405212253fe4bb801
1c4054285230534d000d3a070149410d0a3a01004b343111114131070753
c600071419191f2930142929300a3a3a1f3b3e143b3b3e00480053481f49
4b1449494b260b4948483b3b3a0a29542830293e3b4b4910228a21b80143
b319142530b80124400c192529400e356029df290229b80234b66f3a01af
3a013ab8020340153b4023353b401b1c346f3b013b500a010a253ead3bba
01c000480203b44bad52c949b8ffc0b2173949b8ffc0b2233549b8ffc0b2
1f3549b8ffc0b31b1c3449b8ffc0b2193549b8ffc0b32a2c3449b8ffc040
172f34346f49ef490249195429173b17491729540a3286182b2b103c2b2b
2b4e10f45d2b2b2b2b2b2b2b4de4e4edf4f4ed5d10712b2bed5d71f45d2b
edf4ed10f6ed2b103c103c103c2b10c0003f3c103c103c3f87052e2b087d
10c487052e182b0e7d10c4870e2e182b7d10c400183fe43c10ed3c10ed01
1112391112390011123911123910f5ed2bfc01f510c93130015d5d5d5d5d
5d0171435c5840110d180c393c180c3900220c394a180c3936b8ffc0b20f
390fb8ffdeb20f3904b8ffdeb20f3900b8ffc0b20f3953b8ffc0b20f3917
b8ffdeb613143e222213392b2b2b2b2b2b2b2b2b2b2b59005d0103363736
373633321615140707123736333216151407030615141716333237363717
0e0223222635343713363736353427262322070607060723133635342623
22070602070603231337363534262322072701bc82573d5f5a353a324217
47a392514f2e3b126e2409060a0a19393221197f5a26232f295b1f02030b
0c0f2a2f8a784f4597ab1c161021253cbd34195e94b91807281f0d3b0903
89fe3d9f507c38204032314ffe01317b443f423a41fe7b7f0e0e0a07132c
4815288c323023309101416f0c1312190e0e2b7fe597ec025d62211b1a18
27ff007537fed6028854130916230c25>HIBBAA+Times#20New#20Roman AddT42Char 
1 9150 23 <00020058ffe8022e0516000b002901244027176e3a3516763a35122b4012
352b40191b34590c0119230116172945215a282830294d0c007006b8039c
401a0c07280c0f0c290f1f1e21141e1e211b0b1e2a28211e10178a16b801
43b40f0970030cb80147b203600fb80123b7296c121e401b351eb8ffc0b3
3a3b341eb8ffc0b32a34341eb8ffc040092324341e401f20341eb8ffc040
13131634301e8f1e021e192a1e171e2a0a7786182b2b103c2b4e10f45d2b
2b2b2b2b2b435c58400b1e401c113f1e400d113f1eb8ffc0b3160d3f1eb8
ffc0b117392b2b2b2b594de4fde4e610ed10f6ed2b103c2b10c0003f870e
2e2b087d10c42b183f00f6ed10f5ed2bfc01f510c9313001715d2b2b435c
58b517400c143f0db8ffdeb61339172213390db8ffdeb50f3917400f392b
2b2b2b2b59012b2b01321615140623222635343613030615141633323736
371706070623222635343713363534262322073501ca2a3a3b29293b3a37
c614130d0f15393a23445c443e29341982201f1b164505163a2a293b3b29
2a3afe73fd43470e1014102d53176847353125255601c06e1c161c0b2700
>HIBBAA+Times#20New#20Roman AddT42Char 
HIBBAA+Times#20New#20Roman /CharStrings get begin
/g13 13 def
/g14 14 def
/g15 15 def
/g16 16 def
/g17 17 def
/g18 18 def
/g19 19 def
/g20 20 def
/g21 21 def
/g22 22 def
/g23 23 def
end
HIBBAA+Times#20New#20Roman /Encoding get
dup 44 /g13 put
dup 45 /g14 put
dup 46 /g15 put
dup 47 /g16 put
dup 48 /g17 put
dup 49 /g18 put
dup 50 /g19 put
dup 51 /g20 put
dup 52 /g21 put
dup 53 /g22 put
dup 54 /g23 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/DGXVTT+Times#20New#20Roman*1 
[32{/.notdef}rp /g1 /g2 /g3 /g4 /g5 /g6 /g7 
/g8 /g9 /g10 /g11 /g12 /g13 /g14 /g15 
/g16 /g17 /g18 /g19 /g20 /g21 /g22 /g23 
201{/.notdef}rp]
DGXVTT+Times#20New#20Roman nf
DGXVTT+Times#20New#20Roman*1 [18 0 0 -18 0 0 ]msf
279.72 206.033 mo
(,-./01*234051&64*)
[10.9979 10.9979 4.5 9.0239 7.00214 9 9 7.00214 5.004 9 7.00214 12.8699 
9 5.004 5.004 9 0 ]xsh
42.36 274.92 mo
77.76 274.92 li
77.76 239.52 li
42.36 239.52 li
cp
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
f
77.76 274.92 mo
216 274.92 li
216 239.52 li
77.76 239.52 li
cp
f
216 274.92 mo
273.6 274.92 li
273.6 239.52 li
216 239.52 li
cp
f
42.36 303.72 mo
77.76 303.72 li
77.76 274.92 li
42.36 274.92 li
cp
f
77.76 303.72 mo
216 303.72 li
216 274.92 li
77.76 274.92 li
cp
f
216 303.72 mo
273.6 303.72 li
273.6 274.92 li
216 274.92 li
cp
f
42.36 332.4 mo
77.76 332.4 li
77.76 303.72 li
42.36 303.72 li
cp
f
77.76 332.4 mo
216 332.4 li
216 303.72 li
77.76 303.72 li
cp
f
216 332.4 mo
273.6 332.4 li
273.6 303.72 li
216 303.72 li
cp
f
42.36 361.2 mo
77.76 361.2 li
77.76 332.4 li
42.36 332.4 li
cp
f
77.76 361.2 mo
216 361.2 li
216 332.4 li
77.76 332.4 li
cp
f
216 361.2 mo
273.6 361.2 li
273.6 332.4 li
216 332.4 li
cp
f
42.36 390 mo
77.76 390 li
77.76 361.2 li
42.36 361.2 li
cp
f
77.76 390 mo
216 390 li
216 361.2 li
77.76 361.2 li
cp
f
216 390 mo
273.6 390 li
273.6 361.2 li
216 361.2 li
cp
f
77.76 239.04 mo
77.76 390.48 li
.750271 .679713 .654902 .901945 cmyk
@
216 239.04 mo
216 390.48 li
@
41.76 274.92 mo
274.08 274.92 li
@
41.76 303.72 mo
274.08 303.72 li
@
41.76 332.4 mo
274.08 332.4 li
@
41.76 361.2 mo
274.08 361.2 li
@
42.36 239.04 mo
42.36 390.48 li
@
273.6 239.04 mo
273.6 390.48 li
@
41.76 239.52 mo
274.08 239.52 li
@
41.76 390 mo
274.08 390 li
@
.750271 .679713 .654902 .901945 cmyk
DGXVTS+Times#20New#20Roman*1 [18 0 0 -18 0 0 ]msf
50.4 260.519 mo
( !)
[5.99387 0 ]xsh
96.714 260.519 mo
("#$%)
[16.0021 7.992 5.004 0 ]xsh
133.794 260.519 mo
(&)sh
139.806 260.519 mo
('#%$\(\)#*)
[5.99387 7.992 7.992 5.14188 9 5.99387 7.992 0 ]xsh
DGXVTT+Times#20New#20Roman*1 [18 0 0 -18 0 0 ]msf
236.16 260.519 mo
( )sh
DGXVTT+Times#20New#20Roman*1 [12 0 0 -12 0 0 ]msf
247.2 264.845 mo
(!)sh
DGXVTS+Times#20New#20Roman*1 [18 0 0 -18 0 0 ]msf
55.44 295.799 mo
(+)sh
DGXVTT+Times#20New#20Roman*1 [18 0 0 -18 0 0 ]msf
132.84 295.799 mo
($)sh
DGXVTT+Times#20New#20Roman*1 [12 0 0 -12 0 0 ]msf
143.88 300.125 mo
(!)sh
149.88 290.405 mo
(%&')
[3.8399 3.336 0 ]xsh
DGXVTT+Times#20New#20Roman*1 [18 0 0 -18 0 0 ]msf
232.074 295.799 mo
(\()sh
DGXVTT+Times#20New#20Roman*1 [12 0 0 -12 0 0 ]msf
242.28 300.125 mo
(!\)!)
[6 3 0 ]xsh
DGXVTS+Times#20New#20Roman*1 [18 0 0 -18 0 0 ]msf
55.44 324.599 mo
(,)sh
DGXVTT+Times#20New#20Roman*1 [18 0 0 -18 0 0 ]msf
132.84 324.599 mo
($)sh
DGXVTT+Times#20New#20Roman*1 [12 0 0 -12 0 0 ]msf
143.88 328.925 mo
(")sh
149.88 319.205 mo
(%&')
[3.8399 3.336 0 ]xsh
DGXVTT+Times#20New#20Roman*1 [18 0 0 -18 0 0 ]msf
232.074 324.599 mo
(\()sh
DGXVTT+Times#20New#20Roman*1 [12 0 0 -12 0 0 ]msf
242.28 328.925 mo
("\)!)
[6 3 0 ]xsh
DGXVTU+Times#20New#20Roman*1 [18 0 0 -18 0 0 ]msf
50.886 353.399 mo
( )sh
137.88 353.399 mo
( )sh
235.674 353.399 mo
( )sh
DGXVTT+Times#20New#20Roman*1 [18 0 0 -18 0 0 ]msf
55.44 382.199 mo
(*)sh
132.84 382.199 mo
($)sh
DGXVTT+Times#20New#20Roman*1 [12 0 0 -12 0 0 ]msf
143.88 386.525 mo
(*)sh
149.88 376.805 mo
(%&')
[3.8399 3.336 0 ]xsh
DGXVTT+Times#20New#20Roman*1 [18 0 0 -18 0 0 ]msf
232.074 382.199 mo
(\()sh
DGXVTT+Times#20New#20Roman*1 [12 0 0 -12 0 0 ]msf
242.28 386.525 mo
(*\)!)
[6 3 0 ]xsh
DGXVTT+Times#20New#20Roman*1 [18 0 0 -18 0 0 ]msf
131.886 416.039 mo
(+)sh
DGXVTT+Times#20New#20Roman*1 [12 0 0 -12 0 0 ]msf
144.84 420.365 mo
(!)sh
150.84 410.645 mo
(%&')
[3.8399 3.336 0 ]xsh
296.88 275.52 mo
332.28 275.52 li
332.28 240.24 li
296.88 240.24 li
cp
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
f
332.28 275.52 mo
470.64 275.52 li
470.64 240.24 li
332.28 240.24 li
cp
f
470.64 275.52 mo
528.12 275.52 li
528.12 240.24 li
470.64 240.24 li
cp
f
296.88 304.32 mo
332.28 304.32 li
332.28 275.52 li
296.88 275.52 li
cp
f
332.28 304.32 mo
470.64 304.32 li
470.64 275.52 li
332.28 275.52 li
cp
f
470.64 304.32 mo
528.12 304.32 li
528.12 275.52 li
470.64 275.52 li
cp
f
296.88 333.12 mo
332.28 333.12 li
332.28 304.32 li
296.88 304.32 li
cp
f
332.28 333.12 mo
470.64 333.12 li
470.64 304.32 li
332.28 304.32 li
cp
f
470.64 333.12 mo
528.12 333.12 li
528.12 304.32 li
470.64 304.32 li
cp
f
296.88 361.92 mo
332.28 361.92 li
332.28 333.12 li
296.88 333.12 li
cp
f
332.28 361.92 mo
470.64 361.92 li
470.64 333.12 li
332.28 333.12 li
cp
f
470.64 361.92 mo
528.12 361.92 li
528.12 333.12 li
470.64 333.12 li
cp
f
296.88 390.72 mo
332.28 390.72 li
332.28 361.92 li
296.88 361.92 li
cp
f
332.28 390.72 mo
470.64 390.72 li
470.64 361.92 li
332.28 361.92 li
cp
f
470.64 390.72 mo
528.12 390.72 li
528.12 361.92 li
470.64 361.92 li
cp
f
332.28 239.76 mo
332.28 391.2 li
.750271 .679713 .654902 .901945 cmyk
@
470.64 239.76 mo
470.64 391.2 li
@
296.4 275.52 mo
528.6 275.52 li
@
296.4 304.32 mo
528.6 304.32 li
@
296.4 333.12 mo
528.6 333.12 li
@
296.4 361.92 mo
528.6 361.92 li
@
296.88 239.76 mo
296.88 391.2 li
@
528.12 239.76 mo
528.12 391.2 li
@
296.4 240.24 mo
528.6 240.24 li
@
296.4 390.72 mo
528.6 390.72 li
@
.750271 .679713 .654902 .901945 cmyk
DGXVTS+Times#20New#20Roman*1 [18 0 0 -18 0 0 ]msf
305.046 261.239 mo
( !)
[5.99387 0 ]xsh
351.234 261.239 mo
("#$%)
[16.0021 7.992 5.004 0 ]xsh
388.314 261.239 mo
(&)sh
394.326 261.239 mo
('#%$\(\)#*)
[5.99387 7.992 7.992 5.14188 9 5.99387 7.992 0 ]xsh
%ADOBeginSubsetFont: HIBBAA+Times#20New#20Roman AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal HIBBAA+Times#20New#20Roman gcheck setglobal} if
1 9570 24 <00010044ffe803a10568002e00cdb90014ffc04046111c3f5d2d6d2d7426
7d2d8e2d9a2da50aa918af2dbb02bb07b50ab918bf2d0e5e005f01026514
7514020502090f0c29030603160324149d2daa2dbe2df515070414141402
14ba038e000001f4b301010e22ba030e0028016cb21b0d0bbc0197000a02
020008016cb20e052bbc01210017030d00050121b64011012f110111bf01
9e0030000a01f4000b030f00010217b32f1f011fbc035d002f00c8035c00
182b10f65df4f4ed10f65d71edf4ed003ffdf4e43feded12392fede45d31
30005d717101715d2b013536373635342623220727363633321615140607
161615140606232227263534363332171e02333236353426260139f27756
644770572534a361769289a7686a90fb8a7e412b33251a1a107d46255a75
4faa02e51d256b4c694f678b0b74778d6c5caa432ba1717dfb892c1e2823
3208054617d17660965d>HIBBAA+Times#20New#20Roman AddT42Char 
HIBBAA+Times#20New#20Roman /CharStrings get begin
/g24 24 def
end
HIBBAA+Times#20New#20Roman /Encoding get
dup 55 /g24 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/DGXVTT+Times#20New#20Roman*1 
[32{/.notdef}rp /g1 /g2 /g3 /g4 /g5 /g6 /g7 
/g8 /g9 /g10 /g11 /g12 /g13 /g14 /g15 
/g16 /g17 /g18 /g19 /g20 /g21 /g22 /g23 
/g24 200{/.notdef}rp]
DGXVTT+Times#20New#20Roman nf
DGXVTT+Times#20New#20Roman*1 [18 0 0 -18 0 0 ]msf
490.68 261.239 mo
( )sh
DGXVTT+Times#20New#20Roman*1 [12 0 0 -12 0 0 ]msf
501.72 265.565 mo
(")sh
DGXVTS+Times#20New#20Roman*1 [18 0 0 -18 0 0 ]msf
310.086 296.519 mo
(+)sh
DGXVTT+Times#20New#20Roman*1 [18 0 0 -18 0 0 ]msf
387.36 296.519 mo
($)sh
DGXVTT+Times#20New#20Roman*1 [12 0 0 -12 0 0 ]msf
398.4 300.845 mo
(!)sh
404.4 291.125 mo
(%&')
[3.8399 3.336 0 ]xsh
DGXVTT+Times#20New#20Roman*1 [18 0 0 -18 0 0 ]msf
486.594 296.519 mo
(\()sh
DGXVTT+Times#20New#20Roman*1 [12 0 0 -12 0 0 ]msf
496.8 300.845 mo
(!\)")
[6 3 0 ]xsh
DGXVTS+Times#20New#20Roman*1 [18 0 0 -18 0 0 ]msf
310.086 325.319 mo
(,)sh
DGXVTT+Times#20New#20Roman*1 [18 0 0 -18 0 0 ]msf
387.36 325.319 mo
($)sh
DGXVTT+Times#20New#20Roman*1 [12 0 0 -12 0 0 ]msf
398.4 329.645 mo
(")sh
404.4 319.925 mo
(%&')
[3.8399 3.336 0 ]xsh
DGXVTT+Times#20New#20Roman*1 [18 0 0 -18 0 0 ]msf
486.594 325.319 mo
(\()sh
DGXVTT+Times#20New#20Roman*1 [12 0 0 -12 0 0 ]msf
496.8 329.645 mo
("\)")
[6 3 0 ]xsh
DGXVTU+Times#20New#20Roman*1 [18 0 0 -18 0 0 ]msf
305.514 354.119 mo
( )sh
392.4 354.119 mo
( )sh
490.194 354.119 mo
( )sh
DGXVTT+Times#20New#20Roman*1 [18 0 0 -18 0 0 ]msf
310.086 382.793 mo
(*)sh
387.36 382.793 mo
($)sh
DGXVTT+Times#20New#20Roman*1 [12 0 0 -12 0 0 ]msf
398.4 387.125 mo
(*)sh
404.4 377.405 mo
(%&')
[3.8399 3.336 0 ]xsh
DGXVTT+Times#20New#20Roman*1 [18 0 0 -18 0 0 ]msf
486.594 382.793 mo
(\()sh
DGXVTT+Times#20New#20Roman*1 [12 0 0 -12 0 0 ]msf
496.8 387.125 mo
(*\)7)
[6 3 0 ]xsh
DGXVTT+Times#20New#20Roman*1 [18 0 0 -18 0 0 ]msf
386.514 416.633 mo
(+)sh
DGXVTT+Times#20New#20Roman*1 [12 0 0 -12 0 0 ]msf
399.48 420.965 mo
(")sh
405.48 411.245 mo
(%&')
[3.8399 3.336 0 ]xsh
582.24 276.24 mo
617.76 276.24 li
617.76 240.96 li
582.24 240.96 li
cp
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
f
617.76 276.24 mo
756 276.24 li
756 240.96 li
617.76 240.96 li
cp
f
756 276.24 mo
813.6 276.24 li
813.6 240.96 li
756 240.96 li
cp
f
582.24 305.04 mo
617.76 305.04 li
617.76 276.24 li
582.24 276.24 li
cp
f
617.76 305.04 mo
756 305.04 li
756 276.24 li
617.76 276.24 li
cp
f
756 305.04 mo
813.6 305.04 li
813.6 276.24 li
756 276.24 li
cp
f
582.24 333.84 mo
617.76 333.84 li
617.76 305.04 li
582.24 305.04 li
cp
f
617.76 333.84 mo
756 333.84 li
756 305.04 li
617.76 305.04 li
cp
f
756 333.84 mo
813.6 333.84 li
813.6 305.04 li
756 305.04 li
cp
f
582.24 362.64 mo
617.76 362.64 li
617.76 333.84 li
582.24 333.84 li
cp
f
617.76 362.64 mo
756 362.64 li
756 333.84 li
617.76 333.84 li
cp
f
756 362.64 mo
813.6 362.64 li
813.6 333.84 li
756 333.84 li
cp
f
582.24 391.32 mo
617.76 391.32 li
617.76 362.64 li
582.24 362.64 li
cp
f
617.76 391.32 mo
756 391.32 li
756 362.64 li
617.76 362.64 li
cp
f
756 391.32 mo
813.6 391.32 li
813.6 362.64 li
756 362.64 li
cp
f
617.76 240.48 mo
617.76 391.92 li
.750271 .679713 .654902 .901945 cmyk
@
756 240.48 mo
756 391.92 li
@
581.76 276.24 mo
814.08 276.24 li
@
581.76 305.04 mo
814.08 305.04 li
@
581.76 333.84 mo
814.08 333.84 li
@
581.76 362.64 mo
814.08 362.64 li
@
582.24 240.48 mo
582.24 391.92 li
@
813.6 240.48 mo
813.6 391.92 li
@
581.76 240.96 mo
814.08 240.96 li
@
581.76 391.32 mo
814.08 391.32 li
@
DGXVTS+Times#20New#20Roman*1 [18 0 0 -18 0 0 ]msf
590.4 261.833 mo
( !)
[5.99384 0 ]xsh
636.714 261.833 mo
("#$%)
[16.0021 7.992 5.00403 0 ]xsh
673.794 261.833 mo
(&)sh
679.806 261.833 mo
('#%$\(\)#*)
[5.99384 7.99207 7.99194 5.14191 9 5.99384 7.99207 0 ]xsh
DGXVTT+Times#20New#20Roman*1 [18 0 0 -18 0 0 ]msf
776.16 261.833 mo
( )sh
DGXVTT+Times#20New#20Roman*1 [12 0 0 -12 0 0 ]msf
787.2 266.165 mo
(!)sh
DGXVTS+Times#20New#20Roman*1 [18 0 0 -18 0 0 ]msf
595.44 297.239 mo
(+)sh
DGXVTT+Times#20New#20Roman*1 [18 0 0 -18 0 0 ]msf
672.84 297.239 mo
($)sh
DGXVTT+Times#20New#20Roman*1 [12 0 0 -12 0 0 ]msf
683.88 301.565 mo
(!)sh
689.88 291.845 mo
(%&')
[3.8399 3.336 0 ]xsh
DGXVTT+Times#20New#20Roman*1 [18 0 0 -18 0 0 ]msf
772.074 297.239 mo
(\()sh
DGXVTT+Times#20New#20Roman*1 [12 0 0 -12 0 0 ]msf
782.28 301.565 mo
(!\)!)
[6 3 0 ]xsh
DGXVTS+Times#20New#20Roman*1 [18 0 0 -18 0 0 ]msf
595.44 326.039 mo
(,)sh
DGXVTT+Times#20New#20Roman*1 [18 0 0 -18 0 0 ]msf
672.84 326.039 mo
($)sh
DGXVTT+Times#20New#20Roman*1 [12 0 0 -12 0 0 ]msf
683.88 330.365 mo
(")sh
689.88 320.645 mo
(%&')
[3.8399 3.336 0 ]xsh
DGXVTT+Times#20New#20Roman*1 [18 0 0 -18 0 0 ]msf
772.074 326.039 mo
(\()sh
DGXVTT+Times#20New#20Roman*1 [12 0 0 -12 0 0 ]msf
782.28 330.365 mo
("\)!)
[6 3 0 ]xsh
DGXVTU+Times#20New#20Roman*1 [18 0 0 -18 0 0 ]msf
590.886 354.713 mo
( )sh
677.88 354.713 mo
( )sh
775.674 354.713 mo
( )sh
DGXVTT+Times#20New#20Roman*1 [18 0 0 -18 0 0 ]msf
595.44 383.513 mo
(*)sh
672.84 383.513 mo
($)sh
DGXVTT+Times#20New#20Roman*1 [12 0 0 -12 0 0 ]msf
683.88 387.845 mo
(*)sh
689.88 378.125 mo
(%&')
[3.8399 3.336 0 ]xsh
DGXVTT+Times#20New#20Roman*1 [18 0 0 -18 0 0 ]msf
772.074 383.513 mo
(\()sh
DGXVTT+Times#20New#20Roman*1 [12 0 0 -12 0 0 ]msf
782.28 387.845 mo
(*\)!)
[6 3 0 ]xsh
DGXVTT+Times#20New#20Roman*1 [18 0 0 -18 0 0 ]msf
671.886 417.353 mo
(+)sh
DGXVTT+Times#20New#20Roman*1 [12 0 0 -12 0 0 ]msf
684.84 421.685 mo
(#)sh
690.12 411.965 mo
(%&')
[3.8399 3.336 0 ]xsh
%ADOBeginSubsetFont: GFNBAA+Times#20New#20Roman Initial
ct_T42Dict begin
-0.547 -0.305 1.398 1.031
 256 array 0 1 255 {1 index exch /.notdef put} for  /GFNBAA+Times#20New#20Roman
Type42DictBegin
[<00010000000b000b000b000b6376742066e2972c000000bc000007a86670
676db56e61d90000086400000634676c7966579b6c3d00004ab800000122
68656164ded0c5e100000e9800000036686865616e03550d00000ed00000
0024686d7478cb01390e00000ef4000000086c6f63619801000000000efc
0000000c6d617870bf03540400000f08000000206e616d65b07f13a80000
0f280000315970726570c68e32360000408400000a326764697200000000
0000000000000000058e0000054c001f054c001c0394001b0000ffe10000
ffe40000ffe8fe4afffc056b0023fe6affe00313000000fc000000fc0000
000000000000002500f30120005f005500ea0032007400cf0055004b00af
013f000900f5010800260080001701540002001600b800d3005000f00023
ffbe00dd00f70035ffe9001102b6004900a901490158002e003b00860108
0023003f0039003a004e00e3013f003d010a000900710108feff004c0082
009c00c700d80015003a006d035105d800280028009f05b8005000640015
00da015b017cffc2ffd8fff40099ffff001d002d00d9011c01740446004e
007200be00dd09b50038004b006d009d0118001b003c005c0069007a00a8
00c60122fff2000d008600e3022b055200300047009100f4040104c9ffaf
ffc1ffd5002c003b003b003e004b006b009900a500b801c002210343ff8c
0041004b005f009a00a600be010a01dc031e0390ff6700250031005d006e
00b600c000d000d3010a015001bc0274027b02d7000900360048004c005c
006f00840093009500a600a800ac00b000b700bc00c00104013601370145
019403b6fd81fe3f00070019003a003b005b00b800c500e100f801160127
012c013401470149015d01bc03ed04740532053eff00ff970008000f005c
006d007000820089008b00a700c100f600f80129017aff72ff8800000000
0025003e0059006d007100720081008100bc00dd00de011401150150019c
01d6027e0404041cff7b002000390046004c004d005a0068006c00720080
008300a300ce00d100e200ed0107011f0126013f016a01e0035e03a303a7
03cc05d805f0fed8ff78ffaeffe1ffe70019002400410055005800710082
00860088009000b000bb00c200c400d000ed00f700f801150118011f012c
015e017c019801a201cc01d201fa022b026d02cf02cf02df0333039103e3
04ab04fc04fe058805e706bffed1ff4a000000010003000400170024003c
004d0056005c0067007700a800b000b800c300c600c800e900eb00f500f8
010a010c0127013501350139013f0149014d0197019801c701ee023d0250
0258026d026f029402b30300031a032a0361039603a104330440047904da
04e804fb057b058c05ab0761fe60fe99ff00ff13ff2fff47ffed00180031
003f004c006b00740078007c00840094009700b000b600b700d800da00e2
00e400e500eb00ee00ef00f600fa0106010c011101110114013b013e0145
0149014d015b0164016f0184019101b301b901d101e101e501ef02050206
02220236023b023e024102600276029a029a029d02c402ee03130327032b
0373038c03ba03c203d2040f0485051505320532054905610595069906a8
072707480762081008ccfd2afddefe23fe44fe67fe96feacff24ff41ff5c
ff61ff9effa3ffb7ffc2ffc5ffcaffddfff0000000000003000800100018
001c0023002b0030003e0046004b0052005e005e006e007a007b00830085
008a00910092009800a800af00b600cc00ce00cf00d200e700f100f200fa
01010108010b0112012601270127012e013601370138013b013e0140015b
016a017001740179018201840188018d0192019b01a001a001a001ab01b8
01bc01c001cc01da01dc01e001e0020102100214021d0229023002300243
02460269027a0284029502a302b402c102c202cf02dd02e102ec02f00310
033a03450388039903ad03bd03d403d503e303ea03f304260426046e04d1
04e00513054b057605a305b705c205f8063b065b06b806e80706071a0724
075007a907d407ff082700f6012600f100df000000000000000000000000
038402af02f301b80205017a04910491049e019f0425049e019f049e019f
027a005101ac02610319033b021c033b01ee01880278020a01ee033b029f
002400240261019e015e0171004401490284009902840099028400250041
00450298020501c9024904440188044400000000023005d30415035d0181
0023016e003504c9005b059604910025026202dd01d00434030a0319031e
03c1049e05e8035c00000282ffef040d03ce0209010c01f6025303a202df
02d0000a00d6008200000032010901a201af01770204027a019e02eb019b
01ec024e0326045b03ee03c3042600b703620031004f0027ffee01240096
036700d703750291032603260041004501d7007402ff02a50216029f017a
0100031c005000b7012b016800f9003101a8013a00a801cc00f301250202
0021007301c70603021b0142010501e1012403350272018c044301e50282
010f02fe01ee034a02c50210024e022a02a501cf005f00b1026603b20358
0115008e015d02a500d1fee201b0010b015a0395005900f70783031b008b
045d00a101440100009400b4febf03c600e803ce017303e6012e02220495
00390023033b01b8000003f00140015303b401a805ee061801c6007d00cd
00d1037c008500bd00ccfc47fcb1008402a7fccb046402ba0167032b0070
0136000001320068030c0155001bfe6fffc60249013102f1fe79feb4fcf2
ff4203adfc0efc61032a00c3009100a10077004c0002015e008400860023
005d004b010a01b80086ffc500a80072008800590028009901350015003d
0056007a00f801d600090007000f00e2001700bc016a00ed0274005b0136
000000ab0080005005a50090fe40013a004800db018b00b300480420040e
022b0457008c00820082002203d703f1045840425554403f3e3d3c3b3a39
38373534333231302f2e2d2c2b2a292827262524232221201f1e1d1c1b1a
191817161514131211100f0e0d0c0b0a090807060504030201002c452346
6020b02660b004262348482d2c452346236120b02661b004262348482d2c
45234660b0206120b04660b004262348482d2c4523462361b0206020b026
61b02061b004262348482d2c45234660b0406120b06660b004262348482d
2c4523462361b0406020b02661b04061b004262348482d2c0110203c003c
2d2c20452320b0cd442320b8015a51582320b08d44235920b0ed51582320
b04d44235920b09051582320b00d44235921212d2c20204518684420b001
602045b04676688a4560442d2c01b10b0a432343650a2d2c00b10a0b4323
430b2d2c00b0172370b101173e01b0172370b10217453ab10200080d2d2c
45b01a234445b01923442d2c2045b00325456164b050515845441b212159
2d2cb00143632362b0002342b00f2b2d2c2045b0004360442d2c01b00643
b00743650a2d2c2069b04061b0008b20b12cc08a8cb8100062602b0c6423
64615c58b00361592d2c45b0112bb0172344b0177ae4182d2c45b0112bb0
1723442d2cb01243588745b0112bb0172344b0177ae41b038a45186920b0
1723448a8a8720b0a05158b0112bb0172344b0177ae41b21b0177ae45959
182d2c2d2cb0022546608a46b040618c482d2c01182f2d2c20b0032545b0
19234445b01a23444565234520b00325606a20b009234223688a6a606120
b01a8ab000527921b21a1a40b9ffe0001a45208a54582321b03f1b235961
441cb114008a5279b31940201945208a54582321b03f1b235961442d2cb1
10114323430b2d2cb10e0f4323430b2d2cb10c0d4323430b2d2cb10c0d43
2343650b2d2cb10e0f432343650b2d2cb11011432343650b2d2c4b525845
441b2121592d2c0120b003252349b04060b0206320b000525823b0022538
23b002256538008a63381b212121212159012d2c4bb06451584569b00943
608a103a1b212110592d2c01b005251023208af500b0016023edec2d2c01
b005251023208af500b0016123edec2d2c01b0062510f500edec2d2c20b0
01600110203c003c2d2c20b001610110203c003c2d2cb02b2bb02a2a2d2c
00b00743b006430b2d2c3eb02a2a2d2c352d2c76b802df23701020b802df
4520b0005058b00161593a2f182d2c21210c6423648bb84000622d2c21b0
8051580c6423648bb82000621bb200402f2b59b002602d2c21b0c051580c
6423648bb81555621bb200802f2b59b002602d2c0c6423648bb840006260
23212d2cb4000100000015b00826b00826b00826b008260f10161345683a
b001162d2cb4000100000015b00826b00826b00826b008260f1016134568
653ab001162d2c4b53234b515a5820458a60441b2121592d2c4b54582045
8a60441b2121592d2c4b53234b515a58381b2121592d2c4b5458381b2121
592d2cb0134358031b02592d2cb0134358021b03592d2c4b54b012435c5a
58381b2121592d2cb012435c580cb00425b00425060c6423646164b80708
5158b00425b00425012046b01060482046b0106048590a21211b2121592d
2cb012435c580cb00425b00425060c6423646164b807085158b00425b004
25012046b8fff060482046b8fff06048590a21211b2121592d2c4b53234b
515a58b03a2b1b2121592d2c4b53234b515a58b03b2b1b2121592d2c4b53
234b515ab012435c5a58381b2121592d2c0c8a034b54b00426024b545a8a
8a0ab012435c5a58381b2121592d2c462346608a8a462320468a608a61b8
ff8062232010238ab903bc03bc8a70456020b0005058b00161b8ffba8b1b
b0468c59b0106068013a2d2cb1020042b123018851b1400188535a58b910
000020885458b202010243604259b12401885158b920000040885458b202
0202436042b12401885458b2022002436042004b014b5258b20208024360
42591bb940000080885458b202040243604259b94000008063b801008854
58b202080243604259b94000010063b80200885458b202100243604259b1
2601885158b94000020063b80400885458b202400243604259b940000400
63b80800885458b202800243604259b12801885158b94000080063b81000
885458ba000201000002436042595959595959592d2cb0024354584b5323
4b515a58381b2121591b21212121592d000100000006e666664745255f0f
3cf50819080000000000a31fbca400000000d19de404fb9ffd8c0b350842
000300090001000100000000000100000721fe4500570ac7fb9ffa460b35
0018000700000000000000000000000000020639011c080000af00000000
000000760000012200010000000200f2003c0091000600020010002f0056
000004a50209000400020000005303ea0000000300000000021a00000000
000300000001001e021a0000000300000002001602c20000000300000003
006002900000000300000004003602a20000000300000005001802f00000
0003000000060038030800000003000000070076021a0000000300000008
0030034e00000003000000090086055e000000030000000d0d1805e40001
000000000000010d12fc0001000000000001000f14090001000000000002
000b145d0001000000000003003014440001000000000004001b144d0001
000000000005000c14740001000000000006001c14800001000000000007
003b140900010000000000080018130300010000000000090043149c0001
00000000000d068c14df0003000104030002001e1b8b0003000104030004
003e1b6b0003000104050002001a1bc90003000104050004003a1ba90003
00010406000200141c03000300010406000400341be30003000104070002
00161c37000300010407000400361c170003000104080002001a1c6d0003
000104080004003a1c4d0003000104090000021e03400003000104090001
001e021a0003000104090002001602c20003000104090003006002900003
000104090004003602a20003000104090005001802f00003000104090006
0038030800030001040900070076021a00030001040900080030034e0003
0001040900090086055e000300010409000d0d2a1c8700030001040a0002
001e29d100030001040a0004003e29b100030001040b000200242a0f0003
0001040b0004004429ef00030001040c0002001a2a5300030001040c0004
003a2a3300030001040e0002001a2a8d00030001040e0004003a2a6d0003
00010410000200222ac7000300010410000400422aa70003000104130002
00162b09000300010413000400362ae90003000104140002001c2b3f0003
000104140004003c2b1f000300010415000200242b7b0003000104150004
00442b5b0003000104160002001e2bbf0003000104160004003e2b9f0003
00010419000200222bfd000300010419000400422bdd00030001041b0002
001a2c3f00030001041b0004003a2c1f00030001041d000200142c790003
0001041d000400342c5900030001041f000200182cad00030001041f0004
00382c8d0003000104240002001c2ce50003000104240004003c2cc50003
0001042a000200182d2100030001042a000400382d0100030001042d0002
00162d5900030001042d000400362d3900030001080a0002001e29d10003
0001080a0004003e29b10003000108160002001e2bbf0003000108160004
003e2b9f000300010c0a0002001e29d1000300010c0a0004003e29b10003
00010c0c0002001a2a53000300010c0c0004003a2a3300a9002000320030
0031003500200054006800650020004d006f006e006f0074007900700065
00200043006f00720070006f0072006100740069006f006e002e00200041
006c006c0020005200690067006800740073002000520065007300650072
007600650064002e0020000d000d0048006500620072006500770020004f
00700065006e00540079007000650020004c00610079006f007500740020
006c006f00670069006300200063006f0070007900720069006700680074
002000a9002000320030003000330020002600200032003000300037002c
002000520061006c00700068002000480061006e0063006f0063006b0020
00260020004a006f0068006e00200048007500640073006f006e002e0020
00540068006900730020006c00610079006f007500740020006c006f0067
0069006300200066006f00720020004200690062006c006900630061006c
00200048006500620072006500770020006900730020006f00700065006e
00200073006f007500720063006500200073006f00660074007700610072
006500200075006e00640065007200200074006800650020004d00490054
0020004c006900630065006e00730065003b002000730065006500200065
006d0062006500640064006500640020006c006900630065006e00730065
0020006400650073006300720069007000740069006f006e00200066006f
0072002000640065007400610069006c0073002e00540069006d00650073
0020004e0065007700200052006f006d0061006e00200069007300200061
002000740072006100640065006d00610072006b0020006f006600200054
006800650020004d006f006e006f007400790070006500200043006f0072
0070006f0072006100740069006f006e002e004d006f006e006f00740079
00700065003a00540069006d006500730020004e0065007700200052006f
006d0061006e00200042006f006c00640020004900740061006c00690063
00200028004d006900630072006f0073006f006600740029005600650072
00730069006f006e00200036002e0039003000540069006d00650073004e
006500770052006f006d0061006e00500053002d0042006f006c00640049
00740061006c00690063004d005400a90020003200300031003500200054
006800650020004d006f006e006f007400790070006500200043006f0072
0070006f0072006100740069006f006e002e00200041006c006c00200052
00690067006800740073002000520065007300650072007600650064002e
0020000d000a000d000a0048006500620072006500770020004f00700065
006e00540079007000650020004c00610079006f007500740020006c006f
00670069006300200063006f0070007900720069006700680074002000a9
002000320030003000330020002600200032003000300037002c00200052
0061006c00700068002000480061006e0063006f0063006b002000260020
004a006f0068006e00200048007500640073006f006e002e002000540068
006900730020006c00610079006f007500740020006c006f006700690063
00200066006f00720020004200690062006c006900630061006c00200048
006500620072006500770020006900730020006f00700065006e00200073
006f007500720063006500200073006f0066007400770061007200650020
0075006e00640065007200200074006800650020004d004900540020004c
006900630065006e00730065003b002000730065006500200065006d0062
006500640064006500640020006c006900630065006e0073006500200064
00650073006300720069007000740069006f006e00200066006f00720020
00640065007400610069006c0073002e004d006f006e006f007400790070
006500200054007900700065002000440072006100770069006e00670020
004f006600660069006300650020002d0020005300740061006e006c0065
00790020004d006f007200690073006f006e002c00200056006900630074
006f00720020004c0061007200640065006e007400200031003900330032
0059006f00750020006d0061007900200075007300650020007400680069
007300200066006f006e00740020006100730020007000650072006d0069
00740074006500640020006200790020007400680065002000450055004c
004100200066006f00720020007400680065002000700072006f00640075
0063007400200069006e0020007700680069006300680020007400680069
007300200066006f006e007400200069007300200069006e0063006c0075
00640065006400200074006f00200064006900730070006c006100790020
0061006e00640020007000720069006e007400200063006f006e00740065
006e0074002e002000200059006f00750020006d006100790020006f006e
006c0079002000280069002900200065006d006200650064002000740068
0069007300200066006f006e007400200069006e00200063006f006e0074
0065006e00740020006100730020007000650072006d0069007400740065
0064002000620079002000740068006500200065006d0062006500640064
0069006e00670020007200650073007400720069006300740069006f006e
007300200069006e0063006c007500640065006400200069006e00200074
00680069007300200066006f006e0074003b00200061006e006400200028
006900690029002000740065006d0070006f0072006100720069006c0079
00200064006f0077006e006c006f00610064002000740068006900730020
0066006f006e007400200074006f002000610020007000720069006e0074
006500720020006f00720020006f00740068006500720020006f00750074
007000750074002000640065007600690063006500200074006f00200068
0065006c00700020007000720069006e007400200063006f006e00740065
006e0074002e000d000d00540068006500200066006f006c006c006f0077
0069006e00670020006c006900630065006e00730065002c002000620061
0073006500640020006f006e00200074006800650020004d004900540020
006c006900630065006e00730065002000280068007400740070003a002f
002f0065006e002e00770069006b006900700065006400690061002e006f
00720067002f00770069006b0069002f004d00490054005f004c00690063
0065006e007300650029002c0020006100700070006c0069006500730020
0074006f00200074006800650020004f00700065006e0054007900700065
0020004c00610079006f007500740020006c006f00670069006300200066
006f00720020004200690062006c006900630061006c0020004800650062
0072006500770020201c004c00610079006f007500740020004c006f0067
00690063201d0020006100730020006a006f0069006e0074006c00790020
0064006500760065006c006f007000650064002000620079002000520061
006c00700068002000480061006e0063006f0063006b00200061006e0064
0020004a006f0068006e00200048007500640073006f006e002e0020000d
000d005000650072006d0069007300730069006f006e0020006900730020
0068006500720065006200790020006700720061006e007400650064002c
002000660072006500650020006f00660020006300680061007200670065
002c00200074006f00200061006e007900200070006500720073006f006e
0020006f0062007400610069006e0069006e00670020006100200063006f
007000790020006f006600200074006800650020004f00700065006e0054
0079007000650020004c00610079006f007500740020006c006f00670069
006300200066006f00720020004200690062006c006900630061006c0020
00480065006200720065007700200061006e00640020006100730073006f
00630069006100740065006400200064006f00630075006d0065006e0074
006100740069006f006e002000660069006c006500730020002800740068
00650020201c004c00610079006f007500740020004c006f006700690063
00200053006f006600740077006100720065201d0029002c00200074006f
0020006400650061006c00200069006e00200074006800650020004c0061
0079006f007500740020004c006f00670069006300200053006f00660074
007700610072006500200077006900740068006f00750074002000720065
0073007400720069006300740069006f006e002c00200069006e0063006c
007500640069006e006700200077006900740068006f007500740020006c
0069006d00690074006100740069006f006e002000740068006500200072
0069006700680074007300200074006f0020007500730065002c00200063
006f00700079002c0020006d006f0064006900660079002c0020006d0065
007200670065002c0020007000750062006c006900730068002c00200064
006900730074007200690062007500740065002c0020007300750062006c
006900630065006e00730065002c00200061006e0064002f006f00720020
00730065006c006c00200063006f00700069006500730020006f00660020
0074006800650020004c00610079006f007500740020004c006f00670069
006300200053006f006600740077006100720065002c00200061006e0064
00200074006f0020007000650072006d0069007400200070006500720073
006f006e007300200074006f002000770068006f006d0020007400680065
0020004c00610079006f007500740020004c006f00670069006300200053
006f0066007400770061007200650020006900730020006600750072006e
0069007300680065006400200074006f00200064006f00200073006f002c
0020007300750062006a00650063007400200074006f0020007400680065
00200066006f006c006c006f00770069006e006700200063006f006e0064
006900740069006f006e0073003a000d000d005400680065002000610062
006f0076006500200063006f00700079007200690067006800740020006e
006f007400690063006500200061006e0064002000740068006900730020
007000650072006d0069007300730069006f006e0020006e006f00740069
006300650020007300680061006c006c00200062006500200069006e0063
006c007500640065006400200069006e00200061006c006c00200063006f
00700069006500730020006f00720020007300750062007300740061006e
007400690061006c00200070006f007200740069006f006e00730020006f
006600200074006800650020004c00610079006f007500740020004c006f
00670069006300200053006f006600740077006100720065002e000d000d
00540048004500200053004f004600540057004100520045002000490053
002000500052004f00560049004400450044002000270041005300200049
00530027002c00200057004900540048004f005500540020005700410052
00520041004e005400590020004f004600200041004e00590020004b0049
004e0044002c002000450058005000520045005300530020004f00520020
0049004d0050004c004900450044002c00200049004e0043004c00550044
0049004e004700200042005500540020004e004f00540020004c0049004d
004900540045004400200054004f00200054004800450020005700410052
00520041004e00540049004500530020004f00460020004d004500520043
00480041004e0054004100420049004c004900540059002c002000460049
0054004e00450053005300200046004f0052002000410020005000410052
0054004900430055004c0041005200200050005500520050004f00530045
00200041004e00440020004e004f004e0049004e004600520049004e0047
0045004d0045004e0054002e00200049004e0020004e004f002000450056
0045004e00540020005300480041004c004c002000540048004500200041
005500540048004f005200530020004f005200200043004f005000590052
004900470048005400200048004f004c0044004500520053002000420045
0020004c004900410042004c004500200046004f005200200041004e0059
00200043004c00410049004d002c002000440041004d0041004700450053
0020004f00520020004f00540048004500520020004c0049004100420049
004c004900540059002c0020005700480045005400480045005200200049
004e00200041004e00200041004300540049004f004e0020004f00460020
0043004f004e00540052004100430054002c00200054004f005200540020
004f00520020004f00540048004500520057004900530045002c00200041
0052004900530049004e0047002000460052004f004d002c0020004f0055
00540020004f00460020004f005200200049004e00200043004f004e004e
0045004300540049004f004e002000570049005400480020005400480045
00200053004f0046005400570041005200450020004f0052002000540048
004500200055005300450020004f00520020004f00540048004500520020
004400450041004c0049004e0047005300200049004e0020005400480045
00200053004f004600540057004100520045002e000da920323031352054
6865204d6f6e6f7479706520436f72706f726174696f6e2e20416c6c2052
69676874732052657365727665642e200d0d486562726577204f70656e54
797065204c61796f7574206c6f67696320636f7079726967687420a92032
303033202620323030372c2052616c70682048616e636f636b2026204a6f
686e20487564736f6e2e2054686973206c61796f7574206c6f6769632066
6f72204269626c6963616c20486562726577206973206f70656e20736f75
72636520736f66747761726520756e64657220746865204d4954204c6963
656e73653b2073656520656d626564646564206c6963656e736520646573
6372697074696f6e20666f722064657461696c732e54696d6573204e6577
20526f6d616e20697320612074726164656d61726b206f6620546865204d
6f6e6f7479706520436f72706f726174696f6e2e4d6f6e6f747970653a54
696d6573204e657720526f6d616e20426f6c64204974616c696320284d69
63726f736f66742956657273696f6e20362e393054696d65734e6577526f
6d616e50532d426f6c644974616c69634d544d6f6e6f7479706520547970
652044726177696e67204f6666696365202d205374616e6c6579204d6f72
69736f6e2c20566963746f72204c617264656e742031393332596f75206d
617920757365207468697320666f6e74206173207065726d697474656420
6279207468652045554c4120666f72207468652070726f6475637420696e
207768696368207468697320666f6e7420697320696e636c756465642074
6f20646973706c617920616e64207072696e7420636f6e74656e742e2020
596f75206d6179206f6e6c792028692920656d626564207468697320666f
6e7420696e20636f6e74656e74206173207065726d697474656420627920
74686520656d62656464696e67207265737472696374696f6e7320696e63
6c7564656420696e207468697320666f6e743b20616e6420286969292074
656d706f726172696c7920646f776e6c6f6164207468697320666f6e7420
746f2061207072696e746572206f72206f74686572206f75747075742064
657669636520746f2068656c70207072696e7420636f6e74656e742e0d0d
54686520666f6c6c6f77696e67206c6963656e73652c206261736564206f
6e20746865204d4954206c6963656e73652028687474703a2f2f656e2e77
696b6970656469612e6f72672f77696b692f4d49545f4c6963656e736529
2c206170706c69657320746f20746865204f70656e54797065204c61796f
7574206c6f67696320666f72204269626c6963616c2048656272657720d2
4c61796f7574204c6f676963d3206173206a6f696e746c7920646576656c
6f7065642062792052616c70682048616e636f636b20616e64204a6f686e
20487564736f6e2e200d0d5065726d697373696f6e206973206865726562
79206772616e7465642c2066726565206f66206368617267652c20746f20
616e7920706572736f6e206f627461696e696e67206120636f7079206f66
20746865204f70656e54797065204c61796f7574206c6f67696320666f72
204269626c6963616c2048656272657720616e64206173736f6369617465
6420646f63756d656e746174696f6e2066696c6573202874686520d24c61
796f7574204c6f67696320536f667477617265d3292c20746f206465616c
20696e20746865204c61796f7574204c6f67696320536f66747761726520
776974686f7574207265737472696374696f6e2c20696e636c7564696e67
20776974686f7574206c696d69746174696f6e2074686520726967687473
20746f207573652c20636f70792c206d6f646966792c206d657267652c20
7075626c6973682c20646973747269627574652c207375626c6963656e73
652c20616e642f6f722073656c6c20636f70696573206f6620746865204c
61796f7574204c6f67696320536f6674776172652c20616e6420746f2070
65726d697420706572736f6e7320746f2077686f6d20746865204c61796f
7574204c6f67696320536f667477617265206973206675726e6973686564
20746f20646f20736f2c207375626a65637420746f2074686520666f6c6c
6f77696e6720636f6e646974696f6e733a0d0d5468652061626f76652063
6f70797269676874206e6f7469636520616e642074686973207065726d69
7373696f6e206e6f74696365207368616c6c20626520696e636c75646564
20696e20616c6c20636f70696573206f72207375627374616e7469616c20
706f7274696f6e73206f6620746865204c61796f7574204c6f6769632053
6f6674776172652e0d0d54484520534f4654574152452049532050524f56
4944454420274153204953272c20574954484f55542057415252414e5459
204f4620414e59204b494e442c2045585052455353204f5220494d504c49
45442c20494e434c5544494e4720425554204e4f54204c494d4954454420
544f205448452057415252414e54494553204f46204d45524348414e5441
42494c4954592c204649544e45535320464f52204120504152544943554c
415220505552504f534520414e44204e4f4e494e4652494e47454d454e54
2e20494e204e4f204556454e54205348414c4c2054484520415554484f52
53204f5220434f5059524947485420484f4c44455253204245204c494142
4c4520464f5220414e5920434c41494d2c2044414d41474553204f52204f
54484552204c494142494c4954592c205748455448455220494e20414e20
414354494f4e204f4620434f4e54524143542c20544f5254204f52204f54
484552574953452c2041524953494e472046524f4d2c204f5554204f4620
4f5220494e20434f4e4e454354494f4e20574954482054484520534f4654
57415245204f522054484520555345204f52204f54484552204445414c49
4e475320494e2054484520534f4654574152452e0d00540069006d006500
730020004e0065007700200052006f006d0061006e0020004e0065006700
720065007400610020006300750072007300690076006100540069006d00
6500730020004e0065007700200052006f006d0061006e00200074007501
0d006e00e90020006b00750072007a00ed0076006100540069006d006500
730020004e0065007700200052006f006d0061006e002000660065006400
20006b0075007200730069007600540069006d006500730020004e006500
7700200052006f006d0061006e002000460065007400740020004b007500
7200730069007600540069006d006500730020004e006500770020005200
6f006d0061006e0020038803bd03c403bf03bd03b1002003a003bb03ac03
b303b903b10059006f00750020006d006100790020007500730065002000
7400680069007300200066006f006e007400200061007300200070006500
72006d006900740074006500640020006200790020007400680065002000
450055004c004100200066006f0072002000740068006500200070007200
6f006400750063007400200069006e002000770068006900630068002000
7400680069007300200066006f006e007400200069007300200069006e00
63006c007500640065006400200074006f00200064006900730070006c00
61007900200061006e00640020007000720069006e007400200063006f00
6e00740065006e0074002e002000200059006f00750020006d0061007900
20006f006e006c0079002000280069002900200065006d00620065006400
20007400680069007300200066006f006e007400200069006e0020006300
6f006e00740065006e00740020006100730020007000650072006d006900
74007400650064002000620079002000740068006500200065006d006200
65006400640069006e006700200072006500730074007200690063007400
69006f006e007300200069006e0063006c00750064006500640020006900
6e0020007400680069007300200066006f006e0074003b00200061006e00
6400200028006900690029002000740065006d0070006f00720061007200
69006c007900200064006f0077006e006c006f0061006400200074006800
69007300200066006f006e007400200074006f0020006100200070007200
69006e0074006500720020006f00720020006f0074006800650072002000
6f0075007400700075007400200064006500760069006300650020007400
6f002000680065006c00700020007000720069006e007400200063006f00
6e00740065006e0074002e000d000a000d000a0054006800650020006600
6f006c006c006f00770069006e00670020006c006900630065006e007300
65002c0020006200610073006500640020006f006e002000740068006500
20004d004900540020006c006900630065006e0073006500200028006800
7400740070003a002f002f0065006e002e00770069006b00690070006500
6400690061002e006f00720067002f00770069006b0069002f004d004900
54005f004c006900630065006e007300650029002c002000610070007000
6c00690065007300200074006f00200074006800650020004f0070006500
6e00540079007000650020004c00610079006f007500740020006c006f00
670069006300200066006f00720020004200690062006c00690063006100
6c00200048006500620072006500770020201c004c00610079006f007500
740020004c006f006700690063201d0020006100730020006a006f006900
6e0074006c007900200064006500760065006c006f007000650064002000
620079002000520061006c00700068002000480061006e0063006f006300
6b00200061006e00640020004a006f0068006e0020004800750064007300
6f006e002e0020000d000a000d000a005000650072006d00690073007300
69006f006e00200069007300200068006500720065006200790020006700
720061006e007400650064002c002000660072006500650020006f006600
20006300680061007200670065002c00200074006f00200061006e007900
200070006500720073006f006e0020006f0062007400610069006e006900
6e00670020006100200063006f007000790020006f006600200074006800
650020004f00700065006e00540079007000650020004c00610079006f00
7500740020006c006f00670069006300200066006f007200200042006900
62006c006900630061006c00200048006500620072006500770020006100
6e00640020006100730073006f0063006900610074006500640020006400
6f00630075006d0065006e0074006100740069006f006e00200066006900
6c00650073002000280074006800650020201c004c00610079006f007500
740020004c006f00670069006300200053006f0066007400770061007200
65201d0029002c00200074006f0020006400650061006c00200069006e00
200074006800650020004c00610079006f007500740020004c006f006700
69006300200053006f006600740077006100720065002000770069007400
68006f007500740020007200650073007400720069006300740069006f00
6e002c00200069006e0063006c007500640069006e006700200077006900
740068006f007500740020006c0069006d00690074006100740069006f00
6e0020007400680065002000720069006700680074007300200074006f00
20007500730065002c00200063006f00700079002c0020006d006f006400
6900660079002c0020006d0065007200670065002c002000700075006200
6c006900730068002c002000640069007300740072006900620075007400
65002c0020007300750062006c006900630065006e00730065002c002000
61006e0064002f006f0072002000730065006c006c00200063006f007000
69006500730020006f006600200074006800650020004c00610079006f00
7500740020004c006f00670069006300200053006f006600740077006100
720065002c00200061006e006400200074006f0020007000650072006d00
69007400200070006500720073006f006e007300200074006f0020007700
68006f006d00200074006800650020004c00610079006f00750074002000
4c006f00670069006300200053006f006600740077006100720065002000
6900730020006600750072006e0069007300680065006400200074006f00
200064006f00200073006f002c0020007300750062006a00650063007400
200074006f002000740068006500200066006f006c006c006f0077006900
6e006700200063006f006e0064006900740069006f006e0073003a000d00
0a000d000a005400680065002000610062006f0076006500200063006f00
700079007200690067006800740020006e006f0074006900630065002000
61006e0064002000740068006900730020007000650072006d0069007300
730069006f006e0020006e006f0074006900630065002000730068006100
6c006c00200062006500200069006e0063006c0075006400650064002000
69006e00200061006c006c00200063006f00700069006500730020006f00
720020007300750062007300740061006e007400690061006c0020007000
6f007200740069006f006e00730020006f00660020007400680065002000
4c00610079006f007500740020004c006f00670069006300200053006f00
6600740077006100720065002e000d000a000d000a005400480045002000
53004f004600540057004100520045002000490053002000500052004f00
56004900440045004400200027004100530020004900530027002c002000
57004900540048004f00550054002000570041005200520041004e005400
590020004f004600200041004e00590020004b0049004e0044002c002000
450058005000520045005300530020004f005200200049004d0050004c00
4900450044002c00200049004e0043004c005500440049004e0047002000
42005500540020004e004f00540020004c0049004d004900540045004400
200054004f0020005400480045002000570041005200520041004e005400
49004500530020004f00460020004d00450052004300480041004e005400
4100420049004c004900540059002c0020004600490054004e0045005300
5300200046004f0052002000410020005000410052005400490043005500
4c0041005200200050005500520050004f0053004500200041004e004400
20004e004f004e0049004e004600520049004e00470045004d0045004e00
54002e00200049004e0020004e004f0020004500560045004e0054002000
5300480041004c004c002000540048004500200041005500540048004f00
5200530020004f005200200043004f005000590052004900470048005400
200048004f004c00440045005200530020004200450020004c0049004100
42004c004500200046004f005200200041004e005900200043004c004100
49004d002c002000440041004d00410047004500530020004f0052002000
4f00540048004500520020004c0049004100420049004c00490054005900
2c0020005700480045005400480045005200200049004e00200041004e00
200041004300540049004f004e0020004f004600200043004f004e005400
52004100430054002c00200054004f005200540020004f00520020004f00
540048004500520057004900530045002c00200041005200490053004900
4e0047002000460052004f004d002c0020004f005500540020004f004600
20004f005200200049004e00200043004f004e004e004500430054004900
4f004e00200057004900540048002000540048004500200053004f004600
5400570041005200450020004f0052002000540048004500200055005300
450020004f00520020004f00540048004500520020004400450041004c00
49004e0047005300200049004e002000540048004500200053004f004600
540057004100520045002e000d000a00540069006d006500730020004e00
65007700200052006f006d0061006e0020004e0065006700720069007400
610020004300750072007300690076006100540069006d00650073002000
4e0065007700200052006f006d0061006e0020004c006900680061007600
6f0069007400750020004b00750072007300690076006f00690054006900
6d006500730020004e0065007700200052006f006d0061006e0020004700
72006100730020004900740061006c006900710075006500540069006d00
6500730020004e0065007700200052006f006d0061006e0020004600e900
6c006b00f6007600e90072002000640151006c007400540069006d006500
730020004e0065007700200052006f006d0061006e002000470072006100
730073006500740074006f00200043006f0072007300690076006f005400
69006d006500730020004e0065007700200052006f006d0061006e002000
56006500740020004300750072007300690065006600540069006d006500
730020004e0065007700200052006f006d0061006e002000480061006c00
760066006500740020004b0075007200730069007600540069006d006500
730020004e0065007700200052006f006d0061006e00200050006f006700
72007500620069006f006e00610020006b00750072007300790077006100
540069006d006500730020004e0065007700200052006f006d0061006e00
20004e00650067007200690074006f00200049007400e1006c0069006300
6f00540069006d006500730020004e0065007700200052006f006d006100
6e0020041f043e043b0443043604380440043d044b04390020041a044304
4004410438043200540069006d006500730020004e006500770020005200
6f006d0061006e002000540075010d006e00e10020006b00750072007a00
ed0076006100540069006d006500730020004e0065007700200052006f00
6d0061006e00200046006500740020004b00750072007300690076005400
69006d006500730020004e0065007700200052006f006d0061006e002000
4b0061006c0131006e0020013000740061006c0069006b00540069006d00
6500730020004e0065007700200052006f006d0061006e0020004b007200
650070006b006f00200070006f016100650076006e006f00540069006d00
6500730020004e0065007700200052006f006d0061006e0020006e006700
68006900ea006e00670020011100e20323006d00540069006d0065007300
20004e0065007700200052006f006d0061006e0020004c006f0064006900
2000650074007a0061006e0061000000410c005403d302c9001d001f03d3
03d303d203d1003c001f03d1b2061d1fb903ca03c9b2351f00411503c200
3003c2004003c200a003c200b003c20005008003c0009f03c000af03c000
cf03c00004ffc003c0b345453240b803c0b32b2e3240b803c0b2282932b9
ffc003c0b21a2632bd03c002c80027001fffc003beb2161b32b9ffc003bd
b2424232b9ffc003bdb2363832b9ffc003bdb32a2d32df410a03bd00ef03
bd000203bd03be0028001fffc003beb3282e32f0b803beb5019006900702
b9ff8002c8b2313340b802c8b31c333210411b02c8006002c8007002c800
03000f02c800af02c8000200b002c800e002c80002005f02c800a002c800
02002f02c8003f02c8004f02c840a8030100000340cd383b32404d383b32
a41fb41fc01fd01fe41f05501f641f741f841f04041f141f241f341f441f
05e41ff41f02ab1fbb1fcb1f03cfcddbcd028bcd9bcdafcdbfcd04cdcdcd
4ddb4d028b4d9b4dad4dbd4d044d4d377f047f05027f027f03020f0301cf
03df03ef03ff03048f039f03af03bf03044f035f036f037f03049f02af02
bf02cf02049f03af03bf03cf03045f036f037f038f03041f032f033f034f
03047f411e03660001006f03660001005f03660001004f03660001003f03
660001002f03660001001f03660001000f0366000100ff0366000100ef03
6600010366b221370f412402dd0001005f02dd009f02dd00df02dd000300
2f02dd003f02dd006f02dd0003009f02c900df02c90002000f02c9001f02
c9003f02c9005f02c9000402dd02dd02c902c902c802c840140100010100
09010200080017170000001211084041110286019e003f000d013d003f00
0d0116003f000d026f0083000d02170083000d0174b7830df3830d76830d
410d02350024000d02180024000d02030024000d01610024000d01134017
240da6240d95240d82240d6f240d5b240d46240d22240d410d0249001e00
0d020e001e000d01c1001e000d01a3001e000d0178401d1e0df61e0df11e
0de21e0ddd1e0dce1e0d751e0d701e0d651e0d521e0dbb02140037000d01
a0400b370dfb370d2d370d1d370db80215b40f440f0009bb02150044000d
023cb24d1d1fb8023ab24d1f1fb80237b24d2a1fbc0232004d0201001f02
2eb21f931f4109022c001f0125001f022b001f0156001f022ab21f931f41
0d022801400079001f021f016d0156001f021e00330401001f021db233e4
1fb8021bb233411fb80216b2212d1fb801c3b24d1e1fb801bfb24d931fb8
01beb24dcd1fbc01bb004d0201001f01b7b21f671f410d01b60140008900
1f01b200360401001f01b10036019a001f01b0b236bb1fb801afb236ab1f
410901ad016d0067001f01ac016d0072001f01a6b2212c1fb801a5b22135
1fb801a4b2213b1fb801a2b2215e1fbc01a100350201001f017bb24d931f
bc0179004d0401001f0176b24dcd1f41150175001f0125001f0173014000
6c001f01700036019a001f016f00360125001f016b00330401001f0169b2
33811f4109016600210125001f0163003b0125001f0147b24d221f410d01
43001f0101001f013b003302ab001f013a00330101001f0139b233341fb8
0136b2212e1fbc013300210401001f0132b23bab1fbc011f01400081001f
0119b2212d1fb80117b221471fb80111b235cd1fb80108b24d791fb80106
b21fab1fb80105b236721fb80100b721471ff51fe41ff4b9014008014013
1fef332c1fee212e1fed214c1fe04dcd1fdf4db80101b21fdc1fb80125b5
1fdb1fcd1fdab901400801b61fd936891fd621b80156b21fd53bb80156b2
1fcd4db80156b21fcc4dbb0101001f00ca0140b29e1fc9b9016d0156b21f
c733b80801400b1fc2333b1fc133381fbe21b80125b21fbb3bbb0801001f
00b3016db29e1fa7b80140b76c1fa321cd1fa235b8019a400f1fa13bab1f
99215e1f8c35e41f841fb80401b61f8121381f7f21b80125b61f7b334c1f
7935b8019ab61f714d271f6e3bb80101400f1f664d4a1f6321891f603352
1f5a3bbb019a001f0058016db2721f57b9016d0801b51f55212e1f4fb801
40b76c1f4c369e1f4b35b80401b21f493bb80201400b1f483bcd1f45212a
1f433bb8012540161f424d521f414dcd1f4033891f39366c1f2e21301f2c
b80140b2791f2bb901400401b61f2833e41f2735b8019ab21f5537bc0257
000701d600070187402e07de07a8079e0756073e07340730072907260725
0720071408120810080e080c080a080808060804080208000814b8ffe040
2c0000010014061000000100060400000100041000000100100200000100
0200000001000002010802004a009fbd028600af028600bf02860003b013
034b024b5342b0372b4bb807ff52b0382b4bb007505b58b101018e59014b
b0c063004b6220b0f65323b8010a515ab005234201b0124b004b544218b0
382bb00288b801005458b801ffb101018e851bb0124358b900010139858d
1bb90001013c858d595901b0372b730016763f183f123e113946443e1139
46443e113946443e113946443e11394660443e11394660442b2b2b2b2b2b
2b2b2b2b2b182b2b2b2b2b2b2b2b2b2b2b2b2b2b182b1db0964b5358b0aa
1d59b0324b5358b0ff1d594bb02753205c58b9028802864544b902870286
45445958b901240288455258b9028801244459594bb03053205c58b9016d
02884544b90288028845445958b90162016d455258b9016d01624459594b
b04353205c58b9001f02874544b9004d028745445958b9025e001f455258
b9001f025e4459594bb8012553205c58b9003602884544b9003a02884544
5958b908970036455258b9003608974459594bb8040153205c58b9014000
3a4544b13a3a45445958b91ee00140455258b901401ee04459594bb00c53
205c58b13b3b4544b1333b45445958b1123b455258b13b124459594bb031
53205c58b13b3b4544b1213b45445958b1503b455258b13b504459594bb0
3953205c58b13b3b4544b1353b45445958b15d3b455258b13b5d4459592b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b65422b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b45695342014b5058b108004259435c58b1080042
591610703eb0124358b911a63d851bba011b03d9000b2b59b00a2342b00b
2342003f3f182b103c012f4bb00d5458b90001ffb038594bb00c5458b900
01ffb03859060cb0062342b0072342b0124358b93b21187e1bba040001a8
000b2b59b00c2342b00d2342b0124358b92d412d411bba04000400000b2b
59b00e2342b00f2342b0124358b9187e3b211bba01a80400000b2b59b010
2342b011234200184569444569441845694473737373742b454474747575
75757575757500757575757474747573732b451869447474451869447474
74747575752b2b0000454445447373737475002b2b73752b2b732b2b2b2b
2b2b2b2b2b75732b002b2b4569442b2b000000>
[291 ] AllocGlyphStorage
]def 
108 44 
PrepFor2015
Type42DictEnd
1 118 1 <000300afffe507510134000b00170023003e401118411e0c4112311e0041
06311e0b1b4121b8039ab20f4115b8039ab50341091924c6b9015c00182b
4e10f44dfdf6fdf6ed003ff4ed10f4ed10ed313001321615140623222635
343605321615140623222635343605321615140623222635343601554661
624545616102f04561614545616102f04660614545616101346245456161
45456201614545616145456102614545616145456100>GFNBAA+Times#20New#20Roman AddT42Char 
1 0 0 <0002011c0000051c050000030007004db10201bb010f000600070272b200
0504b8010fb403000a0704b8010fb5010019080605bf010f000200030144
00090120012b00182b10f63cfd3c4e10f43c4dfd3c003f3cfd3c10fc3cfd
3c31302111211125211121011c0400fc2003c0fc400500fb002004c0>GFNBAA+Times#20New#20Roman AddT42Char 
GFNBAA+Times#20New#20Roman /CharStrings get begin
/g1 1 def
end
GFNBAA+Times#20New#20Roman /Encoding get
dup 32 /g1 put
pop
end
%ADOEndSubsetFont
/DGXVTV+Times#20New#20Roman /GFNBAA+Times#20New#20Roman findfont ct_VMDictPut
/DGXVTV+Times#20New#20Roman*1 
[32{/.notdef}rp /g1 223{/.notdef}rp]
DGXVTV+Times#20New#20Roman nf
DGXVTV+Times#20New#20Roman*1 [20.04 0 0 -20.04 0 0 ]msf
546.591 308.409 mo
( )sh
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 ]]
] del_res
/DGXVTV+Times#20New#20Roman*1 uf
/DGXVTV+Times#20New#20Roman uf
/GFNBAA+Times#20New#20Roman uf
/DGXVTU+Times#20New#20Roman*1 uf
/DGXVTU+Times#20New#20Roman uf
/QJJAAA+Times#20New#20Roman uf
/DGXVTT+Times#20New#20Roman*1 uf
/DGXVTT+Times#20New#20Roman uf
/HIBBAA+Times#20New#20Roman uf
/DGXVTS+Times#20New#20Roman*1 uf
/DGXVTS+Times#20New#20Roman uf
/PBAAAA+Times#20New#20Roman uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
